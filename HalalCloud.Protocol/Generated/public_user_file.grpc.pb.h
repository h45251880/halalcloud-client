// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: public_user_file.proto
#ifndef GRPC_public_5fuser_5ffile_2eproto__INCLUDED
#define GRPC_public_5fuser_5ffile_2eproto__INCLUDED

#include "public_user_file.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace v6 {
namespace services {
namespace pub {

class PubUserFile final {
 public:
  static constexpr char const* service_full_name() {
    return "v6.services.pub.PubUserFile";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status Create(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::v6::services::pub::File* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::File>> AsyncCreate(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::File>>(AsyncCreateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::File>> PrepareAsyncCreate(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::File>>(PrepareAsyncCreateRaw(context, request, cq));
    }
    virtual ::grpc::Status Get(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::v6::services::pub::File* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::File>> AsyncGet(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::File>>(AsyncGetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::File>> PrepareAsyncGet(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::File>>(PrepareAsyncGetRaw(context, request, cq));
    }
    // rpc Update (File) returns (File) {}
    virtual ::grpc::Status Rename(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::v6::services::pub::BatchOperationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>> AsyncRename(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>>(AsyncRenameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>> PrepareAsyncRename(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>>(PrepareAsyncRenameRaw(context, request, cq));
    }
    virtual ::grpc::Status Trash(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::v6::services::pub::BatchOperationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>> AsyncTrash(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>>(AsyncTrashRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>> PrepareAsyncTrash(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>>(PrepareAsyncTrashRaw(context, request, cq));
    }
    virtual ::grpc::Status Move(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::v6::services::pub::BatchOperationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>> AsyncMove(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>>(AsyncMoveRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>> PrepareAsyncMove(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>>(PrepareAsyncMoveRaw(context, request, cq));
    }
    virtual ::grpc::Status Copy(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::v6::services::pub::BatchOperationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>> AsyncCopy(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>>(AsyncCopyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>> PrepareAsyncCopy(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>>(PrepareAsyncCopyRaw(context, request, cq));
    }
    virtual ::grpc::Status Delete(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::v6::services::pub::BatchOperationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>> AsyncDelete(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>>(AsyncDeleteRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>> PrepareAsyncDelete(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>>(PrepareAsyncDeleteRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteTrash(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::v6::services::pub::BatchOperationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>> AsyncDeleteTrash(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>>(AsyncDeleteTrashRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>> PrepareAsyncDeleteTrash(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>>(PrepareAsyncDeleteTrashRaw(context, request, cq));
    }
    virtual ::grpc::Status Recover(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::v6::services::pub::BatchOperationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>> AsyncRecover(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>>(AsyncRecoverRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>> PrepareAsyncRecover(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>>(PrepareAsyncRecoverRaw(context, request, cq));
    }
    virtual ::grpc::Status BatchOperation(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::v6::services::pub::BatchOperationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>> AsyncBatchOperation(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>>(AsyncBatchOperationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>> PrepareAsyncBatchOperation(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>>(PrepareAsyncBatchOperationRaw(context, request, cq));
    }
    virtual ::grpc::Status List(::grpc::ClientContext* context, const ::v6::services::pub::FileListRequest& request, ::v6::services::pub::FileListResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::FileListResponse>> AsyncList(::grpc::ClientContext* context, const ::v6::services::pub::FileListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::FileListResponse>>(AsyncListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::FileListResponse>> PrepareAsyncList(::grpc::ClientContext* context, const ::v6::services::pub::FileListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::FileListResponse>>(PrepareAsyncListRaw(context, request, cq));
    }
    virtual ::grpc::Status ListTrash(::grpc::ClientContext* context, const ::v6::services::pub::FileListRequest& request, ::v6::services::pub::FileListResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::FileListResponse>> AsyncListTrash(::grpc::ClientContext* context, const ::v6::services::pub::FileListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::FileListResponse>>(AsyncListTrashRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::FileListResponse>> PrepareAsyncListTrash(::grpc::ClientContext* context, const ::v6::services::pub::FileListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::FileListResponse>>(PrepareAsyncListTrashRaw(context, request, cq));
    }
    virtual ::grpc::Status Search(::grpc::ClientContext* context, const ::v6::services::pub::SearchRequest& request, ::v6::services::pub::FileListResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::FileListResponse>> AsyncSearch(::grpc::ClientContext* context, const ::v6::services::pub::SearchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::FileListResponse>>(AsyncSearchRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::FileListResponse>> PrepareAsyncSearch(::grpc::ClientContext* context, const ::v6::services::pub::SearchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::FileListResponse>>(PrepareAsyncSearchRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateManageRTCOffer(::grpc::ClientContext* context, const ::v6::services::pub::ManageRTCRequest& request, ::v6::services::pub::ManageRTCResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::ManageRTCResponse>> AsyncCreateManageRTCOffer(::grpc::ClientContext* context, const ::v6::services::pub::ManageRTCRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::ManageRTCResponse>>(AsyncCreateManageRTCOfferRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::ManageRTCResponse>> PrepareAsyncCreateManageRTCOffer(::grpc::ClientContext* context, const ::v6::services::pub::ManageRTCRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::ManageRTCResponse>>(PrepareAsyncCreateManageRTCOfferRaw(context, request, cq));
    }
    virtual ::grpc::Status SendClientIceCandidate(::grpc::ClientContext* context, const ::v6::services::pub::SendIceCandidateRequest& request, ::v6::services::pub::SendIceCandidateResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::SendIceCandidateResponse>> AsyncSendClientIceCandidate(::grpc::ClientContext* context, const ::v6::services::pub::SendIceCandidateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::SendIceCandidateResponse>>(AsyncSendClientIceCandidateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::SendIceCandidateResponse>> PrepareAsyncSendClientIceCandidate(::grpc::ClientContext* context, const ::v6::services::pub::SendIceCandidateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::SendIceCandidateResponse>>(PrepareAsyncSendClientIceCandidateRaw(context, request, cq));
    }
    virtual ::grpc::Status GetServerIceCandidate(::grpc::ClientContext* context, const ::v6::services::pub::GetIceCandidateRequest& request, ::v6::services::pub::GetIceCandidateResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::GetIceCandidateResponse>> AsyncGetServerIceCandidate(::grpc::ClientContext* context, const ::v6::services::pub::GetIceCandidateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::GetIceCandidateResponse>>(AsyncGetServerIceCandidateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::GetIceCandidateResponse>> PrepareAsyncGetServerIceCandidate(::grpc::ClientContext* context, const ::v6::services::pub::GetIceCandidateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::GetIceCandidateResponse>>(PrepareAsyncGetServerIceCandidateRaw(context, request, cq));
    }
    virtual ::grpc::Status ParseFileSlice(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::v6::services::pub::ParseFileSliceResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::ParseFileSliceResponse>> AsyncParseFileSlice(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::ParseFileSliceResponse>>(AsyncParseFileSliceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::ParseFileSliceResponse>> PrepareAsyncParseFileSlice(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::ParseFileSliceResponse>>(PrepareAsyncParseFileSliceRaw(context, request, cq));
    }
    virtual ::grpc::Status GetSliceDownloadAddress(::grpc::ClientContext* context, const ::v6::services::pub::SliceDownloadAddressRequest& request, ::v6::services::pub::SliceDownloadAddressResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::SliceDownloadAddressResponse>> AsyncGetSliceDownloadAddress(::grpc::ClientContext* context, const ::v6::services::pub::SliceDownloadAddressRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::SliceDownloadAddressResponse>>(AsyncGetSliceDownloadAddressRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::SliceDownloadAddressResponse>> PrepareAsyncGetSliceDownloadAddress(::grpc::ClientContext* context, const ::v6::services::pub::SliceDownloadAddressRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::SliceDownloadAddressResponse>>(PrepareAsyncGetSliceDownloadAddressRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void Create(::grpc::ClientContext* context, const ::v6::services::pub::File* request, ::v6::services::pub::File* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Create(::grpc::ClientContext* context, const ::v6::services::pub::File* request, ::v6::services::pub::File* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Get(::grpc::ClientContext* context, const ::v6::services::pub::File* request, ::v6::services::pub::File* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Get(::grpc::ClientContext* context, const ::v6::services::pub::File* request, ::v6::services::pub::File* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // rpc Update (File) returns (File) {}
      virtual void Rename(::grpc::ClientContext* context, const ::v6::services::pub::File* request, ::v6::services::pub::BatchOperationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Rename(::grpc::ClientContext* context, const ::v6::services::pub::File* request, ::v6::services::pub::BatchOperationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Trash(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Trash(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Move(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Move(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Copy(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Copy(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Delete(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Delete(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteTrash(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteTrash(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Recover(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Recover(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void BatchOperation(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void BatchOperation(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void List(::grpc::ClientContext* context, const ::v6::services::pub::FileListRequest* request, ::v6::services::pub::FileListResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void List(::grpc::ClientContext* context, const ::v6::services::pub::FileListRequest* request, ::v6::services::pub::FileListResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListTrash(::grpc::ClientContext* context, const ::v6::services::pub::FileListRequest* request, ::v6::services::pub::FileListResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListTrash(::grpc::ClientContext* context, const ::v6::services::pub::FileListRequest* request, ::v6::services::pub::FileListResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Search(::grpc::ClientContext* context, const ::v6::services::pub::SearchRequest* request, ::v6::services::pub::FileListResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Search(::grpc::ClientContext* context, const ::v6::services::pub::SearchRequest* request, ::v6::services::pub::FileListResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateManageRTCOffer(::grpc::ClientContext* context, const ::v6::services::pub::ManageRTCRequest* request, ::v6::services::pub::ManageRTCResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateManageRTCOffer(::grpc::ClientContext* context, const ::v6::services::pub::ManageRTCRequest* request, ::v6::services::pub::ManageRTCResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SendClientIceCandidate(::grpc::ClientContext* context, const ::v6::services::pub::SendIceCandidateRequest* request, ::v6::services::pub::SendIceCandidateResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendClientIceCandidate(::grpc::ClientContext* context, const ::v6::services::pub::SendIceCandidateRequest* request, ::v6::services::pub::SendIceCandidateResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetServerIceCandidate(::grpc::ClientContext* context, const ::v6::services::pub::GetIceCandidateRequest* request, ::v6::services::pub::GetIceCandidateResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetServerIceCandidate(::grpc::ClientContext* context, const ::v6::services::pub::GetIceCandidateRequest* request, ::v6::services::pub::GetIceCandidateResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ParseFileSlice(::grpc::ClientContext* context, const ::v6::services::pub::File* request, ::v6::services::pub::ParseFileSliceResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ParseFileSlice(::grpc::ClientContext* context, const ::v6::services::pub::File* request, ::v6::services::pub::ParseFileSliceResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetSliceDownloadAddress(::grpc::ClientContext* context, const ::v6::services::pub::SliceDownloadAddressRequest* request, ::v6::services::pub::SliceDownloadAddressResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetSliceDownloadAddress(::grpc::ClientContext* context, const ::v6::services::pub::SliceDownloadAddressRequest* request, ::v6::services::pub::SliceDownloadAddressResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::File>* AsyncCreateRaw(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::File>* PrepareAsyncCreateRaw(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::File>* AsyncGetRaw(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::File>* PrepareAsyncGetRaw(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>* AsyncRenameRaw(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>* PrepareAsyncRenameRaw(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>* AsyncTrashRaw(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>* PrepareAsyncTrashRaw(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>* AsyncMoveRaw(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>* PrepareAsyncMoveRaw(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>* AsyncCopyRaw(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>* PrepareAsyncCopyRaw(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>* AsyncDeleteRaw(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>* PrepareAsyncDeleteRaw(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>* AsyncDeleteTrashRaw(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>* PrepareAsyncDeleteTrashRaw(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>* AsyncRecoverRaw(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>* PrepareAsyncRecoverRaw(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>* AsyncBatchOperationRaw(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::BatchOperationResponse>* PrepareAsyncBatchOperationRaw(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::FileListResponse>* AsyncListRaw(::grpc::ClientContext* context, const ::v6::services::pub::FileListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::FileListResponse>* PrepareAsyncListRaw(::grpc::ClientContext* context, const ::v6::services::pub::FileListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::FileListResponse>* AsyncListTrashRaw(::grpc::ClientContext* context, const ::v6::services::pub::FileListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::FileListResponse>* PrepareAsyncListTrashRaw(::grpc::ClientContext* context, const ::v6::services::pub::FileListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::FileListResponse>* AsyncSearchRaw(::grpc::ClientContext* context, const ::v6::services::pub::SearchRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::FileListResponse>* PrepareAsyncSearchRaw(::grpc::ClientContext* context, const ::v6::services::pub::SearchRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::ManageRTCResponse>* AsyncCreateManageRTCOfferRaw(::grpc::ClientContext* context, const ::v6::services::pub::ManageRTCRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::ManageRTCResponse>* PrepareAsyncCreateManageRTCOfferRaw(::grpc::ClientContext* context, const ::v6::services::pub::ManageRTCRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::SendIceCandidateResponse>* AsyncSendClientIceCandidateRaw(::grpc::ClientContext* context, const ::v6::services::pub::SendIceCandidateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::SendIceCandidateResponse>* PrepareAsyncSendClientIceCandidateRaw(::grpc::ClientContext* context, const ::v6::services::pub::SendIceCandidateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::GetIceCandidateResponse>* AsyncGetServerIceCandidateRaw(::grpc::ClientContext* context, const ::v6::services::pub::GetIceCandidateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::GetIceCandidateResponse>* PrepareAsyncGetServerIceCandidateRaw(::grpc::ClientContext* context, const ::v6::services::pub::GetIceCandidateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::ParseFileSliceResponse>* AsyncParseFileSliceRaw(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::ParseFileSliceResponse>* PrepareAsyncParseFileSliceRaw(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::SliceDownloadAddressResponse>* AsyncGetSliceDownloadAddressRaw(::grpc::ClientContext* context, const ::v6::services::pub::SliceDownloadAddressRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v6::services::pub::SliceDownloadAddressResponse>* PrepareAsyncGetSliceDownloadAddressRaw(::grpc::ClientContext* context, const ::v6::services::pub::SliceDownloadAddressRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status Create(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::v6::services::pub::File* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::File>> AsyncCreate(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::File>>(AsyncCreateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::File>> PrepareAsyncCreate(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::File>>(PrepareAsyncCreateRaw(context, request, cq));
    }
    ::grpc::Status Get(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::v6::services::pub::File* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::File>> AsyncGet(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::File>>(AsyncGetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::File>> PrepareAsyncGet(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::File>>(PrepareAsyncGetRaw(context, request, cq));
    }
    ::grpc::Status Rename(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::v6::services::pub::BatchOperationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>> AsyncRename(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>>(AsyncRenameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>> PrepareAsyncRename(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>>(PrepareAsyncRenameRaw(context, request, cq));
    }
    ::grpc::Status Trash(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::v6::services::pub::BatchOperationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>> AsyncTrash(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>>(AsyncTrashRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>> PrepareAsyncTrash(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>>(PrepareAsyncTrashRaw(context, request, cq));
    }
    ::grpc::Status Move(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::v6::services::pub::BatchOperationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>> AsyncMove(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>>(AsyncMoveRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>> PrepareAsyncMove(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>>(PrepareAsyncMoveRaw(context, request, cq));
    }
    ::grpc::Status Copy(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::v6::services::pub::BatchOperationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>> AsyncCopy(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>>(AsyncCopyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>> PrepareAsyncCopy(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>>(PrepareAsyncCopyRaw(context, request, cq));
    }
    ::grpc::Status Delete(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::v6::services::pub::BatchOperationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>> AsyncDelete(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>>(AsyncDeleteRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>> PrepareAsyncDelete(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>>(PrepareAsyncDeleteRaw(context, request, cq));
    }
    ::grpc::Status DeleteTrash(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::v6::services::pub::BatchOperationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>> AsyncDeleteTrash(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>>(AsyncDeleteTrashRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>> PrepareAsyncDeleteTrash(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>>(PrepareAsyncDeleteTrashRaw(context, request, cq));
    }
    ::grpc::Status Recover(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::v6::services::pub::BatchOperationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>> AsyncRecover(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>>(AsyncRecoverRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>> PrepareAsyncRecover(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>>(PrepareAsyncRecoverRaw(context, request, cq));
    }
    ::grpc::Status BatchOperation(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::v6::services::pub::BatchOperationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>> AsyncBatchOperation(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>>(AsyncBatchOperationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>> PrepareAsyncBatchOperation(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>>(PrepareAsyncBatchOperationRaw(context, request, cq));
    }
    ::grpc::Status List(::grpc::ClientContext* context, const ::v6::services::pub::FileListRequest& request, ::v6::services::pub::FileListResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::FileListResponse>> AsyncList(::grpc::ClientContext* context, const ::v6::services::pub::FileListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::FileListResponse>>(AsyncListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::FileListResponse>> PrepareAsyncList(::grpc::ClientContext* context, const ::v6::services::pub::FileListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::FileListResponse>>(PrepareAsyncListRaw(context, request, cq));
    }
    ::grpc::Status ListTrash(::grpc::ClientContext* context, const ::v6::services::pub::FileListRequest& request, ::v6::services::pub::FileListResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::FileListResponse>> AsyncListTrash(::grpc::ClientContext* context, const ::v6::services::pub::FileListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::FileListResponse>>(AsyncListTrashRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::FileListResponse>> PrepareAsyncListTrash(::grpc::ClientContext* context, const ::v6::services::pub::FileListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::FileListResponse>>(PrepareAsyncListTrashRaw(context, request, cq));
    }
    ::grpc::Status Search(::grpc::ClientContext* context, const ::v6::services::pub::SearchRequest& request, ::v6::services::pub::FileListResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::FileListResponse>> AsyncSearch(::grpc::ClientContext* context, const ::v6::services::pub::SearchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::FileListResponse>>(AsyncSearchRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::FileListResponse>> PrepareAsyncSearch(::grpc::ClientContext* context, const ::v6::services::pub::SearchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::FileListResponse>>(PrepareAsyncSearchRaw(context, request, cq));
    }
    ::grpc::Status CreateManageRTCOffer(::grpc::ClientContext* context, const ::v6::services::pub::ManageRTCRequest& request, ::v6::services::pub::ManageRTCResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::ManageRTCResponse>> AsyncCreateManageRTCOffer(::grpc::ClientContext* context, const ::v6::services::pub::ManageRTCRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::ManageRTCResponse>>(AsyncCreateManageRTCOfferRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::ManageRTCResponse>> PrepareAsyncCreateManageRTCOffer(::grpc::ClientContext* context, const ::v6::services::pub::ManageRTCRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::ManageRTCResponse>>(PrepareAsyncCreateManageRTCOfferRaw(context, request, cq));
    }
    ::grpc::Status SendClientIceCandidate(::grpc::ClientContext* context, const ::v6::services::pub::SendIceCandidateRequest& request, ::v6::services::pub::SendIceCandidateResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::SendIceCandidateResponse>> AsyncSendClientIceCandidate(::grpc::ClientContext* context, const ::v6::services::pub::SendIceCandidateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::SendIceCandidateResponse>>(AsyncSendClientIceCandidateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::SendIceCandidateResponse>> PrepareAsyncSendClientIceCandidate(::grpc::ClientContext* context, const ::v6::services::pub::SendIceCandidateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::SendIceCandidateResponse>>(PrepareAsyncSendClientIceCandidateRaw(context, request, cq));
    }
    ::grpc::Status GetServerIceCandidate(::grpc::ClientContext* context, const ::v6::services::pub::GetIceCandidateRequest& request, ::v6::services::pub::GetIceCandidateResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::GetIceCandidateResponse>> AsyncGetServerIceCandidate(::grpc::ClientContext* context, const ::v6::services::pub::GetIceCandidateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::GetIceCandidateResponse>>(AsyncGetServerIceCandidateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::GetIceCandidateResponse>> PrepareAsyncGetServerIceCandidate(::grpc::ClientContext* context, const ::v6::services::pub::GetIceCandidateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::GetIceCandidateResponse>>(PrepareAsyncGetServerIceCandidateRaw(context, request, cq));
    }
    ::grpc::Status ParseFileSlice(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::v6::services::pub::ParseFileSliceResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::ParseFileSliceResponse>> AsyncParseFileSlice(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::ParseFileSliceResponse>>(AsyncParseFileSliceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::ParseFileSliceResponse>> PrepareAsyncParseFileSlice(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::ParseFileSliceResponse>>(PrepareAsyncParseFileSliceRaw(context, request, cq));
    }
    ::grpc::Status GetSliceDownloadAddress(::grpc::ClientContext* context, const ::v6::services::pub::SliceDownloadAddressRequest& request, ::v6::services::pub::SliceDownloadAddressResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::SliceDownloadAddressResponse>> AsyncGetSliceDownloadAddress(::grpc::ClientContext* context, const ::v6::services::pub::SliceDownloadAddressRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::SliceDownloadAddressResponse>>(AsyncGetSliceDownloadAddressRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::SliceDownloadAddressResponse>> PrepareAsyncGetSliceDownloadAddress(::grpc::ClientContext* context, const ::v6::services::pub::SliceDownloadAddressRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v6::services::pub::SliceDownloadAddressResponse>>(PrepareAsyncGetSliceDownloadAddressRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void Create(::grpc::ClientContext* context, const ::v6::services::pub::File* request, ::v6::services::pub::File* response, std::function<void(::grpc::Status)>) override;
      void Create(::grpc::ClientContext* context, const ::v6::services::pub::File* request, ::v6::services::pub::File* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Get(::grpc::ClientContext* context, const ::v6::services::pub::File* request, ::v6::services::pub::File* response, std::function<void(::grpc::Status)>) override;
      void Get(::grpc::ClientContext* context, const ::v6::services::pub::File* request, ::v6::services::pub::File* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Rename(::grpc::ClientContext* context, const ::v6::services::pub::File* request, ::v6::services::pub::BatchOperationResponse* response, std::function<void(::grpc::Status)>) override;
      void Rename(::grpc::ClientContext* context, const ::v6::services::pub::File* request, ::v6::services::pub::BatchOperationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Trash(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response, std::function<void(::grpc::Status)>) override;
      void Trash(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Move(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response, std::function<void(::grpc::Status)>) override;
      void Move(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Copy(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response, std::function<void(::grpc::Status)>) override;
      void Copy(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Delete(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response, std::function<void(::grpc::Status)>) override;
      void Delete(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteTrash(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteTrash(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Recover(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response, std::function<void(::grpc::Status)>) override;
      void Recover(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void BatchOperation(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response, std::function<void(::grpc::Status)>) override;
      void BatchOperation(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void List(::grpc::ClientContext* context, const ::v6::services::pub::FileListRequest* request, ::v6::services::pub::FileListResponse* response, std::function<void(::grpc::Status)>) override;
      void List(::grpc::ClientContext* context, const ::v6::services::pub::FileListRequest* request, ::v6::services::pub::FileListResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListTrash(::grpc::ClientContext* context, const ::v6::services::pub::FileListRequest* request, ::v6::services::pub::FileListResponse* response, std::function<void(::grpc::Status)>) override;
      void ListTrash(::grpc::ClientContext* context, const ::v6::services::pub::FileListRequest* request, ::v6::services::pub::FileListResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Search(::grpc::ClientContext* context, const ::v6::services::pub::SearchRequest* request, ::v6::services::pub::FileListResponse* response, std::function<void(::grpc::Status)>) override;
      void Search(::grpc::ClientContext* context, const ::v6::services::pub::SearchRequest* request, ::v6::services::pub::FileListResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateManageRTCOffer(::grpc::ClientContext* context, const ::v6::services::pub::ManageRTCRequest* request, ::v6::services::pub::ManageRTCResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateManageRTCOffer(::grpc::ClientContext* context, const ::v6::services::pub::ManageRTCRequest* request, ::v6::services::pub::ManageRTCResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendClientIceCandidate(::grpc::ClientContext* context, const ::v6::services::pub::SendIceCandidateRequest* request, ::v6::services::pub::SendIceCandidateResponse* response, std::function<void(::grpc::Status)>) override;
      void SendClientIceCandidate(::grpc::ClientContext* context, const ::v6::services::pub::SendIceCandidateRequest* request, ::v6::services::pub::SendIceCandidateResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetServerIceCandidate(::grpc::ClientContext* context, const ::v6::services::pub::GetIceCandidateRequest* request, ::v6::services::pub::GetIceCandidateResponse* response, std::function<void(::grpc::Status)>) override;
      void GetServerIceCandidate(::grpc::ClientContext* context, const ::v6::services::pub::GetIceCandidateRequest* request, ::v6::services::pub::GetIceCandidateResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ParseFileSlice(::grpc::ClientContext* context, const ::v6::services::pub::File* request, ::v6::services::pub::ParseFileSliceResponse* response, std::function<void(::grpc::Status)>) override;
      void ParseFileSlice(::grpc::ClientContext* context, const ::v6::services::pub::File* request, ::v6::services::pub::ParseFileSliceResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetSliceDownloadAddress(::grpc::ClientContext* context, const ::v6::services::pub::SliceDownloadAddressRequest* request, ::v6::services::pub::SliceDownloadAddressResponse* response, std::function<void(::grpc::Status)>) override;
      void GetSliceDownloadAddress(::grpc::ClientContext* context, const ::v6::services::pub::SliceDownloadAddressRequest* request, ::v6::services::pub::SliceDownloadAddressResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::File>* AsyncCreateRaw(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::File>* PrepareAsyncCreateRaw(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::File>* AsyncGetRaw(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::File>* PrepareAsyncGetRaw(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>* AsyncRenameRaw(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>* PrepareAsyncRenameRaw(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>* AsyncTrashRaw(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>* PrepareAsyncTrashRaw(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>* AsyncMoveRaw(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>* PrepareAsyncMoveRaw(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>* AsyncCopyRaw(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>* PrepareAsyncCopyRaw(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>* AsyncDeleteRaw(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>* PrepareAsyncDeleteRaw(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>* AsyncDeleteTrashRaw(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>* PrepareAsyncDeleteTrashRaw(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>* AsyncRecoverRaw(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>* PrepareAsyncRecoverRaw(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>* AsyncBatchOperationRaw(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::BatchOperationResponse>* PrepareAsyncBatchOperationRaw(::grpc::ClientContext* context, const ::v6::services::pub::BatchOperationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::FileListResponse>* AsyncListRaw(::grpc::ClientContext* context, const ::v6::services::pub::FileListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::FileListResponse>* PrepareAsyncListRaw(::grpc::ClientContext* context, const ::v6::services::pub::FileListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::FileListResponse>* AsyncListTrashRaw(::grpc::ClientContext* context, const ::v6::services::pub::FileListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::FileListResponse>* PrepareAsyncListTrashRaw(::grpc::ClientContext* context, const ::v6::services::pub::FileListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::FileListResponse>* AsyncSearchRaw(::grpc::ClientContext* context, const ::v6::services::pub::SearchRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::FileListResponse>* PrepareAsyncSearchRaw(::grpc::ClientContext* context, const ::v6::services::pub::SearchRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::ManageRTCResponse>* AsyncCreateManageRTCOfferRaw(::grpc::ClientContext* context, const ::v6::services::pub::ManageRTCRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::ManageRTCResponse>* PrepareAsyncCreateManageRTCOfferRaw(::grpc::ClientContext* context, const ::v6::services::pub::ManageRTCRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::SendIceCandidateResponse>* AsyncSendClientIceCandidateRaw(::grpc::ClientContext* context, const ::v6::services::pub::SendIceCandidateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::SendIceCandidateResponse>* PrepareAsyncSendClientIceCandidateRaw(::grpc::ClientContext* context, const ::v6::services::pub::SendIceCandidateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::GetIceCandidateResponse>* AsyncGetServerIceCandidateRaw(::grpc::ClientContext* context, const ::v6::services::pub::GetIceCandidateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::GetIceCandidateResponse>* PrepareAsyncGetServerIceCandidateRaw(::grpc::ClientContext* context, const ::v6::services::pub::GetIceCandidateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::ParseFileSliceResponse>* AsyncParseFileSliceRaw(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::ParseFileSliceResponse>* PrepareAsyncParseFileSliceRaw(::grpc::ClientContext* context, const ::v6::services::pub::File& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::SliceDownloadAddressResponse>* AsyncGetSliceDownloadAddressRaw(::grpc::ClientContext* context, const ::v6::services::pub::SliceDownloadAddressRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v6::services::pub::SliceDownloadAddressResponse>* PrepareAsyncGetSliceDownloadAddressRaw(::grpc::ClientContext* context, const ::v6::services::pub::SliceDownloadAddressRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_Create_;
    const ::grpc::internal::RpcMethod rpcmethod_Get_;
    const ::grpc::internal::RpcMethod rpcmethod_Rename_;
    const ::grpc::internal::RpcMethod rpcmethod_Trash_;
    const ::grpc::internal::RpcMethod rpcmethod_Move_;
    const ::grpc::internal::RpcMethod rpcmethod_Copy_;
    const ::grpc::internal::RpcMethod rpcmethod_Delete_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteTrash_;
    const ::grpc::internal::RpcMethod rpcmethod_Recover_;
    const ::grpc::internal::RpcMethod rpcmethod_BatchOperation_;
    const ::grpc::internal::RpcMethod rpcmethod_List_;
    const ::grpc::internal::RpcMethod rpcmethod_ListTrash_;
    const ::grpc::internal::RpcMethod rpcmethod_Search_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateManageRTCOffer_;
    const ::grpc::internal::RpcMethod rpcmethod_SendClientIceCandidate_;
    const ::grpc::internal::RpcMethod rpcmethod_GetServerIceCandidate_;
    const ::grpc::internal::RpcMethod rpcmethod_ParseFileSlice_;
    const ::grpc::internal::RpcMethod rpcmethod_GetSliceDownloadAddress_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status Create(::grpc::ServerContext* context, const ::v6::services::pub::File* request, ::v6::services::pub::File* response);
    virtual ::grpc::Status Get(::grpc::ServerContext* context, const ::v6::services::pub::File* request, ::v6::services::pub::File* response);
    // rpc Update (File) returns (File) {}
    virtual ::grpc::Status Rename(::grpc::ServerContext* context, const ::v6::services::pub::File* request, ::v6::services::pub::BatchOperationResponse* response);
    virtual ::grpc::Status Trash(::grpc::ServerContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response);
    virtual ::grpc::Status Move(::grpc::ServerContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response);
    virtual ::grpc::Status Copy(::grpc::ServerContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response);
    virtual ::grpc::Status Delete(::grpc::ServerContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response);
    virtual ::grpc::Status DeleteTrash(::grpc::ServerContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response);
    virtual ::grpc::Status Recover(::grpc::ServerContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response);
    virtual ::grpc::Status BatchOperation(::grpc::ServerContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response);
    virtual ::grpc::Status List(::grpc::ServerContext* context, const ::v6::services::pub::FileListRequest* request, ::v6::services::pub::FileListResponse* response);
    virtual ::grpc::Status ListTrash(::grpc::ServerContext* context, const ::v6::services::pub::FileListRequest* request, ::v6::services::pub::FileListResponse* response);
    virtual ::grpc::Status Search(::grpc::ServerContext* context, const ::v6::services::pub::SearchRequest* request, ::v6::services::pub::FileListResponse* response);
    virtual ::grpc::Status CreateManageRTCOffer(::grpc::ServerContext* context, const ::v6::services::pub::ManageRTCRequest* request, ::v6::services::pub::ManageRTCResponse* response);
    virtual ::grpc::Status SendClientIceCandidate(::grpc::ServerContext* context, const ::v6::services::pub::SendIceCandidateRequest* request, ::v6::services::pub::SendIceCandidateResponse* response);
    virtual ::grpc::Status GetServerIceCandidate(::grpc::ServerContext* context, const ::v6::services::pub::GetIceCandidateRequest* request, ::v6::services::pub::GetIceCandidateResponse* response);
    virtual ::grpc::Status ParseFileSlice(::grpc::ServerContext* context, const ::v6::services::pub::File* request, ::v6::services::pub::ParseFileSliceResponse* response);
    virtual ::grpc::Status GetSliceDownloadAddress(::grpc::ServerContext* context, const ::v6::services::pub::SliceDownloadAddressRequest* request, ::v6::services::pub::SliceDownloadAddressResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_Create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Create() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_Create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Create(::grpc::ServerContext* /*context*/, const ::v6::services::pub::File* /*request*/, ::v6::services::pub::File* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreate(::grpc::ServerContext* context, ::v6::services::pub::File* request, ::grpc::ServerAsyncResponseWriter< ::v6::services::pub::File>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Get() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::v6::services::pub::File* /*request*/, ::v6::services::pub::File* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGet(::grpc::ServerContext* context, ::v6::services::pub::File* request, ::grpc::ServerAsyncResponseWriter< ::v6::services::pub::File>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Rename : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Rename() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_Rename() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Rename(::grpc::ServerContext* /*context*/, const ::v6::services::pub::File* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRename(::grpc::ServerContext* context, ::v6::services::pub::File* request, ::grpc::ServerAsyncResponseWriter< ::v6::services::pub::BatchOperationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Trash : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Trash() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_Trash() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Trash(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTrash(::grpc::ServerContext* context, ::v6::services::pub::BatchOperationRequest* request, ::grpc::ServerAsyncResponseWriter< ::v6::services::pub::BatchOperationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Move : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Move() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_Move() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Move(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMove(::grpc::ServerContext* context, ::v6::services::pub::BatchOperationRequest* request, ::grpc::ServerAsyncResponseWriter< ::v6::services::pub::BatchOperationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Copy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Copy() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_Copy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Copy(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCopy(::grpc::ServerContext* context, ::v6::services::pub::BatchOperationRequest* request, ::grpc::ServerAsyncResponseWriter< ::v6::services::pub::BatchOperationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Delete : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Delete() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_Delete() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Delete(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDelete(::grpc::ServerContext* context, ::v6::services::pub::BatchOperationRequest* request, ::grpc::ServerAsyncResponseWriter< ::v6::services::pub::BatchOperationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteTrash : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteTrash() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_DeleteTrash() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTrash(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteTrash(::grpc::ServerContext* context, ::v6::services::pub::BatchOperationRequest* request, ::grpc::ServerAsyncResponseWriter< ::v6::services::pub::BatchOperationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Recover : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Recover() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_Recover() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Recover(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRecover(::grpc::ServerContext* context, ::v6::services::pub::BatchOperationRequest* request, ::grpc::ServerAsyncResponseWriter< ::v6::services::pub::BatchOperationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_BatchOperation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_BatchOperation() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_BatchOperation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchOperation(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBatchOperation(::grpc::ServerContext* context, ::v6::services::pub::BatchOperationRequest* request, ::grpc::ServerAsyncResponseWriter< ::v6::services::pub::BatchOperationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_List : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_List() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_List() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status List(::grpc::ServerContext* /*context*/, const ::v6::services::pub::FileListRequest* /*request*/, ::v6::services::pub::FileListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestList(::grpc::ServerContext* context, ::v6::services::pub::FileListRequest* request, ::grpc::ServerAsyncResponseWriter< ::v6::services::pub::FileListResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListTrash : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListTrash() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_ListTrash() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTrash(::grpc::ServerContext* /*context*/, const ::v6::services::pub::FileListRequest* /*request*/, ::v6::services::pub::FileListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListTrash(::grpc::ServerContext* context, ::v6::services::pub::FileListRequest* request, ::grpc::ServerAsyncResponseWriter< ::v6::services::pub::FileListResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Search : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Search() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_Search() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Search(::grpc::ServerContext* /*context*/, const ::v6::services::pub::SearchRequest* /*request*/, ::v6::services::pub::FileListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearch(::grpc::ServerContext* context, ::v6::services::pub::SearchRequest* request, ::grpc::ServerAsyncResponseWriter< ::v6::services::pub::FileListResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateManageRTCOffer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateManageRTCOffer() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_CreateManageRTCOffer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateManageRTCOffer(::grpc::ServerContext* /*context*/, const ::v6::services::pub::ManageRTCRequest* /*request*/, ::v6::services::pub::ManageRTCResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateManageRTCOffer(::grpc::ServerContext* context, ::v6::services::pub::ManageRTCRequest* request, ::grpc::ServerAsyncResponseWriter< ::v6::services::pub::ManageRTCResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendClientIceCandidate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendClientIceCandidate() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_SendClientIceCandidate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendClientIceCandidate(::grpc::ServerContext* /*context*/, const ::v6::services::pub::SendIceCandidateRequest* /*request*/, ::v6::services::pub::SendIceCandidateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendClientIceCandidate(::grpc::ServerContext* context, ::v6::services::pub::SendIceCandidateRequest* request, ::grpc::ServerAsyncResponseWriter< ::v6::services::pub::SendIceCandidateResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetServerIceCandidate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetServerIceCandidate() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_GetServerIceCandidate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetServerIceCandidate(::grpc::ServerContext* /*context*/, const ::v6::services::pub::GetIceCandidateRequest* /*request*/, ::v6::services::pub::GetIceCandidateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetServerIceCandidate(::grpc::ServerContext* context, ::v6::services::pub::GetIceCandidateRequest* request, ::grpc::ServerAsyncResponseWriter< ::v6::services::pub::GetIceCandidateResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ParseFileSlice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ParseFileSlice() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_ParseFileSlice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ParseFileSlice(::grpc::ServerContext* /*context*/, const ::v6::services::pub::File* /*request*/, ::v6::services::pub::ParseFileSliceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestParseFileSlice(::grpc::ServerContext* context, ::v6::services::pub::File* request, ::grpc::ServerAsyncResponseWriter< ::v6::services::pub::ParseFileSliceResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetSliceDownloadAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetSliceDownloadAddress() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_GetSliceDownloadAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSliceDownloadAddress(::grpc::ServerContext* /*context*/, const ::v6::services::pub::SliceDownloadAddressRequest* /*request*/, ::v6::services::pub::SliceDownloadAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSliceDownloadAddress(::grpc::ServerContext* context, ::v6::services::pub::SliceDownloadAddressRequest* request, ::grpc::ServerAsyncResponseWriter< ::v6::services::pub::SliceDownloadAddressResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_Create<WithAsyncMethod_Get<WithAsyncMethod_Rename<WithAsyncMethod_Trash<WithAsyncMethod_Move<WithAsyncMethod_Copy<WithAsyncMethod_Delete<WithAsyncMethod_DeleteTrash<WithAsyncMethod_Recover<WithAsyncMethod_BatchOperation<WithAsyncMethod_List<WithAsyncMethod_ListTrash<WithAsyncMethod_Search<WithAsyncMethod_CreateManageRTCOffer<WithAsyncMethod_SendClientIceCandidate<WithAsyncMethod_GetServerIceCandidate<WithAsyncMethod_ParseFileSlice<WithAsyncMethod_GetSliceDownloadAddress<Service > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_Create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Create() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::File, ::v6::services::pub::File>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v6::services::pub::File* request, ::v6::services::pub::File* response) { return this->Create(context, request, response); }));}
    void SetMessageAllocatorFor_Create(
        ::grpc::MessageAllocator< ::v6::services::pub::File, ::v6::services::pub::File>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::File, ::v6::services::pub::File>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Create(::grpc::ServerContext* /*context*/, const ::v6::services::pub::File* /*request*/, ::v6::services::pub::File* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Create(
      ::grpc::CallbackServerContext* /*context*/, const ::v6::services::pub::File* /*request*/, ::v6::services::pub::File* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Get() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::File, ::v6::services::pub::File>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v6::services::pub::File* request, ::v6::services::pub::File* response) { return this->Get(context, request, response); }));}
    void SetMessageAllocatorFor_Get(
        ::grpc::MessageAllocator< ::v6::services::pub::File, ::v6::services::pub::File>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::File, ::v6::services::pub::File>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::v6::services::pub::File* /*request*/, ::v6::services::pub::File* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Get(
      ::grpc::CallbackServerContext* /*context*/, const ::v6::services::pub::File* /*request*/, ::v6::services::pub::File* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Rename : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Rename() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::File, ::v6::services::pub::BatchOperationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v6::services::pub::File* request, ::v6::services::pub::BatchOperationResponse* response) { return this->Rename(context, request, response); }));}
    void SetMessageAllocatorFor_Rename(
        ::grpc::MessageAllocator< ::v6::services::pub::File, ::v6::services::pub::BatchOperationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::File, ::v6::services::pub::BatchOperationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Rename() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Rename(::grpc::ServerContext* /*context*/, const ::v6::services::pub::File* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Rename(
      ::grpc::CallbackServerContext* /*context*/, const ::v6::services::pub::File* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Trash : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Trash() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response) { return this->Trash(context, request, response); }));}
    void SetMessageAllocatorFor_Trash(
        ::grpc::MessageAllocator< ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Trash() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Trash(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Trash(
      ::grpc::CallbackServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Move : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Move() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response) { return this->Move(context, request, response); }));}
    void SetMessageAllocatorFor_Move(
        ::grpc::MessageAllocator< ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Move() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Move(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Move(
      ::grpc::CallbackServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Copy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Copy() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response) { return this->Copy(context, request, response); }));}
    void SetMessageAllocatorFor_Copy(
        ::grpc::MessageAllocator< ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Copy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Copy(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Copy(
      ::grpc::CallbackServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Delete : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Delete() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response) { return this->Delete(context, request, response); }));}
    void SetMessageAllocatorFor_Delete(
        ::grpc::MessageAllocator< ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Delete() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Delete(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Delete(
      ::grpc::CallbackServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteTrash : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteTrash() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response) { return this->DeleteTrash(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteTrash(
        ::grpc::MessageAllocator< ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteTrash() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTrash(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteTrash(
      ::grpc::CallbackServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Recover : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Recover() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response) { return this->Recover(context, request, response); }));}
    void SetMessageAllocatorFor_Recover(
        ::grpc::MessageAllocator< ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Recover() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Recover(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Recover(
      ::grpc::CallbackServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_BatchOperation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_BatchOperation() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v6::services::pub::BatchOperationRequest* request, ::v6::services::pub::BatchOperationResponse* response) { return this->BatchOperation(context, request, response); }));}
    void SetMessageAllocatorFor_BatchOperation(
        ::grpc::MessageAllocator< ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_BatchOperation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchOperation(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* BatchOperation(
      ::grpc::CallbackServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_List : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_List() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::FileListRequest, ::v6::services::pub::FileListResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v6::services::pub::FileListRequest* request, ::v6::services::pub::FileListResponse* response) { return this->List(context, request, response); }));}
    void SetMessageAllocatorFor_List(
        ::grpc::MessageAllocator< ::v6::services::pub::FileListRequest, ::v6::services::pub::FileListResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::FileListRequest, ::v6::services::pub::FileListResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_List() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status List(::grpc::ServerContext* /*context*/, const ::v6::services::pub::FileListRequest* /*request*/, ::v6::services::pub::FileListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* List(
      ::grpc::CallbackServerContext* /*context*/, const ::v6::services::pub::FileListRequest* /*request*/, ::v6::services::pub::FileListResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListTrash : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListTrash() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::FileListRequest, ::v6::services::pub::FileListResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v6::services::pub::FileListRequest* request, ::v6::services::pub::FileListResponse* response) { return this->ListTrash(context, request, response); }));}
    void SetMessageAllocatorFor_ListTrash(
        ::grpc::MessageAllocator< ::v6::services::pub::FileListRequest, ::v6::services::pub::FileListResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::FileListRequest, ::v6::services::pub::FileListResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListTrash() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTrash(::grpc::ServerContext* /*context*/, const ::v6::services::pub::FileListRequest* /*request*/, ::v6::services::pub::FileListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListTrash(
      ::grpc::CallbackServerContext* /*context*/, const ::v6::services::pub::FileListRequest* /*request*/, ::v6::services::pub::FileListResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Search : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Search() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::SearchRequest, ::v6::services::pub::FileListResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v6::services::pub::SearchRequest* request, ::v6::services::pub::FileListResponse* response) { return this->Search(context, request, response); }));}
    void SetMessageAllocatorFor_Search(
        ::grpc::MessageAllocator< ::v6::services::pub::SearchRequest, ::v6::services::pub::FileListResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::SearchRequest, ::v6::services::pub::FileListResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Search() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Search(::grpc::ServerContext* /*context*/, const ::v6::services::pub::SearchRequest* /*request*/, ::v6::services::pub::FileListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Search(
      ::grpc::CallbackServerContext* /*context*/, const ::v6::services::pub::SearchRequest* /*request*/, ::v6::services::pub::FileListResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateManageRTCOffer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateManageRTCOffer() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::ManageRTCRequest, ::v6::services::pub::ManageRTCResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v6::services::pub::ManageRTCRequest* request, ::v6::services::pub::ManageRTCResponse* response) { return this->CreateManageRTCOffer(context, request, response); }));}
    void SetMessageAllocatorFor_CreateManageRTCOffer(
        ::grpc::MessageAllocator< ::v6::services::pub::ManageRTCRequest, ::v6::services::pub::ManageRTCResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::ManageRTCRequest, ::v6::services::pub::ManageRTCResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateManageRTCOffer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateManageRTCOffer(::grpc::ServerContext* /*context*/, const ::v6::services::pub::ManageRTCRequest* /*request*/, ::v6::services::pub::ManageRTCResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateManageRTCOffer(
      ::grpc::CallbackServerContext* /*context*/, const ::v6::services::pub::ManageRTCRequest* /*request*/, ::v6::services::pub::ManageRTCResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendClientIceCandidate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendClientIceCandidate() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::SendIceCandidateRequest, ::v6::services::pub::SendIceCandidateResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v6::services::pub::SendIceCandidateRequest* request, ::v6::services::pub::SendIceCandidateResponse* response) { return this->SendClientIceCandidate(context, request, response); }));}
    void SetMessageAllocatorFor_SendClientIceCandidate(
        ::grpc::MessageAllocator< ::v6::services::pub::SendIceCandidateRequest, ::v6::services::pub::SendIceCandidateResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::SendIceCandidateRequest, ::v6::services::pub::SendIceCandidateResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendClientIceCandidate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendClientIceCandidate(::grpc::ServerContext* /*context*/, const ::v6::services::pub::SendIceCandidateRequest* /*request*/, ::v6::services::pub::SendIceCandidateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendClientIceCandidate(
      ::grpc::CallbackServerContext* /*context*/, const ::v6::services::pub::SendIceCandidateRequest* /*request*/, ::v6::services::pub::SendIceCandidateResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetServerIceCandidate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetServerIceCandidate() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::GetIceCandidateRequest, ::v6::services::pub::GetIceCandidateResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v6::services::pub::GetIceCandidateRequest* request, ::v6::services::pub::GetIceCandidateResponse* response) { return this->GetServerIceCandidate(context, request, response); }));}
    void SetMessageAllocatorFor_GetServerIceCandidate(
        ::grpc::MessageAllocator< ::v6::services::pub::GetIceCandidateRequest, ::v6::services::pub::GetIceCandidateResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::GetIceCandidateRequest, ::v6::services::pub::GetIceCandidateResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetServerIceCandidate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetServerIceCandidate(::grpc::ServerContext* /*context*/, const ::v6::services::pub::GetIceCandidateRequest* /*request*/, ::v6::services::pub::GetIceCandidateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetServerIceCandidate(
      ::grpc::CallbackServerContext* /*context*/, const ::v6::services::pub::GetIceCandidateRequest* /*request*/, ::v6::services::pub::GetIceCandidateResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ParseFileSlice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ParseFileSlice() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::File, ::v6::services::pub::ParseFileSliceResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v6::services::pub::File* request, ::v6::services::pub::ParseFileSliceResponse* response) { return this->ParseFileSlice(context, request, response); }));}
    void SetMessageAllocatorFor_ParseFileSlice(
        ::grpc::MessageAllocator< ::v6::services::pub::File, ::v6::services::pub::ParseFileSliceResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::File, ::v6::services::pub::ParseFileSliceResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ParseFileSlice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ParseFileSlice(::grpc::ServerContext* /*context*/, const ::v6::services::pub::File* /*request*/, ::v6::services::pub::ParseFileSliceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ParseFileSlice(
      ::grpc::CallbackServerContext* /*context*/, const ::v6::services::pub::File* /*request*/, ::v6::services::pub::ParseFileSliceResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetSliceDownloadAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetSliceDownloadAddress() {
      ::grpc::Service::MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::SliceDownloadAddressRequest, ::v6::services::pub::SliceDownloadAddressResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v6::services::pub::SliceDownloadAddressRequest* request, ::v6::services::pub::SliceDownloadAddressResponse* response) { return this->GetSliceDownloadAddress(context, request, response); }));}
    void SetMessageAllocatorFor_GetSliceDownloadAddress(
        ::grpc::MessageAllocator< ::v6::services::pub::SliceDownloadAddressRequest, ::v6::services::pub::SliceDownloadAddressResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v6::services::pub::SliceDownloadAddressRequest, ::v6::services::pub::SliceDownloadAddressResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetSliceDownloadAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSliceDownloadAddress(::grpc::ServerContext* /*context*/, const ::v6::services::pub::SliceDownloadAddressRequest* /*request*/, ::v6::services::pub::SliceDownloadAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSliceDownloadAddress(
      ::grpc::CallbackServerContext* /*context*/, const ::v6::services::pub::SliceDownloadAddressRequest* /*request*/, ::v6::services::pub::SliceDownloadAddressResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_Create<WithCallbackMethod_Get<WithCallbackMethod_Rename<WithCallbackMethod_Trash<WithCallbackMethod_Move<WithCallbackMethod_Copy<WithCallbackMethod_Delete<WithCallbackMethod_DeleteTrash<WithCallbackMethod_Recover<WithCallbackMethod_BatchOperation<WithCallbackMethod_List<WithCallbackMethod_ListTrash<WithCallbackMethod_Search<WithCallbackMethod_CreateManageRTCOffer<WithCallbackMethod_SendClientIceCandidate<WithCallbackMethod_GetServerIceCandidate<WithCallbackMethod_ParseFileSlice<WithCallbackMethod_GetSliceDownloadAddress<Service > > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_Create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Create() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_Create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Create(::grpc::ServerContext* /*context*/, const ::v6::services::pub::File* /*request*/, ::v6::services::pub::File* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Get() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::v6::services::pub::File* /*request*/, ::v6::services::pub::File* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Rename : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Rename() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_Rename() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Rename(::grpc::ServerContext* /*context*/, const ::v6::services::pub::File* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Trash : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Trash() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_Trash() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Trash(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Move : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Move() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_Move() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Move(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Copy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Copy() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_Copy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Copy(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Delete : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Delete() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_Delete() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Delete(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteTrash : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteTrash() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_DeleteTrash() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTrash(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Recover : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Recover() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_Recover() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Recover(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_BatchOperation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_BatchOperation() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_BatchOperation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchOperation(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_List : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_List() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_List() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status List(::grpc::ServerContext* /*context*/, const ::v6::services::pub::FileListRequest* /*request*/, ::v6::services::pub::FileListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListTrash : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListTrash() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_ListTrash() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTrash(::grpc::ServerContext* /*context*/, const ::v6::services::pub::FileListRequest* /*request*/, ::v6::services::pub::FileListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Search : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Search() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_Search() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Search(::grpc::ServerContext* /*context*/, const ::v6::services::pub::SearchRequest* /*request*/, ::v6::services::pub::FileListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateManageRTCOffer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateManageRTCOffer() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_CreateManageRTCOffer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateManageRTCOffer(::grpc::ServerContext* /*context*/, const ::v6::services::pub::ManageRTCRequest* /*request*/, ::v6::services::pub::ManageRTCResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendClientIceCandidate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendClientIceCandidate() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_SendClientIceCandidate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendClientIceCandidate(::grpc::ServerContext* /*context*/, const ::v6::services::pub::SendIceCandidateRequest* /*request*/, ::v6::services::pub::SendIceCandidateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetServerIceCandidate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetServerIceCandidate() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_GetServerIceCandidate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetServerIceCandidate(::grpc::ServerContext* /*context*/, const ::v6::services::pub::GetIceCandidateRequest* /*request*/, ::v6::services::pub::GetIceCandidateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ParseFileSlice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ParseFileSlice() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_ParseFileSlice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ParseFileSlice(::grpc::ServerContext* /*context*/, const ::v6::services::pub::File* /*request*/, ::v6::services::pub::ParseFileSliceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetSliceDownloadAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetSliceDownloadAddress() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_GetSliceDownloadAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSliceDownloadAddress(::grpc::ServerContext* /*context*/, const ::v6::services::pub::SliceDownloadAddressRequest* /*request*/, ::v6::services::pub::SliceDownloadAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_Create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Create() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_Create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Create(::grpc::ServerContext* /*context*/, const ::v6::services::pub::File* /*request*/, ::v6::services::pub::File* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Get() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::v6::services::pub::File* /*request*/, ::v6::services::pub::File* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGet(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Rename : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Rename() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_Rename() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Rename(::grpc::ServerContext* /*context*/, const ::v6::services::pub::File* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRename(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Trash : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Trash() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_Trash() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Trash(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTrash(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Move : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Move() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_Move() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Move(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMove(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Copy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Copy() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_Copy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Copy(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCopy(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Delete : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Delete() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_Delete() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Delete(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDelete(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteTrash : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteTrash() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_DeleteTrash() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTrash(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteTrash(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Recover : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Recover() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_Recover() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Recover(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRecover(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_BatchOperation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_BatchOperation() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_BatchOperation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchOperation(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBatchOperation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_List : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_List() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_List() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status List(::grpc::ServerContext* /*context*/, const ::v6::services::pub::FileListRequest* /*request*/, ::v6::services::pub::FileListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestList(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListTrash : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListTrash() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_ListTrash() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTrash(::grpc::ServerContext* /*context*/, const ::v6::services::pub::FileListRequest* /*request*/, ::v6::services::pub::FileListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListTrash(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Search : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Search() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_Search() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Search(::grpc::ServerContext* /*context*/, const ::v6::services::pub::SearchRequest* /*request*/, ::v6::services::pub::FileListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearch(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateManageRTCOffer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateManageRTCOffer() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_CreateManageRTCOffer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateManageRTCOffer(::grpc::ServerContext* /*context*/, const ::v6::services::pub::ManageRTCRequest* /*request*/, ::v6::services::pub::ManageRTCResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateManageRTCOffer(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendClientIceCandidate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendClientIceCandidate() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_SendClientIceCandidate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendClientIceCandidate(::grpc::ServerContext* /*context*/, const ::v6::services::pub::SendIceCandidateRequest* /*request*/, ::v6::services::pub::SendIceCandidateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendClientIceCandidate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetServerIceCandidate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetServerIceCandidate() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_GetServerIceCandidate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetServerIceCandidate(::grpc::ServerContext* /*context*/, const ::v6::services::pub::GetIceCandidateRequest* /*request*/, ::v6::services::pub::GetIceCandidateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetServerIceCandidate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ParseFileSlice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ParseFileSlice() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_ParseFileSlice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ParseFileSlice(::grpc::ServerContext* /*context*/, const ::v6::services::pub::File* /*request*/, ::v6::services::pub::ParseFileSliceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestParseFileSlice(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetSliceDownloadAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetSliceDownloadAddress() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_GetSliceDownloadAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSliceDownloadAddress(::grpc::ServerContext* /*context*/, const ::v6::services::pub::SliceDownloadAddressRequest* /*request*/, ::v6::services::pub::SliceDownloadAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSliceDownloadAddress(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Create() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Create(context, request, response); }));
    }
    ~WithRawCallbackMethod_Create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Create(::grpc::ServerContext* /*context*/, const ::v6::services::pub::File* /*request*/, ::v6::services::pub::File* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Create(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Get() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Get(context, request, response); }));
    }
    ~WithRawCallbackMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::v6::services::pub::File* /*request*/, ::v6::services::pub::File* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Get(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Rename : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Rename() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Rename(context, request, response); }));
    }
    ~WithRawCallbackMethod_Rename() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Rename(::grpc::ServerContext* /*context*/, const ::v6::services::pub::File* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Rename(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Trash : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Trash() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Trash(context, request, response); }));
    }
    ~WithRawCallbackMethod_Trash() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Trash(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Trash(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Move : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Move() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Move(context, request, response); }));
    }
    ~WithRawCallbackMethod_Move() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Move(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Move(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Copy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Copy() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Copy(context, request, response); }));
    }
    ~WithRawCallbackMethod_Copy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Copy(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Copy(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Delete : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Delete() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Delete(context, request, response); }));
    }
    ~WithRawCallbackMethod_Delete() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Delete(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Delete(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteTrash : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteTrash() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteTrash(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteTrash() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTrash(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteTrash(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Recover : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Recover() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Recover(context, request, response); }));
    }
    ~WithRawCallbackMethod_Recover() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Recover(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Recover(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_BatchOperation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_BatchOperation() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->BatchOperation(context, request, response); }));
    }
    ~WithRawCallbackMethod_BatchOperation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchOperation(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* BatchOperation(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_List : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_List() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->List(context, request, response); }));
    }
    ~WithRawCallbackMethod_List() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status List(::grpc::ServerContext* /*context*/, const ::v6::services::pub::FileListRequest* /*request*/, ::v6::services::pub::FileListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* List(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListTrash : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListTrash() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListTrash(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListTrash() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTrash(::grpc::ServerContext* /*context*/, const ::v6::services::pub::FileListRequest* /*request*/, ::v6::services::pub::FileListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListTrash(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Search : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Search() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Search(context, request, response); }));
    }
    ~WithRawCallbackMethod_Search() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Search(::grpc::ServerContext* /*context*/, const ::v6::services::pub::SearchRequest* /*request*/, ::v6::services::pub::FileListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Search(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateManageRTCOffer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateManageRTCOffer() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateManageRTCOffer(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateManageRTCOffer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateManageRTCOffer(::grpc::ServerContext* /*context*/, const ::v6::services::pub::ManageRTCRequest* /*request*/, ::v6::services::pub::ManageRTCResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateManageRTCOffer(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendClientIceCandidate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendClientIceCandidate() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendClientIceCandidate(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendClientIceCandidate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendClientIceCandidate(::grpc::ServerContext* /*context*/, const ::v6::services::pub::SendIceCandidateRequest* /*request*/, ::v6::services::pub::SendIceCandidateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendClientIceCandidate(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetServerIceCandidate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetServerIceCandidate() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetServerIceCandidate(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetServerIceCandidate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetServerIceCandidate(::grpc::ServerContext* /*context*/, const ::v6::services::pub::GetIceCandidateRequest* /*request*/, ::v6::services::pub::GetIceCandidateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetServerIceCandidate(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ParseFileSlice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ParseFileSlice() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ParseFileSlice(context, request, response); }));
    }
    ~WithRawCallbackMethod_ParseFileSlice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ParseFileSlice(::grpc::ServerContext* /*context*/, const ::v6::services::pub::File* /*request*/, ::v6::services::pub::ParseFileSliceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ParseFileSlice(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetSliceDownloadAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetSliceDownloadAddress() {
      ::grpc::Service::MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetSliceDownloadAddress(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetSliceDownloadAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSliceDownloadAddress(::grpc::ServerContext* /*context*/, const ::v6::services::pub::SliceDownloadAddressRequest* /*request*/, ::v6::services::pub::SliceDownloadAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSliceDownloadAddress(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Create() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v6::services::pub::File, ::v6::services::pub::File>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v6::services::pub::File, ::v6::services::pub::File>* streamer) {
                       return this->StreamedCreate(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Create(::grpc::ServerContext* /*context*/, const ::v6::services::pub::File* /*request*/, ::v6::services::pub::File* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v6::services::pub::File,::v6::services::pub::File>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Get() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v6::services::pub::File, ::v6::services::pub::File>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v6::services::pub::File, ::v6::services::pub::File>* streamer) {
                       return this->StreamedGet(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::v6::services::pub::File* /*request*/, ::v6::services::pub::File* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v6::services::pub::File,::v6::services::pub::File>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Rename : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Rename() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v6::services::pub::File, ::v6::services::pub::BatchOperationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v6::services::pub::File, ::v6::services::pub::BatchOperationResponse>* streamer) {
                       return this->StreamedRename(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Rename() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Rename(::grpc::ServerContext* /*context*/, const ::v6::services::pub::File* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRename(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v6::services::pub::File,::v6::services::pub::BatchOperationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Trash : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Trash() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>* streamer) {
                       return this->StreamedTrash(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Trash() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Trash(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedTrash(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v6::services::pub::BatchOperationRequest,::v6::services::pub::BatchOperationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Move : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Move() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>* streamer) {
                       return this->StreamedMove(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Move() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Move(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedMove(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v6::services::pub::BatchOperationRequest,::v6::services::pub::BatchOperationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Copy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Copy() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>* streamer) {
                       return this->StreamedCopy(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Copy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Copy(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCopy(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v6::services::pub::BatchOperationRequest,::v6::services::pub::BatchOperationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Delete : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Delete() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>* streamer) {
                       return this->StreamedDelete(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Delete() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Delete(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDelete(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v6::services::pub::BatchOperationRequest,::v6::services::pub::BatchOperationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteTrash : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteTrash() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>* streamer) {
                       return this->StreamedDeleteTrash(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteTrash() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteTrash(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteTrash(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v6::services::pub::BatchOperationRequest,::v6::services::pub::BatchOperationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Recover : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Recover() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>* streamer) {
                       return this->StreamedRecover(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Recover() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Recover(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRecover(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v6::services::pub::BatchOperationRequest,::v6::services::pub::BatchOperationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_BatchOperation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_BatchOperation() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v6::services::pub::BatchOperationRequest, ::v6::services::pub::BatchOperationResponse>* streamer) {
                       return this->StreamedBatchOperation(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_BatchOperation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status BatchOperation(::grpc::ServerContext* /*context*/, const ::v6::services::pub::BatchOperationRequest* /*request*/, ::v6::services::pub::BatchOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedBatchOperation(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v6::services::pub::BatchOperationRequest,::v6::services::pub::BatchOperationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_List : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_List() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v6::services::pub::FileListRequest, ::v6::services::pub::FileListResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v6::services::pub::FileListRequest, ::v6::services::pub::FileListResponse>* streamer) {
                       return this->StreamedList(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_List() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status List(::grpc::ServerContext* /*context*/, const ::v6::services::pub::FileListRequest* /*request*/, ::v6::services::pub::FileListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedList(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v6::services::pub::FileListRequest,::v6::services::pub::FileListResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListTrash : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListTrash() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v6::services::pub::FileListRequest, ::v6::services::pub::FileListResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v6::services::pub::FileListRequest, ::v6::services::pub::FileListResponse>* streamer) {
                       return this->StreamedListTrash(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListTrash() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListTrash(::grpc::ServerContext* /*context*/, const ::v6::services::pub::FileListRequest* /*request*/, ::v6::services::pub::FileListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListTrash(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v6::services::pub::FileListRequest,::v6::services::pub::FileListResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Search : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Search() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v6::services::pub::SearchRequest, ::v6::services::pub::FileListResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v6::services::pub::SearchRequest, ::v6::services::pub::FileListResponse>* streamer) {
                       return this->StreamedSearch(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Search() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Search(::grpc::ServerContext* /*context*/, const ::v6::services::pub::SearchRequest* /*request*/, ::v6::services::pub::FileListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSearch(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v6::services::pub::SearchRequest,::v6::services::pub::FileListResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateManageRTCOffer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateManageRTCOffer() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v6::services::pub::ManageRTCRequest, ::v6::services::pub::ManageRTCResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v6::services::pub::ManageRTCRequest, ::v6::services::pub::ManageRTCResponse>* streamer) {
                       return this->StreamedCreateManageRTCOffer(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateManageRTCOffer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateManageRTCOffer(::grpc::ServerContext* /*context*/, const ::v6::services::pub::ManageRTCRequest* /*request*/, ::v6::services::pub::ManageRTCResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateManageRTCOffer(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v6::services::pub::ManageRTCRequest,::v6::services::pub::ManageRTCResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendClientIceCandidate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendClientIceCandidate() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v6::services::pub::SendIceCandidateRequest, ::v6::services::pub::SendIceCandidateResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v6::services::pub::SendIceCandidateRequest, ::v6::services::pub::SendIceCandidateResponse>* streamer) {
                       return this->StreamedSendClientIceCandidate(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendClientIceCandidate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendClientIceCandidate(::grpc::ServerContext* /*context*/, const ::v6::services::pub::SendIceCandidateRequest* /*request*/, ::v6::services::pub::SendIceCandidateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendClientIceCandidate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v6::services::pub::SendIceCandidateRequest,::v6::services::pub::SendIceCandidateResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetServerIceCandidate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetServerIceCandidate() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v6::services::pub::GetIceCandidateRequest, ::v6::services::pub::GetIceCandidateResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v6::services::pub::GetIceCandidateRequest, ::v6::services::pub::GetIceCandidateResponse>* streamer) {
                       return this->StreamedGetServerIceCandidate(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetServerIceCandidate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetServerIceCandidate(::grpc::ServerContext* /*context*/, const ::v6::services::pub::GetIceCandidateRequest* /*request*/, ::v6::services::pub::GetIceCandidateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetServerIceCandidate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v6::services::pub::GetIceCandidateRequest,::v6::services::pub::GetIceCandidateResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ParseFileSlice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ParseFileSlice() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v6::services::pub::File, ::v6::services::pub::ParseFileSliceResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v6::services::pub::File, ::v6::services::pub::ParseFileSliceResponse>* streamer) {
                       return this->StreamedParseFileSlice(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ParseFileSlice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ParseFileSlice(::grpc::ServerContext* /*context*/, const ::v6::services::pub::File* /*request*/, ::v6::services::pub::ParseFileSliceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedParseFileSlice(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v6::services::pub::File,::v6::services::pub::ParseFileSliceResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetSliceDownloadAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetSliceDownloadAddress() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v6::services::pub::SliceDownloadAddressRequest, ::v6::services::pub::SliceDownloadAddressResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v6::services::pub::SliceDownloadAddressRequest, ::v6::services::pub::SliceDownloadAddressResponse>* streamer) {
                       return this->StreamedGetSliceDownloadAddress(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetSliceDownloadAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetSliceDownloadAddress(::grpc::ServerContext* /*context*/, const ::v6::services::pub::SliceDownloadAddressRequest* /*request*/, ::v6::services::pub::SliceDownloadAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetSliceDownloadAddress(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v6::services::pub::SliceDownloadAddressRequest,::v6::services::pub::SliceDownloadAddressResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_Create<WithStreamedUnaryMethod_Get<WithStreamedUnaryMethod_Rename<WithStreamedUnaryMethod_Trash<WithStreamedUnaryMethod_Move<WithStreamedUnaryMethod_Copy<WithStreamedUnaryMethod_Delete<WithStreamedUnaryMethod_DeleteTrash<WithStreamedUnaryMethod_Recover<WithStreamedUnaryMethod_BatchOperation<WithStreamedUnaryMethod_List<WithStreamedUnaryMethod_ListTrash<WithStreamedUnaryMethod_Search<WithStreamedUnaryMethod_CreateManageRTCOffer<WithStreamedUnaryMethod_SendClientIceCandidate<WithStreamedUnaryMethod_GetServerIceCandidate<WithStreamedUnaryMethod_ParseFileSlice<WithStreamedUnaryMethod_GetSliceDownloadAddress<Service > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_Create<WithStreamedUnaryMethod_Get<WithStreamedUnaryMethod_Rename<WithStreamedUnaryMethod_Trash<WithStreamedUnaryMethod_Move<WithStreamedUnaryMethod_Copy<WithStreamedUnaryMethod_Delete<WithStreamedUnaryMethod_DeleteTrash<WithStreamedUnaryMethod_Recover<WithStreamedUnaryMethod_BatchOperation<WithStreamedUnaryMethod_List<WithStreamedUnaryMethod_ListTrash<WithStreamedUnaryMethod_Search<WithStreamedUnaryMethod_CreateManageRTCOffer<WithStreamedUnaryMethod_SendClientIceCandidate<WithStreamedUnaryMethod_GetServerIceCandidate<WithStreamedUnaryMethod_ParseFileSlice<WithStreamedUnaryMethod_GetSliceDownloadAddress<Service > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace pub
}  // namespace services
}  // namespace v6


#endif  // GRPC_public_5fuser_5ffile_2eproto__INCLUDED
