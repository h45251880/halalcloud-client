// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: user_svc.proto

#include "user_svc.pb.h"
#include "user_svc.grpc.pb.h"

#include <functional>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/impl/channel_interface.h>
#include <grpcpp/impl/client_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/rpc_service_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/sync_stream.h>
namespace v6 {
namespace services {
namespace pub {

static const char* PubUser_method_names[] = {
  "/v6.services.pub.PubUser/Get",
  "/v6.services.pub.PubUser/Login",
  "/v6.services.pub.PubUser/Refresh",
  "/v6.services.pub.PubUser/Logoff",
  "/v6.services.pub.PubUser/ResetPassword",
  "/v6.services.pub.PubUser/Register",
  "/v6.services.pub.PubUser/Delete",
  "/v6.services.pub.PubUser/SendSmsVerifyCode",
  "/v6.services.pub.PubUser/SendSmsVerifyCodeNotUser",
  "/v6.services.pub.PubUser/VerifyAuthToken",
  "/v6.services.pub.PubUser/CreateAuthToken",
};

std::unique_ptr< PubUser::Stub> PubUser::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< PubUser::Stub> stub(new PubUser::Stub(channel, options));
  return stub;
}

PubUser::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_Get_(PubUser_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_Login_(PubUser_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_Refresh_(PubUser_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_Logoff_(PubUser_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ResetPassword_(PubUser_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_Register_(PubUser_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_Delete_(PubUser_method_names[6], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SendSmsVerifyCode_(PubUser_method_names[7], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SendSmsVerifyCodeNotUser_(PubUser_method_names[8], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_VerifyAuthToken_(PubUser_method_names[9], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateAuthToken_(PubUser_method_names[10], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status PubUser::Stub::Get(::grpc::ClientContext* context, const ::v6::services::pub::User& request, ::v6::services::pub::User* response) {
  return ::grpc::internal::BlockingUnaryCall< ::v6::services::pub::User, ::v6::services::pub::User, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_Get_, context, request, response);
}

void PubUser::Stub::async::Get(::grpc::ClientContext* context, const ::v6::services::pub::User* request, ::v6::services::pub::User* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::v6::services::pub::User, ::v6::services::pub::User, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_Get_, context, request, response, std::move(f));
}

void PubUser::Stub::async::Get(::grpc::ClientContext* context, const ::v6::services::pub::User* request, ::v6::services::pub::User* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_Get_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::v6::services::pub::User>* PubUser::Stub::PrepareAsyncGetRaw(::grpc::ClientContext* context, const ::v6::services::pub::User& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::v6::services::pub::User, ::v6::services::pub::User, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_Get_, context, request);
}

::grpc::ClientAsyncResponseReader< ::v6::services::pub::User>* PubUser::Stub::AsyncGetRaw(::grpc::ClientContext* context, const ::v6::services::pub::User& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status PubUser::Stub::Login(::grpc::ClientContext* context, const ::v6::services::pub::LoginRequest& request, ::v6::services::pub::LoginResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::v6::services::pub::LoginRequest, ::v6::services::pub::LoginResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_Login_, context, request, response);
}

void PubUser::Stub::async::Login(::grpc::ClientContext* context, const ::v6::services::pub::LoginRequest* request, ::v6::services::pub::LoginResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::v6::services::pub::LoginRequest, ::v6::services::pub::LoginResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_Login_, context, request, response, std::move(f));
}

void PubUser::Stub::async::Login(::grpc::ClientContext* context, const ::v6::services::pub::LoginRequest* request, ::v6::services::pub::LoginResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_Login_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::v6::services::pub::LoginResponse>* PubUser::Stub::PrepareAsyncLoginRaw(::grpc::ClientContext* context, const ::v6::services::pub::LoginRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::v6::services::pub::LoginResponse, ::v6::services::pub::LoginRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_Login_, context, request);
}

::grpc::ClientAsyncResponseReader< ::v6::services::pub::LoginResponse>* PubUser::Stub::AsyncLoginRaw(::grpc::ClientContext* context, const ::v6::services::pub::LoginRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncLoginRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status PubUser::Stub::Refresh(::grpc::ClientContext* context, const ::v6::services::pub::Token& request, ::v6::services::pub::Token* response) {
  return ::grpc::internal::BlockingUnaryCall< ::v6::services::pub::Token, ::v6::services::pub::Token, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_Refresh_, context, request, response);
}

void PubUser::Stub::async::Refresh(::grpc::ClientContext* context, const ::v6::services::pub::Token* request, ::v6::services::pub::Token* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::v6::services::pub::Token, ::v6::services::pub::Token, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_Refresh_, context, request, response, std::move(f));
}

void PubUser::Stub::async::Refresh(::grpc::ClientContext* context, const ::v6::services::pub::Token* request, ::v6::services::pub::Token* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_Refresh_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::v6::services::pub::Token>* PubUser::Stub::PrepareAsyncRefreshRaw(::grpc::ClientContext* context, const ::v6::services::pub::Token& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::v6::services::pub::Token, ::v6::services::pub::Token, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_Refresh_, context, request);
}

::grpc::ClientAsyncResponseReader< ::v6::services::pub::Token>* PubUser::Stub::AsyncRefreshRaw(::grpc::ClientContext* context, const ::v6::services::pub::Token& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncRefreshRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status PubUser::Stub::Logoff(::grpc::ClientContext* context, const ::v6::services::pub::Token& request, ::v6::services::pub::User* response) {
  return ::grpc::internal::BlockingUnaryCall< ::v6::services::pub::Token, ::v6::services::pub::User, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_Logoff_, context, request, response);
}

void PubUser::Stub::async::Logoff(::grpc::ClientContext* context, const ::v6::services::pub::Token* request, ::v6::services::pub::User* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::v6::services::pub::Token, ::v6::services::pub::User, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_Logoff_, context, request, response, std::move(f));
}

void PubUser::Stub::async::Logoff(::grpc::ClientContext* context, const ::v6::services::pub::Token* request, ::v6::services::pub::User* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_Logoff_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::v6::services::pub::User>* PubUser::Stub::PrepareAsyncLogoffRaw(::grpc::ClientContext* context, const ::v6::services::pub::Token& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::v6::services::pub::User, ::v6::services::pub::Token, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_Logoff_, context, request);
}

::grpc::ClientAsyncResponseReader< ::v6::services::pub::User>* PubUser::Stub::AsyncLogoffRaw(::grpc::ClientContext* context, const ::v6::services::pub::Token& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncLogoffRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status PubUser::Stub::ResetPassword(::grpc::ClientContext* context, const ::v6::services::pub::LoginRequest& request, ::v6::services::pub::User* response) {
  return ::grpc::internal::BlockingUnaryCall< ::v6::services::pub::LoginRequest, ::v6::services::pub::User, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ResetPassword_, context, request, response);
}

void PubUser::Stub::async::ResetPassword(::grpc::ClientContext* context, const ::v6::services::pub::LoginRequest* request, ::v6::services::pub::User* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::v6::services::pub::LoginRequest, ::v6::services::pub::User, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ResetPassword_, context, request, response, std::move(f));
}

void PubUser::Stub::async::ResetPassword(::grpc::ClientContext* context, const ::v6::services::pub::LoginRequest* request, ::v6::services::pub::User* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ResetPassword_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::v6::services::pub::User>* PubUser::Stub::PrepareAsyncResetPasswordRaw(::grpc::ClientContext* context, const ::v6::services::pub::LoginRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::v6::services::pub::User, ::v6::services::pub::LoginRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ResetPassword_, context, request);
}

::grpc::ClientAsyncResponseReader< ::v6::services::pub::User>* PubUser::Stub::AsyncResetPasswordRaw(::grpc::ClientContext* context, const ::v6::services::pub::LoginRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncResetPasswordRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status PubUser::Stub::Register(::grpc::ClientContext* context, const ::v6::services::pub::RegisterRequest& request, ::v6::services::pub::User* response) {
  return ::grpc::internal::BlockingUnaryCall< ::v6::services::pub::RegisterRequest, ::v6::services::pub::User, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_Register_, context, request, response);
}

void PubUser::Stub::async::Register(::grpc::ClientContext* context, const ::v6::services::pub::RegisterRequest* request, ::v6::services::pub::User* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::v6::services::pub::RegisterRequest, ::v6::services::pub::User, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_Register_, context, request, response, std::move(f));
}

void PubUser::Stub::async::Register(::grpc::ClientContext* context, const ::v6::services::pub::RegisterRequest* request, ::v6::services::pub::User* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_Register_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::v6::services::pub::User>* PubUser::Stub::PrepareAsyncRegisterRaw(::grpc::ClientContext* context, const ::v6::services::pub::RegisterRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::v6::services::pub::User, ::v6::services::pub::RegisterRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_Register_, context, request);
}

::grpc::ClientAsyncResponseReader< ::v6::services::pub::User>* PubUser::Stub::AsyncRegisterRaw(::grpc::ClientContext* context, const ::v6::services::pub::RegisterRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncRegisterRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status PubUser::Stub::Delete(::grpc::ClientContext* context, const ::v6::services::pub::User& request, ::v6::services::pub::User* response) {
  return ::grpc::internal::BlockingUnaryCall< ::v6::services::pub::User, ::v6::services::pub::User, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_Delete_, context, request, response);
}

void PubUser::Stub::async::Delete(::grpc::ClientContext* context, const ::v6::services::pub::User* request, ::v6::services::pub::User* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::v6::services::pub::User, ::v6::services::pub::User, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_Delete_, context, request, response, std::move(f));
}

void PubUser::Stub::async::Delete(::grpc::ClientContext* context, const ::v6::services::pub::User* request, ::v6::services::pub::User* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_Delete_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::v6::services::pub::User>* PubUser::Stub::PrepareAsyncDeleteRaw(::grpc::ClientContext* context, const ::v6::services::pub::User& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::v6::services::pub::User, ::v6::services::pub::User, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_Delete_, context, request);
}

::grpc::ClientAsyncResponseReader< ::v6::services::pub::User>* PubUser::Stub::AsyncDeleteRaw(::grpc::ClientContext* context, const ::v6::services::pub::User& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status PubUser::Stub::SendSmsVerifyCode(::grpc::ClientContext* context, const ::v6::services::pub::SmsVeifyCodeSendRequest& request, ::v6::services::pub::SmsVeifyCodeSendResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::v6::services::pub::SmsVeifyCodeSendRequest, ::v6::services::pub::SmsVeifyCodeSendResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_SendSmsVerifyCode_, context, request, response);
}

void PubUser::Stub::async::SendSmsVerifyCode(::grpc::ClientContext* context, const ::v6::services::pub::SmsVeifyCodeSendRequest* request, ::v6::services::pub::SmsVeifyCodeSendResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::v6::services::pub::SmsVeifyCodeSendRequest, ::v6::services::pub::SmsVeifyCodeSendResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_SendSmsVerifyCode_, context, request, response, std::move(f));
}

void PubUser::Stub::async::SendSmsVerifyCode(::grpc::ClientContext* context, const ::v6::services::pub::SmsVeifyCodeSendRequest* request, ::v6::services::pub::SmsVeifyCodeSendResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_SendSmsVerifyCode_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::v6::services::pub::SmsVeifyCodeSendResponse>* PubUser::Stub::PrepareAsyncSendSmsVerifyCodeRaw(::grpc::ClientContext* context, const ::v6::services::pub::SmsVeifyCodeSendRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::v6::services::pub::SmsVeifyCodeSendResponse, ::v6::services::pub::SmsVeifyCodeSendRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_SendSmsVerifyCode_, context, request);
}

::grpc::ClientAsyncResponseReader< ::v6::services::pub::SmsVeifyCodeSendResponse>* PubUser::Stub::AsyncSendSmsVerifyCodeRaw(::grpc::ClientContext* context, const ::v6::services::pub::SmsVeifyCodeSendRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncSendSmsVerifyCodeRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status PubUser::Stub::SendSmsVerifyCodeNotUser(::grpc::ClientContext* context, const ::v6::services::pub::SmsVeifyCodeSendRequestNotUser& request, ::v6::services::pub::SmsVeifyCodeSendResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::v6::services::pub::SmsVeifyCodeSendRequestNotUser, ::v6::services::pub::SmsVeifyCodeSendResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_SendSmsVerifyCodeNotUser_, context, request, response);
}

void PubUser::Stub::async::SendSmsVerifyCodeNotUser(::grpc::ClientContext* context, const ::v6::services::pub::SmsVeifyCodeSendRequestNotUser* request, ::v6::services::pub::SmsVeifyCodeSendResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::v6::services::pub::SmsVeifyCodeSendRequestNotUser, ::v6::services::pub::SmsVeifyCodeSendResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_SendSmsVerifyCodeNotUser_, context, request, response, std::move(f));
}

void PubUser::Stub::async::SendSmsVerifyCodeNotUser(::grpc::ClientContext* context, const ::v6::services::pub::SmsVeifyCodeSendRequestNotUser* request, ::v6::services::pub::SmsVeifyCodeSendResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_SendSmsVerifyCodeNotUser_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::v6::services::pub::SmsVeifyCodeSendResponse>* PubUser::Stub::PrepareAsyncSendSmsVerifyCodeNotUserRaw(::grpc::ClientContext* context, const ::v6::services::pub::SmsVeifyCodeSendRequestNotUser& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::v6::services::pub::SmsVeifyCodeSendResponse, ::v6::services::pub::SmsVeifyCodeSendRequestNotUser, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_SendSmsVerifyCodeNotUser_, context, request);
}

::grpc::ClientAsyncResponseReader< ::v6::services::pub::SmsVeifyCodeSendResponse>* PubUser::Stub::AsyncSendSmsVerifyCodeNotUserRaw(::grpc::ClientContext* context, const ::v6::services::pub::SmsVeifyCodeSendRequestNotUser& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncSendSmsVerifyCodeNotUserRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status PubUser::Stub::VerifyAuthToken(::grpc::ClientContext* context, const ::v6::services::pub::LoginRequest& request, ::v6::services::pub::OauthTokenCheckResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::v6::services::pub::LoginRequest, ::v6::services::pub::OauthTokenCheckResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_VerifyAuthToken_, context, request, response);
}

void PubUser::Stub::async::VerifyAuthToken(::grpc::ClientContext* context, const ::v6::services::pub::LoginRequest* request, ::v6::services::pub::OauthTokenCheckResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::v6::services::pub::LoginRequest, ::v6::services::pub::OauthTokenCheckResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_VerifyAuthToken_, context, request, response, std::move(f));
}

void PubUser::Stub::async::VerifyAuthToken(::grpc::ClientContext* context, const ::v6::services::pub::LoginRequest* request, ::v6::services::pub::OauthTokenCheckResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_VerifyAuthToken_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::v6::services::pub::OauthTokenCheckResponse>* PubUser::Stub::PrepareAsyncVerifyAuthTokenRaw(::grpc::ClientContext* context, const ::v6::services::pub::LoginRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::v6::services::pub::OauthTokenCheckResponse, ::v6::services::pub::LoginRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_VerifyAuthToken_, context, request);
}

::grpc::ClientAsyncResponseReader< ::v6::services::pub::OauthTokenCheckResponse>* PubUser::Stub::AsyncVerifyAuthTokenRaw(::grpc::ClientContext* context, const ::v6::services::pub::LoginRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncVerifyAuthTokenRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status PubUser::Stub::CreateAuthToken(::grpc::ClientContext* context, const ::v6::services::pub::LoginRequest& request, ::v6::services::pub::OauthTokenResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::v6::services::pub::LoginRequest, ::v6::services::pub::OauthTokenResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateAuthToken_, context, request, response);
}

void PubUser::Stub::async::CreateAuthToken(::grpc::ClientContext* context, const ::v6::services::pub::LoginRequest* request, ::v6::services::pub::OauthTokenResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::v6::services::pub::LoginRequest, ::v6::services::pub::OauthTokenResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateAuthToken_, context, request, response, std::move(f));
}

void PubUser::Stub::async::CreateAuthToken(::grpc::ClientContext* context, const ::v6::services::pub::LoginRequest* request, ::v6::services::pub::OauthTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateAuthToken_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::v6::services::pub::OauthTokenResponse>* PubUser::Stub::PrepareAsyncCreateAuthTokenRaw(::grpc::ClientContext* context, const ::v6::services::pub::LoginRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::v6::services::pub::OauthTokenResponse, ::v6::services::pub::LoginRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateAuthToken_, context, request);
}

::grpc::ClientAsyncResponseReader< ::v6::services::pub::OauthTokenResponse>* PubUser::Stub::AsyncCreateAuthTokenRaw(::grpc::ClientContext* context, const ::v6::services::pub::LoginRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateAuthTokenRaw(context, request, cq);
  result->StartCall();
  return result;
}

PubUser::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      PubUser_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< PubUser::Service, ::v6::services::pub::User, ::v6::services::pub::User, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](PubUser::Service* service,
             ::grpc::ServerContext* ctx,
             const ::v6::services::pub::User* req,
             ::v6::services::pub::User* resp) {
               return service->Get(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      PubUser_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< PubUser::Service, ::v6::services::pub::LoginRequest, ::v6::services::pub::LoginResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](PubUser::Service* service,
             ::grpc::ServerContext* ctx,
             const ::v6::services::pub::LoginRequest* req,
             ::v6::services::pub::LoginResponse* resp) {
               return service->Login(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      PubUser_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< PubUser::Service, ::v6::services::pub::Token, ::v6::services::pub::Token, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](PubUser::Service* service,
             ::grpc::ServerContext* ctx,
             const ::v6::services::pub::Token* req,
             ::v6::services::pub::Token* resp) {
               return service->Refresh(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      PubUser_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< PubUser::Service, ::v6::services::pub::Token, ::v6::services::pub::User, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](PubUser::Service* service,
             ::grpc::ServerContext* ctx,
             const ::v6::services::pub::Token* req,
             ::v6::services::pub::User* resp) {
               return service->Logoff(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      PubUser_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< PubUser::Service, ::v6::services::pub::LoginRequest, ::v6::services::pub::User, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](PubUser::Service* service,
             ::grpc::ServerContext* ctx,
             const ::v6::services::pub::LoginRequest* req,
             ::v6::services::pub::User* resp) {
               return service->ResetPassword(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      PubUser_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< PubUser::Service, ::v6::services::pub::RegisterRequest, ::v6::services::pub::User, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](PubUser::Service* service,
             ::grpc::ServerContext* ctx,
             const ::v6::services::pub::RegisterRequest* req,
             ::v6::services::pub::User* resp) {
               return service->Register(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      PubUser_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< PubUser::Service, ::v6::services::pub::User, ::v6::services::pub::User, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](PubUser::Service* service,
             ::grpc::ServerContext* ctx,
             const ::v6::services::pub::User* req,
             ::v6::services::pub::User* resp) {
               return service->Delete(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      PubUser_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< PubUser::Service, ::v6::services::pub::SmsVeifyCodeSendRequest, ::v6::services::pub::SmsVeifyCodeSendResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](PubUser::Service* service,
             ::grpc::ServerContext* ctx,
             const ::v6::services::pub::SmsVeifyCodeSendRequest* req,
             ::v6::services::pub::SmsVeifyCodeSendResponse* resp) {
               return service->SendSmsVerifyCode(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      PubUser_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< PubUser::Service, ::v6::services::pub::SmsVeifyCodeSendRequestNotUser, ::v6::services::pub::SmsVeifyCodeSendResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](PubUser::Service* service,
             ::grpc::ServerContext* ctx,
             const ::v6::services::pub::SmsVeifyCodeSendRequestNotUser* req,
             ::v6::services::pub::SmsVeifyCodeSendResponse* resp) {
               return service->SendSmsVerifyCodeNotUser(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      PubUser_method_names[9],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< PubUser::Service, ::v6::services::pub::LoginRequest, ::v6::services::pub::OauthTokenCheckResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](PubUser::Service* service,
             ::grpc::ServerContext* ctx,
             const ::v6::services::pub::LoginRequest* req,
             ::v6::services::pub::OauthTokenCheckResponse* resp) {
               return service->VerifyAuthToken(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      PubUser_method_names[10],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< PubUser::Service, ::v6::services::pub::LoginRequest, ::v6::services::pub::OauthTokenResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](PubUser::Service* service,
             ::grpc::ServerContext* ctx,
             const ::v6::services::pub::LoginRequest* req,
             ::v6::services::pub::OauthTokenResponse* resp) {
               return service->CreateAuthToken(ctx, req, resp);
             }, this)));
}

PubUser::Service::~Service() {
}

::grpc::Status PubUser::Service::Get(::grpc::ServerContext* context, const ::v6::services::pub::User* request, ::v6::services::pub::User* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status PubUser::Service::Login(::grpc::ServerContext* context, const ::v6::services::pub::LoginRequest* request, ::v6::services::pub::LoginResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status PubUser::Service::Refresh(::grpc::ServerContext* context, const ::v6::services::pub::Token* request, ::v6::services::pub::Token* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status PubUser::Service::Logoff(::grpc::ServerContext* context, const ::v6::services::pub::Token* request, ::v6::services::pub::User* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status PubUser::Service::ResetPassword(::grpc::ServerContext* context, const ::v6::services::pub::LoginRequest* request, ::v6::services::pub::User* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status PubUser::Service::Register(::grpc::ServerContext* context, const ::v6::services::pub::RegisterRequest* request, ::v6::services::pub::User* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status PubUser::Service::Delete(::grpc::ServerContext* context, const ::v6::services::pub::User* request, ::v6::services::pub::User* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status PubUser::Service::SendSmsVerifyCode(::grpc::ServerContext* context, const ::v6::services::pub::SmsVeifyCodeSendRequest* request, ::v6::services::pub::SmsVeifyCodeSendResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status PubUser::Service::SendSmsVerifyCodeNotUser(::grpc::ServerContext* context, const ::v6::services::pub::SmsVeifyCodeSendRequestNotUser* request, ::v6::services::pub::SmsVeifyCodeSendResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status PubUser::Service::VerifyAuthToken(::grpc::ServerContext* context, const ::v6::services::pub::LoginRequest* request, ::v6::services::pub::OauthTokenCheckResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status PubUser::Service::CreateAuthToken(::grpc::ServerContext* context, const ::v6::services::pub::LoginRequest* request, ::v6::services::pub::OauthTokenResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace v6
}  // namespace services
}  // namespace pub

