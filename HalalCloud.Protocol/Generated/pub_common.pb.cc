// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pub_common.proto

#include "pub_common.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace v6 {
namespace services {
namespace pub {
namespace common {
PROTOBUF_CONSTEXPR ScanListRequest_OrderByEntry_DoNotUse::ScanListRequest_OrderByEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct ScanListRequest_OrderByEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScanListRequest_OrderByEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScanListRequest_OrderByEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ScanListRequest_OrderByEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScanListRequest_OrderByEntry_DoNotUseDefaultTypeInternal _ScanListRequest_OrderByEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR ScanListRequest::ScanListRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.order_by_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.limit_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ScanListRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScanListRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScanListRequestDefaultTypeInternal() {}
  union {
    ScanListRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScanListRequestDefaultTypeInternal _ScanListRequest_default_instance_;
}  // namespace common
}  // namespace pub
}  // namespace services
}  // namespace v6
static ::_pb::Metadata file_level_metadata_pub_5fcommon_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_pub_5fcommon_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_pub_5fcommon_2eproto = nullptr;

const uint32_t TableStruct_pub_5fcommon_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::common::ScanListRequest_OrderByEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::common::ScanListRequest_OrderByEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::common::ScanListRequest_OrderByEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::common::ScanListRequest_OrderByEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::common::ScanListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::common::ScanListRequest, _impl_.token_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::common::ScanListRequest, _impl_.limit_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::common::ScanListRequest, _impl_.order_by_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::v6::services::pub::common::ScanListRequest_OrderByEntry_DoNotUse)},
  { 10, -1, -1, sizeof(::v6::services::pub::common::ScanListRequest)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::v6::services::pub::common::_ScanListRequest_OrderByEntry_DoNotUse_default_instance_._instance,
  &::v6::services::pub::common::_ScanListRequest_default_instance_._instance,
};

const char descriptor_table_protodef_pub_5fcommon_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020pub_common.proto\022\026v6.services.pub.comm"
  "on\"\247\001\n\017ScanListRequest\022\r\n\005token\030\001 \001(\t\022\r\n"
  "\005limit\030\002 \001(\003\022F\n\010order_by\030\003 \003(\01324.v6.serv"
  "ices.pub.common.ScanListRequest.OrderByE"
  "ntry\032.\n\014OrderByEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005val"
  "ue\030\002 \001(\010:\0028\001B5Z3github.com/city404/v6-pu"
  "blic-rpc-proto/go/v6/commonb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_pub_5fcommon_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_pub_5fcommon_2eproto = {
    false, false, 275, descriptor_table_protodef_pub_5fcommon_2eproto,
    "pub_common.proto",
    &descriptor_table_pub_5fcommon_2eproto_once, nullptr, 0, 2,
    schemas, file_default_instances, TableStruct_pub_5fcommon_2eproto::offsets,
    file_level_metadata_pub_5fcommon_2eproto, file_level_enum_descriptors_pub_5fcommon_2eproto,
    file_level_service_descriptors_pub_5fcommon_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_pub_5fcommon_2eproto_getter() {
  return &descriptor_table_pub_5fcommon_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_pub_5fcommon_2eproto(&descriptor_table_pub_5fcommon_2eproto);
namespace v6 {
namespace services {
namespace pub {
namespace common {

// ===================================================================

ScanListRequest_OrderByEntry_DoNotUse::ScanListRequest_OrderByEntry_DoNotUse() {}
ScanListRequest_OrderByEntry_DoNotUse::ScanListRequest_OrderByEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ScanListRequest_OrderByEntry_DoNotUse::MergeFrom(const ScanListRequest_OrderByEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ScanListRequest_OrderByEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_pub_5fcommon_2eproto_getter, &descriptor_table_pub_5fcommon_2eproto_once,
      file_level_metadata_pub_5fcommon_2eproto[0]);
}

// ===================================================================

class ScanListRequest::_Internal {
 public:
};

ScanListRequest::ScanListRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &ScanListRequest::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:v6.services.pub.common.ScanListRequest)
}
ScanListRequest::ScanListRequest(const ScanListRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ScanListRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.order_by_)*/{}
    , decltype(_impl_.token_){}
    , decltype(_impl_.limit_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.order_by_.MergeFrom(from._impl_.order_by_);
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    _this->_impl_.token_.Set(from._internal_token(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.limit_ = from._impl_.limit_;
  // @@protoc_insertion_point(copy_constructor:v6.services.pub.common.ScanListRequest)
}

inline void ScanListRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.order_by_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.token_){}
    , decltype(_impl_.limit_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ScanListRequest::~ScanListRequest() {
  // @@protoc_insertion_point(destructor:v6.services.pub.common.ScanListRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void ScanListRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.order_by_.Destruct();
  _impl_.order_by_.~MapField();
  _impl_.token_.Destroy();
}

void ScanListRequest::ArenaDtor(void* object) {
  ScanListRequest* _this = reinterpret_cast< ScanListRequest* >(object);
  _this->_impl_.order_by_.Destruct();
}
void ScanListRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ScanListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:v6.services.pub.common.ScanListRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.order_by_.Clear();
  _impl_.token_.ClearToEmpty();
  _impl_.limit_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ScanListRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.common.ScanListRequest.token"));
        } else
          goto handle_unusual;
        continue;
      // int64 limit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, bool> order_by = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.order_by_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ScanListRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v6.services.pub.common.ScanListRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.common.ScanListRequest.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  // int64 limit = 2;
  if (this->_internal_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_limit(), target);
  }

  // map<string, bool> order_by = 3;
  if (!this->_internal_order_by().empty()) {
    using MapType = ::_pb::Map<std::string, bool>;
    using WireHelper = ScanListRequest_OrderByEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_order_by();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "v6.services.pub.common.ScanListRequest.OrderByEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v6.services.pub.common.ScanListRequest)
  return target;
}

size_t ScanListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v6.services.pub.common.ScanListRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, bool> order_by = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_order_by_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, bool >::const_iterator
      it = this->_internal_order_by().begin();
      it != this->_internal_order_by().end(); ++it) {
    total_size += ScanListRequest_OrderByEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string token = 1;
  if (!this->_internal_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // int64 limit = 2;
  if (this->_internal_limit() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_limit());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ScanListRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ScanListRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ScanListRequest::GetClassData() const { return &_class_data_; }


void ScanListRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ScanListRequest*>(&to_msg);
  auto& from = static_cast<const ScanListRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:v6.services.pub.common.ScanListRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.order_by_.MergeFrom(from._impl_.order_by_);
  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  if (from._internal_limit() != 0) {
    _this->_internal_set_limit(from._internal_limit());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ScanListRequest::CopyFrom(const ScanListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v6.services.pub.common.ScanListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScanListRequest::IsInitialized() const {
  return true;
}

void ScanListRequest::InternalSwap(ScanListRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.order_by_.InternalSwap(&other->_impl_.order_by_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.token_, lhs_arena,
      &other->_impl_.token_, rhs_arena
  );
  swap(_impl_.limit_, other->_impl_.limit_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ScanListRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_pub_5fcommon_2eproto_getter, &descriptor_table_pub_5fcommon_2eproto_once,
      file_level_metadata_pub_5fcommon_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace common
}  // namespace pub
}  // namespace services
}  // namespace v6
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::v6::services::pub::common::ScanListRequest_OrderByEntry_DoNotUse*
Arena::CreateMaybeMessage< ::v6::services::pub::common::ScanListRequest_OrderByEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::common::ScanListRequest_OrderByEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::v6::services::pub::common::ScanListRequest*
Arena::CreateMaybeMessage< ::v6::services::pub::common::ScanListRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::common::ScanListRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
