// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: public_user_file.proto

#include "public_user_file.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace v6 {
namespace services {
namespace pub {
PROTOBUF_CONSTEXPR File::File(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.identity_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.parent_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.path_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.mime_type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.locked_by_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.unique_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.content_identity_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.size_)*/int64_t{0}
  , /*decltype(_impl_.type_)*/int64_t{0}
  , /*decltype(_impl_.created_at_)*/int64_t{0}
  , /*decltype(_impl_.updated_at_)*/int64_t{0}
  , /*decltype(_impl_.deleted_at_)*/int64_t{0}
  , /*decltype(_impl_.deleted_)*/false
  , /*decltype(_impl_.dir_)*/false
  , /*decltype(_impl_.hidden_)*/false
  , /*decltype(_impl_.locked_)*/false
  , /*decltype(_impl_.shared_)*/false
  , /*decltype(_impl_.starred_)*/false
  , /*decltype(_impl_.trashed_)*/false
  , /*decltype(_impl_.locked_at_)*/int64_t{0}
  , /*decltype(_impl_.shared_at_)*/int64_t{0}
  , /*decltype(_impl_.flag_)*/int64_t{0}
  , /*decltype(_impl_.label_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FileDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FileDefaultTypeInternal() {}
  union {
    File _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FileDefaultTypeInternal _File_default_instance_;
PROTOBUF_CONSTEXPR FileListRequest::FileListRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parent_)*/nullptr
  , /*decltype(_impl_.filter_)*/nullptr
  , /*decltype(_impl_.list_info_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FileListRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FileListRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FileListRequestDefaultTypeInternal() {}
  union {
    FileListRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FileListRequestDefaultTypeInternal _FileListRequest_default_instance_;
PROTOBUF_CONSTEXPR SearchRequest::SearchRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.list_info_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SearchRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SearchRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SearchRequestDefaultTypeInternal() {}
  union {
    SearchRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SearchRequestDefaultTypeInternal _SearchRequest_default_instance_;
PROTOBUF_CONSTEXPR FileListResponse::FileListResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.files_)*/{}
  , /*decltype(_impl_.list_info_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FileListResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FileListResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FileListResponseDefaultTypeInternal() {}
  union {
    FileListResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FileListResponseDefaultTypeInternal _FileListResponse_default_instance_;
PROTOBUF_CONSTEXPR BatchOperationRequest::BatchOperationRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.source_)*/{}
  , /*decltype(_impl_.dest_)*/nullptr
  , /*decltype(_impl_.operation_)*/0
  , /*decltype(_impl_.flag_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BatchOperationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BatchOperationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BatchOperationRequestDefaultTypeInternal() {}
  union {
    BatchOperationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BatchOperationRequestDefaultTypeInternal _BatchOperationRequest_default_instance_;
PROTOBUF_CONSTEXPR BatchOperationResponse::BatchOperationResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.task_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.affected_)*/int64_t{0}
  , /*decltype(_impl_.created_at_)*/int64_t{0}
  , /*decltype(_impl_.progress_)*/int64_t{0}
  , /*decltype(_impl_.status_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BatchOperationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BatchOperationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BatchOperationResponseDefaultTypeInternal() {}
  union {
    BatchOperationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BatchOperationResponseDefaultTypeInternal _BatchOperationResponse_default_instance_;
PROTOBUF_CONSTEXPR ManageRTCRequest::ManageRTCRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sdp_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.offer_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.client_identity_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ManageRTCRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ManageRTCRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ManageRTCRequestDefaultTypeInternal() {}
  union {
    ManageRTCRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ManageRTCRequestDefaultTypeInternal _ManageRTCRequest_default_instance_;
PROTOBUF_CONSTEXPR ManageRTCResponse::ManageRTCResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.encode_key_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.sdp_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.connection_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.file_size_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ManageRTCResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ManageRTCResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ManageRTCResponseDefaultTypeInternal() {}
  union {
    ManageRTCResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ManageRTCResponseDefaultTypeInternal _ManageRTCResponse_default_instance_;
PROTOBUF_CONSTEXPR SendIceCandidateRequest::SendIceCandidateRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.client_identity_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.candidate_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendIceCandidateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendIceCandidateRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendIceCandidateRequestDefaultTypeInternal() {}
  union {
    SendIceCandidateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendIceCandidateRequestDefaultTypeInternal _SendIceCandidateRequest_default_instance_;
PROTOBUF_CONSTEXPR SendIceCandidateResponse::SendIceCandidateResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.client_identity_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.candidate_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendIceCandidateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendIceCandidateResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendIceCandidateResponseDefaultTypeInternal() {}
  union {
    SendIceCandidateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendIceCandidateResponseDefaultTypeInternal _SendIceCandidateResponse_default_instance_;
PROTOBUF_CONSTEXPR GetIceCandidateRequest::GetIceCandidateRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.client_identity_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.candidate_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetIceCandidateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetIceCandidateRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetIceCandidateRequestDefaultTypeInternal() {}
  union {
    GetIceCandidateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetIceCandidateRequestDefaultTypeInternal _GetIceCandidateRequest_default_instance_;
PROTOBUF_CONSTEXPR GetIceCandidateResponse::GetIceCandidateResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.candidate_)*/{}
  , /*decltype(_impl_.client_identity_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetIceCandidateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetIceCandidateResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetIceCandidateResponseDefaultTypeInternal() {}
  union {
    GetIceCandidateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetIceCandidateResponseDefaultTypeInternal _GetIceCandidateResponse_default_instance_;
PROTOBUF_CONSTEXPR ParseFileSliceResponse::ParseFileSliceResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.meta_nodes_)*/{}
  , /*decltype(_impl_.raw_nodes_)*/{}
  , /*decltype(_impl_.sizes_)*/{}
  , /*decltype(_impl_.content_identity_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.sha1_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.wcs_etag_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.file_size_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ParseFileSliceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ParseFileSliceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ParseFileSliceResponseDefaultTypeInternal() {}
  union {
    ParseFileSliceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ParseFileSliceResponseDefaultTypeInternal _ParseFileSliceResponse_default_instance_;
PROTOBUF_CONSTEXPR SliceSize::SliceSize(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.start_index_)*/int64_t{0}
  , /*decltype(_impl_.end_index_)*/int64_t{0}
  , /*decltype(_impl_.size_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SliceSizeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SliceSizeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SliceSizeDefaultTypeInternal() {}
  union {
    SliceSize _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SliceSizeDefaultTypeInternal _SliceSize_default_instance_;
PROTOBUF_CONSTEXPR SliceDownloadAddressRequest::SliceDownloadAddressRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.identity_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SliceDownloadAddressRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SliceDownloadAddressRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SliceDownloadAddressRequestDefaultTypeInternal() {}
  union {
    SliceDownloadAddressRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SliceDownloadAddressRequestDefaultTypeInternal _SliceDownloadAddressRequest_default_instance_;
PROTOBUF_CONSTEXPR SliceDownloadAddressResponse::SliceDownloadAddressResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.addresses_)*/{}
  , /*decltype(_impl_.request_address_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.expire_at_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SliceDownloadAddressResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SliceDownloadAddressResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SliceDownloadAddressResponseDefaultTypeInternal() {}
  union {
    SliceDownloadAddressResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SliceDownloadAddressResponseDefaultTypeInternal _SliceDownloadAddressResponse_default_instance_;
PROTOBUF_CONSTEXPR SliceDownloadInfo::SliceDownloadInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.identity_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.download_address_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.download_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SliceDownloadInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SliceDownloadInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SliceDownloadInfoDefaultTypeInternal() {}
  union {
    SliceDownloadInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SliceDownloadInfoDefaultTypeInternal _SliceDownloadInfo_default_instance_;
}  // namespace pub
}  // namespace services
}  // namespace v6
static ::_pb::Metadata file_level_metadata_public_5fuser_5ffile_2eproto[17];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_public_5fuser_5ffile_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_public_5fuser_5ffile_2eproto = nullptr;

const uint32_t TableStruct_public_5fuser_5ffile_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::File, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::File, _impl_.identity_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::File, _impl_.parent_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::File, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::File, _impl_.path_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::File, _impl_.mime_type_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::File, _impl_.size_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::File, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::File, _impl_.created_at_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::File, _impl_.updated_at_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::File, _impl_.deleted_at_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::File, _impl_.deleted_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::File, _impl_.dir_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::File, _impl_.hidden_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::File, _impl_.locked_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::File, _impl_.shared_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::File, _impl_.starred_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::File, _impl_.trashed_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::File, _impl_.locked_at_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::File, _impl_.locked_by_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::File, _impl_.shared_at_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::File, _impl_.flag_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::File, _impl_.unique_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::File, _impl_.content_identity_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::File, _impl_.label_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::FileListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::FileListRequest, _impl_.parent_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::FileListRequest, _impl_.filter_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::FileListRequest, _impl_.list_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SearchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SearchRequest, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SearchRequest, _impl_.list_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::FileListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::FileListResponse, _impl_.files_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::FileListResponse, _impl_.list_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::BatchOperationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::BatchOperationRequest, _impl_.source_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::BatchOperationRequest, _impl_.dest_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::BatchOperationRequest, _impl_.operation_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::BatchOperationRequest, _impl_.flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::BatchOperationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::BatchOperationResponse, _impl_.task_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::BatchOperationResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::BatchOperationResponse, _impl_.affected_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::BatchOperationResponse, _impl_.created_at_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::BatchOperationResponse, _impl_.progress_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::ManageRTCRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::ManageRTCRequest, _impl_.sdp_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::ManageRTCRequest, _impl_.offer_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::ManageRTCRequest, _impl_.client_identity_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::ManageRTCResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::ManageRTCResponse, _impl_.file_size_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::ManageRTCResponse, _impl_.encode_key_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::ManageRTCResponse, _impl_.sdp_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::ManageRTCResponse, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::ManageRTCResponse, _impl_.connection_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SendIceCandidateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SendIceCandidateRequest, _impl_.client_identity_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SendIceCandidateRequest, _impl_.candidate_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SendIceCandidateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SendIceCandidateResponse, _impl_.client_identity_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SendIceCandidateResponse, _impl_.candidate_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::GetIceCandidateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::GetIceCandidateRequest, _impl_.client_identity_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::GetIceCandidateRequest, _impl_.candidate_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::GetIceCandidateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::GetIceCandidateResponse, _impl_.client_identity_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::GetIceCandidateResponse, _impl_.candidate_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::ParseFileSliceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::ParseFileSliceResponse, _impl_.content_identity_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::ParseFileSliceResponse, _impl_.meta_nodes_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::ParseFileSliceResponse, _impl_.raw_nodes_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::ParseFileSliceResponse, _impl_.file_size_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::ParseFileSliceResponse, _impl_.sizes_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::ParseFileSliceResponse, _impl_.sha1_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::ParseFileSliceResponse, _impl_.wcs_etag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SliceSize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SliceSize, _impl_.start_index_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SliceSize, _impl_.end_index_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SliceSize, _impl_.size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SliceDownloadAddressRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SliceDownloadAddressRequest, _impl_.identity_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SliceDownloadAddressResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SliceDownloadAddressResponse, _impl_.addresses_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SliceDownloadAddressResponse, _impl_.expire_at_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SliceDownloadAddressResponse, _impl_.request_address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SliceDownloadInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SliceDownloadInfo, _impl_.identity_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SliceDownloadInfo, _impl_.download_address_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SliceDownloadInfo, _impl_.download_token_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::v6::services::pub::File)},
  { 30, -1, -1, sizeof(::v6::services::pub::FileListRequest)},
  { 39, -1, -1, sizeof(::v6::services::pub::SearchRequest)},
  { 47, -1, -1, sizeof(::v6::services::pub::FileListResponse)},
  { 55, -1, -1, sizeof(::v6::services::pub::BatchOperationRequest)},
  { 65, -1, -1, sizeof(::v6::services::pub::BatchOperationResponse)},
  { 76, -1, -1, sizeof(::v6::services::pub::ManageRTCRequest)},
  { 85, -1, -1, sizeof(::v6::services::pub::ManageRTCResponse)},
  { 96, -1, -1, sizeof(::v6::services::pub::SendIceCandidateRequest)},
  { 104, -1, -1, sizeof(::v6::services::pub::SendIceCandidateResponse)},
  { 112, -1, -1, sizeof(::v6::services::pub::GetIceCandidateRequest)},
  { 120, -1, -1, sizeof(::v6::services::pub::GetIceCandidateResponse)},
  { 128, -1, -1, sizeof(::v6::services::pub::ParseFileSliceResponse)},
  { 141, -1, -1, sizeof(::v6::services::pub::SliceSize)},
  { 150, -1, -1, sizeof(::v6::services::pub::SliceDownloadAddressRequest)},
  { 157, -1, -1, sizeof(::v6::services::pub::SliceDownloadAddressResponse)},
  { 166, -1, -1, sizeof(::v6::services::pub::SliceDownloadInfo)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::v6::services::pub::_File_default_instance_._instance,
  &::v6::services::pub::_FileListRequest_default_instance_._instance,
  &::v6::services::pub::_SearchRequest_default_instance_._instance,
  &::v6::services::pub::_FileListResponse_default_instance_._instance,
  &::v6::services::pub::_BatchOperationRequest_default_instance_._instance,
  &::v6::services::pub::_BatchOperationResponse_default_instance_._instance,
  &::v6::services::pub::_ManageRTCRequest_default_instance_._instance,
  &::v6::services::pub::_ManageRTCResponse_default_instance_._instance,
  &::v6::services::pub::_SendIceCandidateRequest_default_instance_._instance,
  &::v6::services::pub::_SendIceCandidateResponse_default_instance_._instance,
  &::v6::services::pub::_GetIceCandidateRequest_default_instance_._instance,
  &::v6::services::pub::_GetIceCandidateResponse_default_instance_._instance,
  &::v6::services::pub::_ParseFileSliceResponse_default_instance_._instance,
  &::v6::services::pub::_SliceSize_default_instance_._instance,
  &::v6::services::pub::_SliceDownloadAddressRequest_default_instance_._instance,
  &::v6::services::pub::_SliceDownloadAddressResponse_default_instance_._instance,
  &::v6::services::pub::_SliceDownloadInfo_default_instance_._instance,
};

const char descriptor_table_protodef_public_5fuser_5ffile_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\026public_user_file.proto\022\017v6.services.pu"
  "b\032\020pub_common.proto\"\237\003\n\004File\022\020\n\010identity"
  "\030\001 \001(\t\022\016\n\006parent\030\003 \001(\t\022\014\n\004name\030\004 \001(\t\022\014\n\004"
  "path\030\005 \001(\t\022\021\n\tmime_type\030\006 \001(\t\022\014\n\004size\030\007 "
  "\001(\003\022\014\n\004type\030\010 \001(\003\022\022\n\ncreated_at\030\t \001(\003\022\022\n"
  "\nupdated_at\030\n \001(\003\022\022\n\ndeleted_at\030\013 \001(\003\022\017\n"
  "\007deleted\030\014 \001(\010\022\013\n\003dir\030\r \001(\010\022\016\n\006hidden\030\016 "
  "\001(\010\022\016\n\006locked\030\017 \001(\010\022\016\n\006shared\030\020 \001(\010\022\017\n\007s"
  "tarred\030\021 \001(\010\022\017\n\007trashed\030\022 \001(\010\022\021\n\tlocked_"
  "at\030\023 \001(\003\022\021\n\tlocked_by\030\024 \001(\t\022\021\n\tshared_at"
  "\030\025 \001(\003\022\014\n\004flag\030\026 \001(\003\022\016\n\006unique\030\027 \001(\t\022\030\n\020"
  "content_identity\030\030 \001(\t\022\r\n\005label\030\031 \001(\003\"\233\001"
  "\n\017FileListRequest\022%\n\006parent\030\001 \001(\0132\025.v6.s"
  "ervices.pub.File\022%\n\006filter\030\002 \001(\0132\025.v6.se"
  "rvices.pub.File\022:\n\tlist_info\030\003 \001(\0132\'.v6."
  "services.pub.common.ScanListRequest\"Y\n\rS"
  "earchRequest\022\014\n\004name\030\001 \001(\t\022:\n\tlist_info\030"
  "\003 \001(\0132\'.v6.services.pub.common.ScanListR"
  "equest\"t\n\020FileListResponse\022$\n\005files\030\001 \003("
  "\0132\025.v6.services.pub.File\022:\n\tlist_info\030\002 "
  "\001(\0132\'.v6.services.pub.common.ScanListReq"
  "uest\"\204\001\n\025BatchOperationRequest\022%\n\006source"
  "\030\001 \003(\0132\025.v6.services.pub.File\022#\n\004dest\030\002 "
  "\001(\0132\025.v6.services.pub.File\022\021\n\toperation\030"
  "\003 \001(\005\022\014\n\004flag\030\004 \001(\005\"n\n\026BatchOperationRes"
  "ponse\022\014\n\004task\030\001 \001(\t\022\016\n\006status\030\002 \001(\005\022\020\n\010a"
  "ffected\030\003 \001(\003\022\022\n\ncreated_at\030\004 \001(\003\022\020\n\010pro"
  "gress\030\005 \001(\003\"G\n\020ManageRTCRequest\022\013\n\003sdp\030\001"
  " \001(\t\022\r\n\005offer\030\002 \001(\t\022\027\n\017client_identity\030\003"
  " \001(\t\"i\n\021ManageRTCResponse\022\021\n\tfile_size\030\001"
  " \001(\003\022\022\n\nencode_key\030\002 \001(\t\022\013\n\003sdp\030\003 \001(\t\022\014\n"
  "\004name\030\004 \001(\t\022\022\n\nconnection\030\005 \001(\t\"E\n\027SendI"
  "ceCandidateRequest\022\027\n\017client_identity\030\001 "
  "\001(\t\022\021\n\tcandidate\030\002 \001(\t\"F\n\030SendIceCandida"
  "teResponse\022\027\n\017client_identity\030\001 \001(\t\022\021\n\tc"
  "andidate\030\002 \001(\t\"D\n\026GetIceCandidateRequest"
  "\022\027\n\017client_identity\030\001 \001(\t\022\021\n\tcandidate\030\002"
  " \001(\t\"E\n\027GetIceCandidateResponse\022\027\n\017clien"
  "t_identity\030\001 \001(\t\022\021\n\tcandidate\030\002 \003(\t\"\267\001\n\026"
  "ParseFileSliceResponse\022\030\n\020content_identi"
  "ty\030\001 \001(\t\022\022\n\nmeta_nodes\030\002 \003(\t\022\021\n\traw_node"
  "s\030\003 \003(\t\022\021\n\tfile_size\030\004 \001(\003\022)\n\005sizes\030\005 \003("
  "\0132\032.v6.services.pub.SliceSize\022\014\n\004sha1\030\006 "
  "\001(\t\022\020\n\010wcs_etag\030\007 \001(\t\"A\n\tSliceSize\022\023\n\013st"
  "art_index\030\001 \001(\003\022\021\n\tend_index\030\002 \001(\003\022\014\n\004si"
  "ze\030\003 \001(\003\"/\n\033SliceDownloadAddressRequest\022"
  "\020\n\010identity\030\001 \003(\t\"\201\001\n\034SliceDownloadAddre"
  "ssResponse\0225\n\taddresses\030\001 \003(\0132\".v6.servi"
  "ces.pub.SliceDownloadInfo\022\021\n\texpire_at\030\002"
  " \001(\003\022\027\n\017request_address\030\003 \001(\t\"W\n\021SliceDo"
  "wnloadInfo\022\020\n\010identity\030\001 \001(\t\022\030\n\020download"
  "_address\030\002 \001(\t\022\026\n\016download_token\030\003 \001(\t2\336"
  "\014\n\013PubUserFile\0228\n\006Create\022\025.v6.services.p"
  "ub.File\032\025.v6.services.pub.File\"\000\0225\n\003Get\022"
  "\025.v6.services.pub.File\032\025.v6.services.pub"
  ".File\"\000\022J\n\006Rename\022\025.v6.services.pub.File"
  "\032\'.v6.services.pub.BatchOperationRespons"
  "e\"\000\022Z\n\005Trash\022&.v6.services.pub.BatchOper"
  "ationRequest\032\'.v6.services.pub.BatchOper"
  "ationResponse\"\000\022Y\n\004Move\022&.v6.services.pu"
  "b.BatchOperationRequest\032\'.v6.services.pu"
  "b.BatchOperationResponse\"\000\022Y\n\004Copy\022&.v6."
  "services.pub.BatchOperationRequest\032\'.v6."
  "services.pub.BatchOperationResponse\"\000\022[\n"
  "\006Delete\022&.v6.services.pub.BatchOperation"
  "Request\032\'.v6.services.pub.BatchOperation"
  "Response\"\000\022`\n\013DeleteTrash\022&.v6.services."
  "pub.BatchOperationRequest\032\'.v6.services."
  "pub.BatchOperationResponse\"\000\022\\\n\007Recover\022"
  "&.v6.services.pub.BatchOperationRequest\032"
  "\'.v6.services.pub.BatchOperationResponse"
  "\"\000\022c\n\016BatchOperation\022&.v6.services.pub.B"
  "atchOperationRequest\032\'.v6.services.pub.B"
  "atchOperationResponse\"\000\022M\n\004List\022 .v6.ser"
  "vices.pub.FileListRequest\032!.v6.services."
  "pub.FileListResponse\"\000\022R\n\tListTrash\022 .v6"
  ".services.pub.FileListRequest\032!.v6.servi"
  "ces.pub.FileListResponse\"\000\022M\n\006Search\022\036.v"
  "6.services.pub.SearchRequest\032!.v6.servic"
  "es.pub.FileListResponse\"\000\022_\n\024CreateManag"
  "eRTCOffer\022!.v6.services.pub.ManageRTCReq"
  "uest\032\".v6.services.pub.ManageRTCResponse"
  "\"\000\022o\n\026SendClientIceCandidate\022(.v6.servic"
  "es.pub.SendIceCandidateRequest\032).v6.serv"
  "ices.pub.SendIceCandidateResponse\"\000\022l\n\025G"
  "etServerIceCandidate\022\'.v6.services.pub.G"
  "etIceCandidateRequest\032(.v6.services.pub."
  "GetIceCandidateResponse\"\000\022R\n\016ParseFileSl"
  "ice\022\025.v6.services.pub.File\032\'.v6.services"
  ".pub.ParseFileSliceResponse\"\000\022x\n\027GetSlic"
  "eDownloadAddress\022,.v6.services.pub.Slice"
  "DownloadAddressRequest\032-.v6.services.pub"
  ".SliceDownloadAddressResponse\"\000B7Z5githu"
  "b.com/city404/v6-public-rpc-proto/go/v6/"
  "userfileb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_public_5fuser_5ffile_2eproto_deps[1] = {
  &::descriptor_table_pub_5fcommon_2eproto,
};
static ::_pbi::once_flag descriptor_table_public_5fuser_5ffile_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_public_5fuser_5ffile_2eproto = {
    false, false, 3776, descriptor_table_protodef_public_5fuser_5ffile_2eproto,
    "public_user_file.proto",
    &descriptor_table_public_5fuser_5ffile_2eproto_once, descriptor_table_public_5fuser_5ffile_2eproto_deps, 1, 17,
    schemas, file_default_instances, TableStruct_public_5fuser_5ffile_2eproto::offsets,
    file_level_metadata_public_5fuser_5ffile_2eproto, file_level_enum_descriptors_public_5fuser_5ffile_2eproto,
    file_level_service_descriptors_public_5fuser_5ffile_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_public_5fuser_5ffile_2eproto_getter() {
  return &descriptor_table_public_5fuser_5ffile_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_public_5fuser_5ffile_2eproto(&descriptor_table_public_5fuser_5ffile_2eproto);
namespace v6 {
namespace services {
namespace pub {

// ===================================================================

class File::_Internal {
 public:
};

File::File(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:v6.services.pub.File)
}
File::File(const File& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  File* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.identity_){}
    , decltype(_impl_.parent_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.path_){}
    , decltype(_impl_.mime_type_){}
    , decltype(_impl_.locked_by_){}
    , decltype(_impl_.unique_){}
    , decltype(_impl_.content_identity_){}
    , decltype(_impl_.size_){}
    , decltype(_impl_.type_){}
    , decltype(_impl_.created_at_){}
    , decltype(_impl_.updated_at_){}
    , decltype(_impl_.deleted_at_){}
    , decltype(_impl_.deleted_){}
    , decltype(_impl_.dir_){}
    , decltype(_impl_.hidden_){}
    , decltype(_impl_.locked_){}
    , decltype(_impl_.shared_){}
    , decltype(_impl_.starred_){}
    , decltype(_impl_.trashed_){}
    , decltype(_impl_.locked_at_){}
    , decltype(_impl_.shared_at_){}
    , decltype(_impl_.flag_){}
    , decltype(_impl_.label_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.identity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.identity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_identity().empty()) {
    _this->_impl_.identity_.Set(from._internal_identity(), 
      _this->GetArenaForAllocation());
  }
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    _this->_impl_.parent_.Set(from._internal_parent(), 
      _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_path().empty()) {
    _this->_impl_.path_.Set(from._internal_path(), 
      _this->GetArenaForAllocation());
  }
  _impl_.mime_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mime_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mime_type().empty()) {
    _this->_impl_.mime_type_.Set(from._internal_mime_type(), 
      _this->GetArenaForAllocation());
  }
  _impl_.locked_by_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.locked_by_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_locked_by().empty()) {
    _this->_impl_.locked_by_.Set(from._internal_locked_by(), 
      _this->GetArenaForAllocation());
  }
  _impl_.unique_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.unique_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_unique().empty()) {
    _this->_impl_.unique_.Set(from._internal_unique(), 
      _this->GetArenaForAllocation());
  }
  _impl_.content_identity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_identity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content_identity().empty()) {
    _this->_impl_.content_identity_.Set(from._internal_content_identity(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.size_, &from._impl_.size_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.label_) -
    reinterpret_cast<char*>(&_impl_.size_)) + sizeof(_impl_.label_));
  // @@protoc_insertion_point(copy_constructor:v6.services.pub.File)
}

inline void File::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.identity_){}
    , decltype(_impl_.parent_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.path_){}
    , decltype(_impl_.mime_type_){}
    , decltype(_impl_.locked_by_){}
    , decltype(_impl_.unique_){}
    , decltype(_impl_.content_identity_){}
    , decltype(_impl_.size_){int64_t{0}}
    , decltype(_impl_.type_){int64_t{0}}
    , decltype(_impl_.created_at_){int64_t{0}}
    , decltype(_impl_.updated_at_){int64_t{0}}
    , decltype(_impl_.deleted_at_){int64_t{0}}
    , decltype(_impl_.deleted_){false}
    , decltype(_impl_.dir_){false}
    , decltype(_impl_.hidden_){false}
    , decltype(_impl_.locked_){false}
    , decltype(_impl_.shared_){false}
    , decltype(_impl_.starred_){false}
    , decltype(_impl_.trashed_){false}
    , decltype(_impl_.locked_at_){int64_t{0}}
    , decltype(_impl_.shared_at_){int64_t{0}}
    , decltype(_impl_.flag_){int64_t{0}}
    , decltype(_impl_.label_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.identity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.identity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.mime_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mime_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.locked_by_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.locked_by_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.unique_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.unique_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.content_identity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_identity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

File::~File() {
  // @@protoc_insertion_point(destructor:v6.services.pub.File)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void File::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.identity_.Destroy();
  _impl_.parent_.Destroy();
  _impl_.name_.Destroy();
  _impl_.path_.Destroy();
  _impl_.mime_type_.Destroy();
  _impl_.locked_by_.Destroy();
  _impl_.unique_.Destroy();
  _impl_.content_identity_.Destroy();
}

void File::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void File::Clear() {
// @@protoc_insertion_point(message_clear_start:v6.services.pub.File)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.identity_.ClearToEmpty();
  _impl_.parent_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.path_.ClearToEmpty();
  _impl_.mime_type_.ClearToEmpty();
  _impl_.locked_by_.ClearToEmpty();
  _impl_.unique_.ClearToEmpty();
  _impl_.content_identity_.ClearToEmpty();
  ::memset(&_impl_.size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.label_) -
      reinterpret_cast<char*>(&_impl_.size_)) + sizeof(_impl_.label_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* File::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string identity = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_identity();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.File.identity"));
        } else
          goto handle_unusual;
        continue;
      // string parent = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_parent();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.File.parent"));
        } else
          goto handle_unusual;
        continue;
      // string name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.File.name"));
        } else
          goto handle_unusual;
        continue;
      // string path = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.File.path"));
        } else
          goto handle_unusual;
        continue;
      // string mime_type = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_mime_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.File.mime_type"));
        } else
          goto handle_unusual;
        continue;
      // int64 size = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 type = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 created_at = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _impl_.created_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 updated_at = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _impl_.updated_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 deleted_at = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          _impl_.deleted_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool deleted = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _impl_.deleted_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool dir = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          _impl_.dir_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool hidden = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _impl_.hidden_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool locked = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          _impl_.locked_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool shared = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _impl_.shared_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool starred = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          _impl_.starred_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool trashed = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _impl_.trashed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 locked_at = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 152)) {
          _impl_.locked_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string locked_by = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          auto str = _internal_mutable_locked_by();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.File.locked_by"));
        } else
          goto handle_unusual;
        continue;
      // int64 shared_at = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 168)) {
          _impl_.shared_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 flag = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          _impl_.flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string unique = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          auto str = _internal_mutable_unique();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.File.unique"));
        } else
          goto handle_unusual;
        continue;
      // string content_identity = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 194)) {
          auto str = _internal_mutable_content_identity();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.File.content_identity"));
        } else
          goto handle_unusual;
        continue;
      // int64 label = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 200)) {
          _impl_.label_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* File::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v6.services.pub.File)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string identity = 1;
  if (!this->_internal_identity().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identity().data(), static_cast<int>(this->_internal_identity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.File.identity");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_identity(), target);
  }

  // string parent = 3;
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.File.parent");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_parent(), target);
  }

  // string name = 4;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.File.name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_name(), target);
  }

  // string path = 5;
  if (!this->_internal_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.File.path");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_path(), target);
  }

  // string mime_type = 6;
  if (!this->_internal_mime_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mime_type().data(), static_cast<int>(this->_internal_mime_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.File.mime_type");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_mime_type(), target);
  }

  // int64 size = 7;
  if (this->_internal_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(7, this->_internal_size(), target);
  }

  // int64 type = 8;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(8, this->_internal_type(), target);
  }

  // int64 created_at = 9;
  if (this->_internal_created_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(9, this->_internal_created_at(), target);
  }

  // int64 updated_at = 10;
  if (this->_internal_updated_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(10, this->_internal_updated_at(), target);
  }

  // int64 deleted_at = 11;
  if (this->_internal_deleted_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(11, this->_internal_deleted_at(), target);
  }

  // bool deleted = 12;
  if (this->_internal_deleted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(12, this->_internal_deleted(), target);
  }

  // bool dir = 13;
  if (this->_internal_dir() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(13, this->_internal_dir(), target);
  }

  // bool hidden = 14;
  if (this->_internal_hidden() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(14, this->_internal_hidden(), target);
  }

  // bool locked = 15;
  if (this->_internal_locked() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(15, this->_internal_locked(), target);
  }

  // bool shared = 16;
  if (this->_internal_shared() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(16, this->_internal_shared(), target);
  }

  // bool starred = 17;
  if (this->_internal_starred() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(17, this->_internal_starred(), target);
  }

  // bool trashed = 18;
  if (this->_internal_trashed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(18, this->_internal_trashed(), target);
  }

  // int64 locked_at = 19;
  if (this->_internal_locked_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(19, this->_internal_locked_at(), target);
  }

  // string locked_by = 20;
  if (!this->_internal_locked_by().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_locked_by().data(), static_cast<int>(this->_internal_locked_by().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.File.locked_by");
    target = stream->WriteStringMaybeAliased(
        20, this->_internal_locked_by(), target);
  }

  // int64 shared_at = 21;
  if (this->_internal_shared_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(21, this->_internal_shared_at(), target);
  }

  // int64 flag = 22;
  if (this->_internal_flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(22, this->_internal_flag(), target);
  }

  // string unique = 23;
  if (!this->_internal_unique().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_unique().data(), static_cast<int>(this->_internal_unique().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.File.unique");
    target = stream->WriteStringMaybeAliased(
        23, this->_internal_unique(), target);
  }

  // string content_identity = 24;
  if (!this->_internal_content_identity().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content_identity().data(), static_cast<int>(this->_internal_content_identity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.File.content_identity");
    target = stream->WriteStringMaybeAliased(
        24, this->_internal_content_identity(), target);
  }

  // int64 label = 25;
  if (this->_internal_label() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(25, this->_internal_label(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v6.services.pub.File)
  return target;
}

size_t File::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v6.services.pub.File)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string identity = 1;
  if (!this->_internal_identity().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identity());
  }

  // string parent = 3;
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string name = 4;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string path = 5;
  if (!this->_internal_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // string mime_type = 6;
  if (!this->_internal_mime_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mime_type());
  }

  // string locked_by = 20;
  if (!this->_internal_locked_by().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_locked_by());
  }

  // string unique = 23;
  if (!this->_internal_unique().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_unique());
  }

  // string content_identity = 24;
  if (!this->_internal_content_identity().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content_identity());
  }

  // int64 size = 7;
  if (this->_internal_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_size());
  }

  // int64 type = 8;
  if (this->_internal_type() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_type());
  }

  // int64 created_at = 9;
  if (this->_internal_created_at() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_created_at());
  }

  // int64 updated_at = 10;
  if (this->_internal_updated_at() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_updated_at());
  }

  // int64 deleted_at = 11;
  if (this->_internal_deleted_at() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_deleted_at());
  }

  // bool deleted = 12;
  if (this->_internal_deleted() != 0) {
    total_size += 1 + 1;
  }

  // bool dir = 13;
  if (this->_internal_dir() != 0) {
    total_size += 1 + 1;
  }

  // bool hidden = 14;
  if (this->_internal_hidden() != 0) {
    total_size += 1 + 1;
  }

  // bool locked = 15;
  if (this->_internal_locked() != 0) {
    total_size += 1 + 1;
  }

  // bool shared = 16;
  if (this->_internal_shared() != 0) {
    total_size += 2 + 1;
  }

  // bool starred = 17;
  if (this->_internal_starred() != 0) {
    total_size += 2 + 1;
  }

  // bool trashed = 18;
  if (this->_internal_trashed() != 0) {
    total_size += 2 + 1;
  }

  // int64 locked_at = 19;
  if (this->_internal_locked_at() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_locked_at());
  }

  // int64 shared_at = 21;
  if (this->_internal_shared_at() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_shared_at());
  }

  // int64 flag = 22;
  if (this->_internal_flag() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_flag());
  }

  // int64 label = 25;
  if (this->_internal_label() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_label());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData File::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    File::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*File::GetClassData() const { return &_class_data_; }


void File::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<File*>(&to_msg);
  auto& from = static_cast<const File&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:v6.services.pub.File)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_identity().empty()) {
    _this->_internal_set_identity(from._internal_identity());
  }
  if (!from._internal_parent().empty()) {
    _this->_internal_set_parent(from._internal_parent());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  if (!from._internal_mime_type().empty()) {
    _this->_internal_set_mime_type(from._internal_mime_type());
  }
  if (!from._internal_locked_by().empty()) {
    _this->_internal_set_locked_by(from._internal_locked_by());
  }
  if (!from._internal_unique().empty()) {
    _this->_internal_set_unique(from._internal_unique());
  }
  if (!from._internal_content_identity().empty()) {
    _this->_internal_set_content_identity(from._internal_content_identity());
  }
  if (from._internal_size() != 0) {
    _this->_internal_set_size(from._internal_size());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  if (from._internal_created_at() != 0) {
    _this->_internal_set_created_at(from._internal_created_at());
  }
  if (from._internal_updated_at() != 0) {
    _this->_internal_set_updated_at(from._internal_updated_at());
  }
  if (from._internal_deleted_at() != 0) {
    _this->_internal_set_deleted_at(from._internal_deleted_at());
  }
  if (from._internal_deleted() != 0) {
    _this->_internal_set_deleted(from._internal_deleted());
  }
  if (from._internal_dir() != 0) {
    _this->_internal_set_dir(from._internal_dir());
  }
  if (from._internal_hidden() != 0) {
    _this->_internal_set_hidden(from._internal_hidden());
  }
  if (from._internal_locked() != 0) {
    _this->_internal_set_locked(from._internal_locked());
  }
  if (from._internal_shared() != 0) {
    _this->_internal_set_shared(from._internal_shared());
  }
  if (from._internal_starred() != 0) {
    _this->_internal_set_starred(from._internal_starred());
  }
  if (from._internal_trashed() != 0) {
    _this->_internal_set_trashed(from._internal_trashed());
  }
  if (from._internal_locked_at() != 0) {
    _this->_internal_set_locked_at(from._internal_locked_at());
  }
  if (from._internal_shared_at() != 0) {
    _this->_internal_set_shared_at(from._internal_shared_at());
  }
  if (from._internal_flag() != 0) {
    _this->_internal_set_flag(from._internal_flag());
  }
  if (from._internal_label() != 0) {
    _this->_internal_set_label(from._internal_label());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void File::CopyFrom(const File& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v6.services.pub.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool File::IsInitialized() const {
  return true;
}

void File::InternalSwap(File* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.identity_, lhs_arena,
      &other->_impl_.identity_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parent_, lhs_arena,
      &other->_impl_.parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.path_, lhs_arena,
      &other->_impl_.path_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.mime_type_, lhs_arena,
      &other->_impl_.mime_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.locked_by_, lhs_arena,
      &other->_impl_.locked_by_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.unique_, lhs_arena,
      &other->_impl_.unique_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.content_identity_, lhs_arena,
      &other->_impl_.content_identity_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(File, _impl_.label_)
      + sizeof(File::_impl_.label_)
      - PROTOBUF_FIELD_OFFSET(File, _impl_.size_)>(
          reinterpret_cast<char*>(&_impl_.size_),
          reinterpret_cast<char*>(&other->_impl_.size_));
}

::PROTOBUF_NAMESPACE_ID::Metadata File::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_public_5fuser_5ffile_2eproto_getter, &descriptor_table_public_5fuser_5ffile_2eproto_once,
      file_level_metadata_public_5fuser_5ffile_2eproto[0]);
}

// ===================================================================

class FileListRequest::_Internal {
 public:
  static const ::v6::services::pub::File& parent(const FileListRequest* msg);
  static const ::v6::services::pub::File& filter(const FileListRequest* msg);
  static const ::v6::services::pub::common::ScanListRequest& list_info(const FileListRequest* msg);
};

const ::v6::services::pub::File&
FileListRequest::_Internal::parent(const FileListRequest* msg) {
  return *msg->_impl_.parent_;
}
const ::v6::services::pub::File&
FileListRequest::_Internal::filter(const FileListRequest* msg) {
  return *msg->_impl_.filter_;
}
const ::v6::services::pub::common::ScanListRequest&
FileListRequest::_Internal::list_info(const FileListRequest* msg) {
  return *msg->_impl_.list_info_;
}
void FileListRequest::clear_list_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.list_info_ != nullptr) {
    delete _impl_.list_info_;
  }
  _impl_.list_info_ = nullptr;
}
FileListRequest::FileListRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:v6.services.pub.FileListRequest)
}
FileListRequest::FileListRequest(const FileListRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FileListRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_){nullptr}
    , decltype(_impl_.filter_){nullptr}
    , decltype(_impl_.list_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_parent()) {
    _this->_impl_.parent_ = new ::v6::services::pub::File(*from._impl_.parent_);
  }
  if (from._internal_has_filter()) {
    _this->_impl_.filter_ = new ::v6::services::pub::File(*from._impl_.filter_);
  }
  if (from._internal_has_list_info()) {
    _this->_impl_.list_info_ = new ::v6::services::pub::common::ScanListRequest(*from._impl_.list_info_);
  }
  // @@protoc_insertion_point(copy_constructor:v6.services.pub.FileListRequest)
}

inline void FileListRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_){nullptr}
    , decltype(_impl_.filter_){nullptr}
    , decltype(_impl_.list_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FileListRequest::~FileListRequest() {
  // @@protoc_insertion_point(destructor:v6.services.pub.FileListRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FileListRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.parent_;
  if (this != internal_default_instance()) delete _impl_.filter_;
  if (this != internal_default_instance()) delete _impl_.list_info_;
}

void FileListRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FileListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:v6.services.pub.FileListRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.parent_ != nullptr) {
    delete _impl_.parent_;
  }
  _impl_.parent_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.filter_ != nullptr) {
    delete _impl_.filter_;
  }
  _impl_.filter_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.list_info_ != nullptr) {
    delete _impl_.list_info_;
  }
  _impl_.list_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileListRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .v6.services.pub.File parent = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_parent(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .v6.services.pub.File filter = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_filter(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .v6.services.pub.common.ScanListRequest list_info = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FileListRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v6.services.pub.FileListRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .v6.services.pub.File parent = 1;
  if (this->_internal_has_parent()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::parent(this),
        _Internal::parent(this).GetCachedSize(), target, stream);
  }

  // .v6.services.pub.File filter = 2;
  if (this->_internal_has_filter()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::filter(this),
        _Internal::filter(this).GetCachedSize(), target, stream);
  }

  // .v6.services.pub.common.ScanListRequest list_info = 3;
  if (this->_internal_has_list_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::list_info(this),
        _Internal::list_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v6.services.pub.FileListRequest)
  return target;
}

size_t FileListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v6.services.pub.FileListRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .v6.services.pub.File parent = 1;
  if (this->_internal_has_parent()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.parent_);
  }

  // .v6.services.pub.File filter = 2;
  if (this->_internal_has_filter()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.filter_);
  }

  // .v6.services.pub.common.ScanListRequest list_info = 3;
  if (this->_internal_has_list_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.list_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FileListRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FileListRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FileListRequest::GetClassData() const { return &_class_data_; }


void FileListRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FileListRequest*>(&to_msg);
  auto& from = static_cast<const FileListRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:v6.services.pub.FileListRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_parent()) {
    _this->_internal_mutable_parent()->::v6::services::pub::File::MergeFrom(
        from._internal_parent());
  }
  if (from._internal_has_filter()) {
    _this->_internal_mutable_filter()->::v6::services::pub::File::MergeFrom(
        from._internal_filter());
  }
  if (from._internal_has_list_info()) {
    _this->_internal_mutable_list_info()->::v6::services::pub::common::ScanListRequest::MergeFrom(
        from._internal_list_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FileListRequest::CopyFrom(const FileListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v6.services.pub.FileListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileListRequest::IsInitialized() const {
  return true;
}

void FileListRequest::InternalSwap(FileListRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FileListRequest, _impl_.list_info_)
      + sizeof(FileListRequest::_impl_.list_info_)
      - PROTOBUF_FIELD_OFFSET(FileListRequest, _impl_.parent_)>(
          reinterpret_cast<char*>(&_impl_.parent_),
          reinterpret_cast<char*>(&other->_impl_.parent_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FileListRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_public_5fuser_5ffile_2eproto_getter, &descriptor_table_public_5fuser_5ffile_2eproto_once,
      file_level_metadata_public_5fuser_5ffile_2eproto[1]);
}

// ===================================================================

class SearchRequest::_Internal {
 public:
  static const ::v6::services::pub::common::ScanListRequest& list_info(const SearchRequest* msg);
};

const ::v6::services::pub::common::ScanListRequest&
SearchRequest::_Internal::list_info(const SearchRequest* msg) {
  return *msg->_impl_.list_info_;
}
void SearchRequest::clear_list_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.list_info_ != nullptr) {
    delete _impl_.list_info_;
  }
  _impl_.list_info_ = nullptr;
}
SearchRequest::SearchRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:v6.services.pub.SearchRequest)
}
SearchRequest::SearchRequest(const SearchRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SearchRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.list_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_list_info()) {
    _this->_impl_.list_info_ = new ::v6::services::pub::common::ScanListRequest(*from._impl_.list_info_);
  }
  // @@protoc_insertion_point(copy_constructor:v6.services.pub.SearchRequest)
}

inline void SearchRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.list_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SearchRequest::~SearchRequest() {
  // @@protoc_insertion_point(destructor:v6.services.pub.SearchRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SearchRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.list_info_;
}

void SearchRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SearchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:v6.services.pub.SearchRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.list_info_ != nullptr) {
    delete _impl_.list_info_;
  }
  _impl_.list_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SearchRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.SearchRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .v6.services.pub.common.ScanListRequest list_info = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SearchRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v6.services.pub.SearchRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.SearchRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .v6.services.pub.common.ScanListRequest list_info = 3;
  if (this->_internal_has_list_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::list_info(this),
        _Internal::list_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v6.services.pub.SearchRequest)
  return target;
}

size_t SearchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v6.services.pub.SearchRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .v6.services.pub.common.ScanListRequest list_info = 3;
  if (this->_internal_has_list_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.list_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SearchRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SearchRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SearchRequest::GetClassData() const { return &_class_data_; }


void SearchRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SearchRequest*>(&to_msg);
  auto& from = static_cast<const SearchRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:v6.services.pub.SearchRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_has_list_info()) {
    _this->_internal_mutable_list_info()->::v6::services::pub::common::ScanListRequest::MergeFrom(
        from._internal_list_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SearchRequest::CopyFrom(const SearchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v6.services.pub.SearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchRequest::IsInitialized() const {
  return true;
}

void SearchRequest::InternalSwap(SearchRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.list_info_, other->_impl_.list_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SearchRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_public_5fuser_5ffile_2eproto_getter, &descriptor_table_public_5fuser_5ffile_2eproto_once,
      file_level_metadata_public_5fuser_5ffile_2eproto[2]);
}

// ===================================================================

class FileListResponse::_Internal {
 public:
  static const ::v6::services::pub::common::ScanListRequest& list_info(const FileListResponse* msg);
};

const ::v6::services::pub::common::ScanListRequest&
FileListResponse::_Internal::list_info(const FileListResponse* msg) {
  return *msg->_impl_.list_info_;
}
void FileListResponse::clear_list_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.list_info_ != nullptr) {
    delete _impl_.list_info_;
  }
  _impl_.list_info_ = nullptr;
}
FileListResponse::FileListResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:v6.services.pub.FileListResponse)
}
FileListResponse::FileListResponse(const FileListResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FileListResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.files_){from._impl_.files_}
    , decltype(_impl_.list_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_list_info()) {
    _this->_impl_.list_info_ = new ::v6::services::pub::common::ScanListRequest(*from._impl_.list_info_);
  }
  // @@protoc_insertion_point(copy_constructor:v6.services.pub.FileListResponse)
}

inline void FileListResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.files_){arena}
    , decltype(_impl_.list_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FileListResponse::~FileListResponse() {
  // @@protoc_insertion_point(destructor:v6.services.pub.FileListResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FileListResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.files_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.list_info_;
}

void FileListResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FileListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:v6.services.pub.FileListResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.files_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.list_info_ != nullptr) {
    delete _impl_.list_info_;
  }
  _impl_.list_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileListResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .v6.services.pub.File files = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_files(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .v6.services.pub.common.ScanListRequest list_info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FileListResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v6.services.pub.FileListResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .v6.services.pub.File files = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_files_size()); i < n; i++) {
    const auto& repfield = this->_internal_files(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .v6.services.pub.common.ScanListRequest list_info = 2;
  if (this->_internal_has_list_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::list_info(this),
        _Internal::list_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v6.services.pub.FileListResponse)
  return target;
}

size_t FileListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v6.services.pub.FileListResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .v6.services.pub.File files = 1;
  total_size += 1UL * this->_internal_files_size();
  for (const auto& msg : this->_impl_.files_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .v6.services.pub.common.ScanListRequest list_info = 2;
  if (this->_internal_has_list_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.list_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FileListResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FileListResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FileListResponse::GetClassData() const { return &_class_data_; }


void FileListResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FileListResponse*>(&to_msg);
  auto& from = static_cast<const FileListResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:v6.services.pub.FileListResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.files_.MergeFrom(from._impl_.files_);
  if (from._internal_has_list_info()) {
    _this->_internal_mutable_list_info()->::v6::services::pub::common::ScanListRequest::MergeFrom(
        from._internal_list_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FileListResponse::CopyFrom(const FileListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v6.services.pub.FileListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileListResponse::IsInitialized() const {
  return true;
}

void FileListResponse::InternalSwap(FileListResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.files_.InternalSwap(&other->_impl_.files_);
  swap(_impl_.list_info_, other->_impl_.list_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FileListResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_public_5fuser_5ffile_2eproto_getter, &descriptor_table_public_5fuser_5ffile_2eproto_once,
      file_level_metadata_public_5fuser_5ffile_2eproto[3]);
}

// ===================================================================

class BatchOperationRequest::_Internal {
 public:
  static const ::v6::services::pub::File& dest(const BatchOperationRequest* msg);
};

const ::v6::services::pub::File&
BatchOperationRequest::_Internal::dest(const BatchOperationRequest* msg) {
  return *msg->_impl_.dest_;
}
BatchOperationRequest::BatchOperationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:v6.services.pub.BatchOperationRequest)
}
BatchOperationRequest::BatchOperationRequest(const BatchOperationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BatchOperationRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.source_){from._impl_.source_}
    , decltype(_impl_.dest_){nullptr}
    , decltype(_impl_.operation_){}
    , decltype(_impl_.flag_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_dest()) {
    _this->_impl_.dest_ = new ::v6::services::pub::File(*from._impl_.dest_);
  }
  ::memcpy(&_impl_.operation_, &from._impl_.operation_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.flag_) -
    reinterpret_cast<char*>(&_impl_.operation_)) + sizeof(_impl_.flag_));
  // @@protoc_insertion_point(copy_constructor:v6.services.pub.BatchOperationRequest)
}

inline void BatchOperationRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.source_){arena}
    , decltype(_impl_.dest_){nullptr}
    , decltype(_impl_.operation_){0}
    , decltype(_impl_.flag_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BatchOperationRequest::~BatchOperationRequest() {
  // @@protoc_insertion_point(destructor:v6.services.pub.BatchOperationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BatchOperationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.source_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.dest_;
}

void BatchOperationRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BatchOperationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:v6.services.pub.BatchOperationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.source_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.dest_ != nullptr) {
    delete _impl_.dest_;
  }
  _impl_.dest_ = nullptr;
  ::memset(&_impl_.operation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.flag_) -
      reinterpret_cast<char*>(&_impl_.operation_)) + sizeof(_impl_.flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BatchOperationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .v6.services.pub.File source = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_source(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .v6.services.pub.File dest = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_dest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 operation = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.operation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 flag = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BatchOperationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v6.services.pub.BatchOperationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .v6.services.pub.File source = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_source_size()); i < n; i++) {
    const auto& repfield = this->_internal_source(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .v6.services.pub.File dest = 2;
  if (this->_internal_has_dest()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::dest(this),
        _Internal::dest(this).GetCachedSize(), target, stream);
  }

  // int32 operation = 3;
  if (this->_internal_operation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_operation(), target);
  }

  // int32 flag = 4;
  if (this->_internal_flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v6.services.pub.BatchOperationRequest)
  return target;
}

size_t BatchOperationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v6.services.pub.BatchOperationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .v6.services.pub.File source = 1;
  total_size += 1UL * this->_internal_source_size();
  for (const auto& msg : this->_impl_.source_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .v6.services.pub.File dest = 2;
  if (this->_internal_has_dest()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.dest_);
  }

  // int32 operation = 3;
  if (this->_internal_operation() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_operation());
  }

  // int32 flag = 4;
  if (this->_internal_flag() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_flag());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BatchOperationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BatchOperationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BatchOperationRequest::GetClassData() const { return &_class_data_; }


void BatchOperationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BatchOperationRequest*>(&to_msg);
  auto& from = static_cast<const BatchOperationRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:v6.services.pub.BatchOperationRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.source_.MergeFrom(from._impl_.source_);
  if (from._internal_has_dest()) {
    _this->_internal_mutable_dest()->::v6::services::pub::File::MergeFrom(
        from._internal_dest());
  }
  if (from._internal_operation() != 0) {
    _this->_internal_set_operation(from._internal_operation());
  }
  if (from._internal_flag() != 0) {
    _this->_internal_set_flag(from._internal_flag());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BatchOperationRequest::CopyFrom(const BatchOperationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v6.services.pub.BatchOperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchOperationRequest::IsInitialized() const {
  return true;
}

void BatchOperationRequest::InternalSwap(BatchOperationRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.source_.InternalSwap(&other->_impl_.source_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BatchOperationRequest, _impl_.flag_)
      + sizeof(BatchOperationRequest::_impl_.flag_)
      - PROTOBUF_FIELD_OFFSET(BatchOperationRequest, _impl_.dest_)>(
          reinterpret_cast<char*>(&_impl_.dest_),
          reinterpret_cast<char*>(&other->_impl_.dest_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BatchOperationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_public_5fuser_5ffile_2eproto_getter, &descriptor_table_public_5fuser_5ffile_2eproto_once,
      file_level_metadata_public_5fuser_5ffile_2eproto[4]);
}

// ===================================================================

class BatchOperationResponse::_Internal {
 public:
};

BatchOperationResponse::BatchOperationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:v6.services.pub.BatchOperationResponse)
}
BatchOperationResponse::BatchOperationResponse(const BatchOperationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BatchOperationResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.task_){}
    , decltype(_impl_.affected_){}
    , decltype(_impl_.created_at_){}
    , decltype(_impl_.progress_){}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.task_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.task_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_task().empty()) {
    _this->_impl_.task_.Set(from._internal_task(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.affected_, &from._impl_.affected_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.status_) -
    reinterpret_cast<char*>(&_impl_.affected_)) + sizeof(_impl_.status_));
  // @@protoc_insertion_point(copy_constructor:v6.services.pub.BatchOperationResponse)
}

inline void BatchOperationResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.task_){}
    , decltype(_impl_.affected_){int64_t{0}}
    , decltype(_impl_.created_at_){int64_t{0}}
    , decltype(_impl_.progress_){int64_t{0}}
    , decltype(_impl_.status_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.task_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.task_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

BatchOperationResponse::~BatchOperationResponse() {
  // @@protoc_insertion_point(destructor:v6.services.pub.BatchOperationResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BatchOperationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.task_.Destroy();
}

void BatchOperationResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BatchOperationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:v6.services.pub.BatchOperationResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.task_.ClearToEmpty();
  ::memset(&_impl_.affected_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.status_) -
      reinterpret_cast<char*>(&_impl_.affected_)) + sizeof(_impl_.status_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BatchOperationResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string task = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_task();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.BatchOperationResponse.task"));
        } else
          goto handle_unusual;
        continue;
      // int32 status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 affected = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.affected_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 created_at = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.created_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 progress = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.progress_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BatchOperationResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v6.services.pub.BatchOperationResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string task = 1;
  if (!this->_internal_task().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_task().data(), static_cast<int>(this->_internal_task().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.BatchOperationResponse.task");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_task(), target);
  }

  // int32 status = 2;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_status(), target);
  }

  // int64 affected = 3;
  if (this->_internal_affected() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_affected(), target);
  }

  // int64 created_at = 4;
  if (this->_internal_created_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_created_at(), target);
  }

  // int64 progress = 5;
  if (this->_internal_progress() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_progress(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v6.services.pub.BatchOperationResponse)
  return target;
}

size_t BatchOperationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v6.services.pub.BatchOperationResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string task = 1;
  if (!this->_internal_task().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_task());
  }

  // int64 affected = 3;
  if (this->_internal_affected() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_affected());
  }

  // int64 created_at = 4;
  if (this->_internal_created_at() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_created_at());
  }

  // int64 progress = 5;
  if (this->_internal_progress() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_progress());
  }

  // int32 status = 2;
  if (this->_internal_status() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BatchOperationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BatchOperationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BatchOperationResponse::GetClassData() const { return &_class_data_; }


void BatchOperationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BatchOperationResponse*>(&to_msg);
  auto& from = static_cast<const BatchOperationResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:v6.services.pub.BatchOperationResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_task().empty()) {
    _this->_internal_set_task(from._internal_task());
  }
  if (from._internal_affected() != 0) {
    _this->_internal_set_affected(from._internal_affected());
  }
  if (from._internal_created_at() != 0) {
    _this->_internal_set_created_at(from._internal_created_at());
  }
  if (from._internal_progress() != 0) {
    _this->_internal_set_progress(from._internal_progress());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BatchOperationResponse::CopyFrom(const BatchOperationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v6.services.pub.BatchOperationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchOperationResponse::IsInitialized() const {
  return true;
}

void BatchOperationResponse::InternalSwap(BatchOperationResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.task_, lhs_arena,
      &other->_impl_.task_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BatchOperationResponse, _impl_.status_)
      + sizeof(BatchOperationResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(BatchOperationResponse, _impl_.affected_)>(
          reinterpret_cast<char*>(&_impl_.affected_),
          reinterpret_cast<char*>(&other->_impl_.affected_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BatchOperationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_public_5fuser_5ffile_2eproto_getter, &descriptor_table_public_5fuser_5ffile_2eproto_once,
      file_level_metadata_public_5fuser_5ffile_2eproto[5]);
}

// ===================================================================

class ManageRTCRequest::_Internal {
 public:
};

ManageRTCRequest::ManageRTCRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:v6.services.pub.ManageRTCRequest)
}
ManageRTCRequest::ManageRTCRequest(const ManageRTCRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ManageRTCRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sdp_){}
    , decltype(_impl_.offer_){}
    , decltype(_impl_.client_identity_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sdp_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sdp_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sdp().empty()) {
    _this->_impl_.sdp_.Set(from._internal_sdp(), 
      _this->GetArenaForAllocation());
  }
  _impl_.offer_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.offer_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_offer().empty()) {
    _this->_impl_.offer_.Set(from._internal_offer(), 
      _this->GetArenaForAllocation());
  }
  _impl_.client_identity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.client_identity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_client_identity().empty()) {
    _this->_impl_.client_identity_.Set(from._internal_client_identity(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:v6.services.pub.ManageRTCRequest)
}

inline void ManageRTCRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.sdp_){}
    , decltype(_impl_.offer_){}
    , decltype(_impl_.client_identity_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.sdp_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sdp_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.offer_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.offer_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.client_identity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.client_identity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ManageRTCRequest::~ManageRTCRequest() {
  // @@protoc_insertion_point(destructor:v6.services.pub.ManageRTCRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ManageRTCRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sdp_.Destroy();
  _impl_.offer_.Destroy();
  _impl_.client_identity_.Destroy();
}

void ManageRTCRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ManageRTCRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:v6.services.pub.ManageRTCRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sdp_.ClearToEmpty();
  _impl_.offer_.ClearToEmpty();
  _impl_.client_identity_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ManageRTCRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sdp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sdp();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.ManageRTCRequest.sdp"));
        } else
          goto handle_unusual;
        continue;
      // string offer = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_offer();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.ManageRTCRequest.offer"));
        } else
          goto handle_unusual;
        continue;
      // string client_identity = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_client_identity();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.ManageRTCRequest.client_identity"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ManageRTCRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v6.services.pub.ManageRTCRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sdp = 1;
  if (!this->_internal_sdp().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sdp().data(), static_cast<int>(this->_internal_sdp().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.ManageRTCRequest.sdp");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_sdp(), target);
  }

  // string offer = 2;
  if (!this->_internal_offer().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_offer().data(), static_cast<int>(this->_internal_offer().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.ManageRTCRequest.offer");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_offer(), target);
  }

  // string client_identity = 3;
  if (!this->_internal_client_identity().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_identity().data(), static_cast<int>(this->_internal_client_identity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.ManageRTCRequest.client_identity");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_client_identity(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v6.services.pub.ManageRTCRequest)
  return target;
}

size_t ManageRTCRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v6.services.pub.ManageRTCRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sdp = 1;
  if (!this->_internal_sdp().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sdp());
  }

  // string offer = 2;
  if (!this->_internal_offer().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_offer());
  }

  // string client_identity = 3;
  if (!this->_internal_client_identity().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_identity());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ManageRTCRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ManageRTCRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ManageRTCRequest::GetClassData() const { return &_class_data_; }


void ManageRTCRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ManageRTCRequest*>(&to_msg);
  auto& from = static_cast<const ManageRTCRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:v6.services.pub.ManageRTCRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sdp().empty()) {
    _this->_internal_set_sdp(from._internal_sdp());
  }
  if (!from._internal_offer().empty()) {
    _this->_internal_set_offer(from._internal_offer());
  }
  if (!from._internal_client_identity().empty()) {
    _this->_internal_set_client_identity(from._internal_client_identity());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ManageRTCRequest::CopyFrom(const ManageRTCRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v6.services.pub.ManageRTCRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManageRTCRequest::IsInitialized() const {
  return true;
}

void ManageRTCRequest::InternalSwap(ManageRTCRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.sdp_, lhs_arena,
      &other->_impl_.sdp_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.offer_, lhs_arena,
      &other->_impl_.offer_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.client_identity_, lhs_arena,
      &other->_impl_.client_identity_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ManageRTCRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_public_5fuser_5ffile_2eproto_getter, &descriptor_table_public_5fuser_5ffile_2eproto_once,
      file_level_metadata_public_5fuser_5ffile_2eproto[6]);
}

// ===================================================================

class ManageRTCResponse::_Internal {
 public:
};

ManageRTCResponse::ManageRTCResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:v6.services.pub.ManageRTCResponse)
}
ManageRTCResponse::ManageRTCResponse(const ManageRTCResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ManageRTCResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.encode_key_){}
    , decltype(_impl_.sdp_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.connection_){}
    , decltype(_impl_.file_size_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.encode_key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.encode_key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_encode_key().empty()) {
    _this->_impl_.encode_key_.Set(from._internal_encode_key(), 
      _this->GetArenaForAllocation());
  }
  _impl_.sdp_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sdp_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sdp().empty()) {
    _this->_impl_.sdp_.Set(from._internal_sdp(), 
      _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.connection_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.connection_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_connection().empty()) {
    _this->_impl_.connection_.Set(from._internal_connection(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.file_size_ = from._impl_.file_size_;
  // @@protoc_insertion_point(copy_constructor:v6.services.pub.ManageRTCResponse)
}

inline void ManageRTCResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.encode_key_){}
    , decltype(_impl_.sdp_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.connection_){}
    , decltype(_impl_.file_size_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.encode_key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.encode_key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.sdp_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sdp_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.connection_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.connection_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ManageRTCResponse::~ManageRTCResponse() {
  // @@protoc_insertion_point(destructor:v6.services.pub.ManageRTCResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ManageRTCResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.encode_key_.Destroy();
  _impl_.sdp_.Destroy();
  _impl_.name_.Destroy();
  _impl_.connection_.Destroy();
}

void ManageRTCResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ManageRTCResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:v6.services.pub.ManageRTCResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.encode_key_.ClearToEmpty();
  _impl_.sdp_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.connection_.ClearToEmpty();
  _impl_.file_size_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ManageRTCResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 file_size = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.file_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string encode_key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_encode_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.ManageRTCResponse.encode_key"));
        } else
          goto handle_unusual;
        continue;
      // string sdp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_sdp();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.ManageRTCResponse.sdp"));
        } else
          goto handle_unusual;
        continue;
      // string name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.ManageRTCResponse.name"));
        } else
          goto handle_unusual;
        continue;
      // string connection = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_connection();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.ManageRTCResponse.connection"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ManageRTCResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v6.services.pub.ManageRTCResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 file_size = 1;
  if (this->_internal_file_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_file_size(), target);
  }

  // string encode_key = 2;
  if (!this->_internal_encode_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_encode_key().data(), static_cast<int>(this->_internal_encode_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.ManageRTCResponse.encode_key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_encode_key(), target);
  }

  // string sdp = 3;
  if (!this->_internal_sdp().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sdp().data(), static_cast<int>(this->_internal_sdp().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.ManageRTCResponse.sdp");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_sdp(), target);
  }

  // string name = 4;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.ManageRTCResponse.name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_name(), target);
  }

  // string connection = 5;
  if (!this->_internal_connection().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection().data(), static_cast<int>(this->_internal_connection().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.ManageRTCResponse.connection");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_connection(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v6.services.pub.ManageRTCResponse)
  return target;
}

size_t ManageRTCResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v6.services.pub.ManageRTCResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string encode_key = 2;
  if (!this->_internal_encode_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_encode_key());
  }

  // string sdp = 3;
  if (!this->_internal_sdp().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sdp());
  }

  // string name = 4;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string connection = 5;
  if (!this->_internal_connection().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection());
  }

  // int64 file_size = 1;
  if (this->_internal_file_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_file_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ManageRTCResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ManageRTCResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ManageRTCResponse::GetClassData() const { return &_class_data_; }


void ManageRTCResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ManageRTCResponse*>(&to_msg);
  auto& from = static_cast<const ManageRTCResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:v6.services.pub.ManageRTCResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_encode_key().empty()) {
    _this->_internal_set_encode_key(from._internal_encode_key());
  }
  if (!from._internal_sdp().empty()) {
    _this->_internal_set_sdp(from._internal_sdp());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_connection().empty()) {
    _this->_internal_set_connection(from._internal_connection());
  }
  if (from._internal_file_size() != 0) {
    _this->_internal_set_file_size(from._internal_file_size());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ManageRTCResponse::CopyFrom(const ManageRTCResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v6.services.pub.ManageRTCResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManageRTCResponse::IsInitialized() const {
  return true;
}

void ManageRTCResponse::InternalSwap(ManageRTCResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.encode_key_, lhs_arena,
      &other->_impl_.encode_key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.sdp_, lhs_arena,
      &other->_impl_.sdp_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.connection_, lhs_arena,
      &other->_impl_.connection_, rhs_arena
  );
  swap(_impl_.file_size_, other->_impl_.file_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ManageRTCResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_public_5fuser_5ffile_2eproto_getter, &descriptor_table_public_5fuser_5ffile_2eproto_once,
      file_level_metadata_public_5fuser_5ffile_2eproto[7]);
}

// ===================================================================

class SendIceCandidateRequest::_Internal {
 public:
};

SendIceCandidateRequest::SendIceCandidateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:v6.services.pub.SendIceCandidateRequest)
}
SendIceCandidateRequest::SendIceCandidateRequest(const SendIceCandidateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendIceCandidateRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.client_identity_){}
    , decltype(_impl_.candidate_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.client_identity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.client_identity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_client_identity().empty()) {
    _this->_impl_.client_identity_.Set(from._internal_client_identity(), 
      _this->GetArenaForAllocation());
  }
  _impl_.candidate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.candidate_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_candidate().empty()) {
    _this->_impl_.candidate_.Set(from._internal_candidate(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:v6.services.pub.SendIceCandidateRequest)
}

inline void SendIceCandidateRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.client_identity_){}
    , decltype(_impl_.candidate_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.client_identity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.client_identity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.candidate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.candidate_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SendIceCandidateRequest::~SendIceCandidateRequest() {
  // @@protoc_insertion_point(destructor:v6.services.pub.SendIceCandidateRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendIceCandidateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.client_identity_.Destroy();
  _impl_.candidate_.Destroy();
}

void SendIceCandidateRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendIceCandidateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:v6.services.pub.SendIceCandidateRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.client_identity_.ClearToEmpty();
  _impl_.candidate_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendIceCandidateRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string client_identity = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_client_identity();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.SendIceCandidateRequest.client_identity"));
        } else
          goto handle_unusual;
        continue;
      // string candidate = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_candidate();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.SendIceCandidateRequest.candidate"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendIceCandidateRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v6.services.pub.SendIceCandidateRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string client_identity = 1;
  if (!this->_internal_client_identity().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_identity().data(), static_cast<int>(this->_internal_client_identity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.SendIceCandidateRequest.client_identity");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_client_identity(), target);
  }

  // string candidate = 2;
  if (!this->_internal_candidate().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_candidate().data(), static_cast<int>(this->_internal_candidate().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.SendIceCandidateRequest.candidate");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_candidate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v6.services.pub.SendIceCandidateRequest)
  return target;
}

size_t SendIceCandidateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v6.services.pub.SendIceCandidateRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string client_identity = 1;
  if (!this->_internal_client_identity().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_identity());
  }

  // string candidate = 2;
  if (!this->_internal_candidate().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_candidate());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendIceCandidateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendIceCandidateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendIceCandidateRequest::GetClassData() const { return &_class_data_; }


void SendIceCandidateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendIceCandidateRequest*>(&to_msg);
  auto& from = static_cast<const SendIceCandidateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:v6.services.pub.SendIceCandidateRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_client_identity().empty()) {
    _this->_internal_set_client_identity(from._internal_client_identity());
  }
  if (!from._internal_candidate().empty()) {
    _this->_internal_set_candidate(from._internal_candidate());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendIceCandidateRequest::CopyFrom(const SendIceCandidateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v6.services.pub.SendIceCandidateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendIceCandidateRequest::IsInitialized() const {
  return true;
}

void SendIceCandidateRequest::InternalSwap(SendIceCandidateRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.client_identity_, lhs_arena,
      &other->_impl_.client_identity_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.candidate_, lhs_arena,
      &other->_impl_.candidate_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SendIceCandidateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_public_5fuser_5ffile_2eproto_getter, &descriptor_table_public_5fuser_5ffile_2eproto_once,
      file_level_metadata_public_5fuser_5ffile_2eproto[8]);
}

// ===================================================================

class SendIceCandidateResponse::_Internal {
 public:
};

SendIceCandidateResponse::SendIceCandidateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:v6.services.pub.SendIceCandidateResponse)
}
SendIceCandidateResponse::SendIceCandidateResponse(const SendIceCandidateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendIceCandidateResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.client_identity_){}
    , decltype(_impl_.candidate_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.client_identity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.client_identity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_client_identity().empty()) {
    _this->_impl_.client_identity_.Set(from._internal_client_identity(), 
      _this->GetArenaForAllocation());
  }
  _impl_.candidate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.candidate_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_candidate().empty()) {
    _this->_impl_.candidate_.Set(from._internal_candidate(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:v6.services.pub.SendIceCandidateResponse)
}

inline void SendIceCandidateResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.client_identity_){}
    , decltype(_impl_.candidate_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.client_identity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.client_identity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.candidate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.candidate_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SendIceCandidateResponse::~SendIceCandidateResponse() {
  // @@protoc_insertion_point(destructor:v6.services.pub.SendIceCandidateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendIceCandidateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.client_identity_.Destroy();
  _impl_.candidate_.Destroy();
}

void SendIceCandidateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendIceCandidateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:v6.services.pub.SendIceCandidateResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.client_identity_.ClearToEmpty();
  _impl_.candidate_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendIceCandidateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string client_identity = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_client_identity();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.SendIceCandidateResponse.client_identity"));
        } else
          goto handle_unusual;
        continue;
      // string candidate = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_candidate();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.SendIceCandidateResponse.candidate"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendIceCandidateResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v6.services.pub.SendIceCandidateResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string client_identity = 1;
  if (!this->_internal_client_identity().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_identity().data(), static_cast<int>(this->_internal_client_identity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.SendIceCandidateResponse.client_identity");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_client_identity(), target);
  }

  // string candidate = 2;
  if (!this->_internal_candidate().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_candidate().data(), static_cast<int>(this->_internal_candidate().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.SendIceCandidateResponse.candidate");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_candidate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v6.services.pub.SendIceCandidateResponse)
  return target;
}

size_t SendIceCandidateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v6.services.pub.SendIceCandidateResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string client_identity = 1;
  if (!this->_internal_client_identity().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_identity());
  }

  // string candidate = 2;
  if (!this->_internal_candidate().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_candidate());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendIceCandidateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendIceCandidateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendIceCandidateResponse::GetClassData() const { return &_class_data_; }


void SendIceCandidateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendIceCandidateResponse*>(&to_msg);
  auto& from = static_cast<const SendIceCandidateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:v6.services.pub.SendIceCandidateResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_client_identity().empty()) {
    _this->_internal_set_client_identity(from._internal_client_identity());
  }
  if (!from._internal_candidate().empty()) {
    _this->_internal_set_candidate(from._internal_candidate());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendIceCandidateResponse::CopyFrom(const SendIceCandidateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v6.services.pub.SendIceCandidateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendIceCandidateResponse::IsInitialized() const {
  return true;
}

void SendIceCandidateResponse::InternalSwap(SendIceCandidateResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.client_identity_, lhs_arena,
      &other->_impl_.client_identity_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.candidate_, lhs_arena,
      &other->_impl_.candidate_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SendIceCandidateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_public_5fuser_5ffile_2eproto_getter, &descriptor_table_public_5fuser_5ffile_2eproto_once,
      file_level_metadata_public_5fuser_5ffile_2eproto[9]);
}

// ===================================================================

class GetIceCandidateRequest::_Internal {
 public:
};

GetIceCandidateRequest::GetIceCandidateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:v6.services.pub.GetIceCandidateRequest)
}
GetIceCandidateRequest::GetIceCandidateRequest(const GetIceCandidateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetIceCandidateRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.client_identity_){}
    , decltype(_impl_.candidate_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.client_identity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.client_identity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_client_identity().empty()) {
    _this->_impl_.client_identity_.Set(from._internal_client_identity(), 
      _this->GetArenaForAllocation());
  }
  _impl_.candidate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.candidate_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_candidate().empty()) {
    _this->_impl_.candidate_.Set(from._internal_candidate(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:v6.services.pub.GetIceCandidateRequest)
}

inline void GetIceCandidateRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.client_identity_){}
    , decltype(_impl_.candidate_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.client_identity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.client_identity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.candidate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.candidate_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetIceCandidateRequest::~GetIceCandidateRequest() {
  // @@protoc_insertion_point(destructor:v6.services.pub.GetIceCandidateRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetIceCandidateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.client_identity_.Destroy();
  _impl_.candidate_.Destroy();
}

void GetIceCandidateRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetIceCandidateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:v6.services.pub.GetIceCandidateRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.client_identity_.ClearToEmpty();
  _impl_.candidate_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetIceCandidateRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string client_identity = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_client_identity();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.GetIceCandidateRequest.client_identity"));
        } else
          goto handle_unusual;
        continue;
      // string candidate = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_candidate();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.GetIceCandidateRequest.candidate"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetIceCandidateRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v6.services.pub.GetIceCandidateRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string client_identity = 1;
  if (!this->_internal_client_identity().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_identity().data(), static_cast<int>(this->_internal_client_identity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.GetIceCandidateRequest.client_identity");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_client_identity(), target);
  }

  // string candidate = 2;
  if (!this->_internal_candidate().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_candidate().data(), static_cast<int>(this->_internal_candidate().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.GetIceCandidateRequest.candidate");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_candidate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v6.services.pub.GetIceCandidateRequest)
  return target;
}

size_t GetIceCandidateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v6.services.pub.GetIceCandidateRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string client_identity = 1;
  if (!this->_internal_client_identity().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_identity());
  }

  // string candidate = 2;
  if (!this->_internal_candidate().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_candidate());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetIceCandidateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetIceCandidateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetIceCandidateRequest::GetClassData() const { return &_class_data_; }


void GetIceCandidateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetIceCandidateRequest*>(&to_msg);
  auto& from = static_cast<const GetIceCandidateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:v6.services.pub.GetIceCandidateRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_client_identity().empty()) {
    _this->_internal_set_client_identity(from._internal_client_identity());
  }
  if (!from._internal_candidate().empty()) {
    _this->_internal_set_candidate(from._internal_candidate());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetIceCandidateRequest::CopyFrom(const GetIceCandidateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v6.services.pub.GetIceCandidateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIceCandidateRequest::IsInitialized() const {
  return true;
}

void GetIceCandidateRequest::InternalSwap(GetIceCandidateRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.client_identity_, lhs_arena,
      &other->_impl_.client_identity_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.candidate_, lhs_arena,
      &other->_impl_.candidate_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetIceCandidateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_public_5fuser_5ffile_2eproto_getter, &descriptor_table_public_5fuser_5ffile_2eproto_once,
      file_level_metadata_public_5fuser_5ffile_2eproto[10]);
}

// ===================================================================

class GetIceCandidateResponse::_Internal {
 public:
};

GetIceCandidateResponse::GetIceCandidateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:v6.services.pub.GetIceCandidateResponse)
}
GetIceCandidateResponse::GetIceCandidateResponse(const GetIceCandidateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetIceCandidateResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.candidate_){from._impl_.candidate_}
    , decltype(_impl_.client_identity_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.client_identity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.client_identity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_client_identity().empty()) {
    _this->_impl_.client_identity_.Set(from._internal_client_identity(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:v6.services.pub.GetIceCandidateResponse)
}

inline void GetIceCandidateResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.candidate_){arena}
    , decltype(_impl_.client_identity_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.client_identity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.client_identity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetIceCandidateResponse::~GetIceCandidateResponse() {
  // @@protoc_insertion_point(destructor:v6.services.pub.GetIceCandidateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetIceCandidateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.candidate_.~RepeatedPtrField();
  _impl_.client_identity_.Destroy();
}

void GetIceCandidateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetIceCandidateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:v6.services.pub.GetIceCandidateResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.candidate_.Clear();
  _impl_.client_identity_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetIceCandidateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string client_identity = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_client_identity();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.GetIceCandidateResponse.client_identity"));
        } else
          goto handle_unusual;
        continue;
      // repeated string candidate = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_candidate();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.GetIceCandidateResponse.candidate"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetIceCandidateResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v6.services.pub.GetIceCandidateResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string client_identity = 1;
  if (!this->_internal_client_identity().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_identity().data(), static_cast<int>(this->_internal_client_identity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.GetIceCandidateResponse.client_identity");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_client_identity(), target);
  }

  // repeated string candidate = 2;
  for (int i = 0, n = this->_internal_candidate_size(); i < n; i++) {
    const auto& s = this->_internal_candidate(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.GetIceCandidateResponse.candidate");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v6.services.pub.GetIceCandidateResponse)
  return target;
}

size_t GetIceCandidateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v6.services.pub.GetIceCandidateResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string candidate = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.candidate_.size());
  for (int i = 0, n = _impl_.candidate_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.candidate_.Get(i));
  }

  // string client_identity = 1;
  if (!this->_internal_client_identity().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_identity());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetIceCandidateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetIceCandidateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetIceCandidateResponse::GetClassData() const { return &_class_data_; }


void GetIceCandidateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetIceCandidateResponse*>(&to_msg);
  auto& from = static_cast<const GetIceCandidateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:v6.services.pub.GetIceCandidateResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.candidate_.MergeFrom(from._impl_.candidate_);
  if (!from._internal_client_identity().empty()) {
    _this->_internal_set_client_identity(from._internal_client_identity());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetIceCandidateResponse::CopyFrom(const GetIceCandidateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v6.services.pub.GetIceCandidateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIceCandidateResponse::IsInitialized() const {
  return true;
}

void GetIceCandidateResponse::InternalSwap(GetIceCandidateResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.candidate_.InternalSwap(&other->_impl_.candidate_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.client_identity_, lhs_arena,
      &other->_impl_.client_identity_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetIceCandidateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_public_5fuser_5ffile_2eproto_getter, &descriptor_table_public_5fuser_5ffile_2eproto_once,
      file_level_metadata_public_5fuser_5ffile_2eproto[11]);
}

// ===================================================================

class ParseFileSliceResponse::_Internal {
 public:
};

ParseFileSliceResponse::ParseFileSliceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:v6.services.pub.ParseFileSliceResponse)
}
ParseFileSliceResponse::ParseFileSliceResponse(const ParseFileSliceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ParseFileSliceResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.meta_nodes_){from._impl_.meta_nodes_}
    , decltype(_impl_.raw_nodes_){from._impl_.raw_nodes_}
    , decltype(_impl_.sizes_){from._impl_.sizes_}
    , decltype(_impl_.content_identity_){}
    , decltype(_impl_.sha1_){}
    , decltype(_impl_.wcs_etag_){}
    , decltype(_impl_.file_size_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.content_identity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_identity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content_identity().empty()) {
    _this->_impl_.content_identity_.Set(from._internal_content_identity(), 
      _this->GetArenaForAllocation());
  }
  _impl_.sha1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sha1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sha1().empty()) {
    _this->_impl_.sha1_.Set(from._internal_sha1(), 
      _this->GetArenaForAllocation());
  }
  _impl_.wcs_etag_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.wcs_etag_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_wcs_etag().empty()) {
    _this->_impl_.wcs_etag_.Set(from._internal_wcs_etag(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.file_size_ = from._impl_.file_size_;
  // @@protoc_insertion_point(copy_constructor:v6.services.pub.ParseFileSliceResponse)
}

inline void ParseFileSliceResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.meta_nodes_){arena}
    , decltype(_impl_.raw_nodes_){arena}
    , decltype(_impl_.sizes_){arena}
    , decltype(_impl_.content_identity_){}
    , decltype(_impl_.sha1_){}
    , decltype(_impl_.wcs_etag_){}
    , decltype(_impl_.file_size_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.content_identity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_identity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.sha1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sha1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.wcs_etag_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.wcs_etag_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ParseFileSliceResponse::~ParseFileSliceResponse() {
  // @@protoc_insertion_point(destructor:v6.services.pub.ParseFileSliceResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ParseFileSliceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.meta_nodes_.~RepeatedPtrField();
  _impl_.raw_nodes_.~RepeatedPtrField();
  _impl_.sizes_.~RepeatedPtrField();
  _impl_.content_identity_.Destroy();
  _impl_.sha1_.Destroy();
  _impl_.wcs_etag_.Destroy();
}

void ParseFileSliceResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ParseFileSliceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:v6.services.pub.ParseFileSliceResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.meta_nodes_.Clear();
  _impl_.raw_nodes_.Clear();
  _impl_.sizes_.Clear();
  _impl_.content_identity_.ClearToEmpty();
  _impl_.sha1_.ClearToEmpty();
  _impl_.wcs_etag_.ClearToEmpty();
  _impl_.file_size_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ParseFileSliceResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string content_identity = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_content_identity();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.ParseFileSliceResponse.content_identity"));
        } else
          goto handle_unusual;
        continue;
      // repeated string meta_nodes = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_meta_nodes();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.ParseFileSliceResponse.meta_nodes"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated string raw_nodes = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_raw_nodes();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.ParseFileSliceResponse.raw_nodes"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int64 file_size = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.file_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .v6.services.pub.SliceSize sizes = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_sizes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string sha1 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_sha1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.ParseFileSliceResponse.sha1"));
        } else
          goto handle_unusual;
        continue;
      // string wcs_etag = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_wcs_etag();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.ParseFileSliceResponse.wcs_etag"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ParseFileSliceResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v6.services.pub.ParseFileSliceResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string content_identity = 1;
  if (!this->_internal_content_identity().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content_identity().data(), static_cast<int>(this->_internal_content_identity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.ParseFileSliceResponse.content_identity");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_content_identity(), target);
  }

  // repeated string meta_nodes = 2;
  for (int i = 0, n = this->_internal_meta_nodes_size(); i < n; i++) {
    const auto& s = this->_internal_meta_nodes(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.ParseFileSliceResponse.meta_nodes");
    target = stream->WriteString(2, s, target);
  }

  // repeated string raw_nodes = 3;
  for (int i = 0, n = this->_internal_raw_nodes_size(); i < n; i++) {
    const auto& s = this->_internal_raw_nodes(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.ParseFileSliceResponse.raw_nodes");
    target = stream->WriteString(3, s, target);
  }

  // int64 file_size = 4;
  if (this->_internal_file_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_file_size(), target);
  }

  // repeated .v6.services.pub.SliceSize sizes = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_sizes_size()); i < n; i++) {
    const auto& repfield = this->_internal_sizes(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string sha1 = 6;
  if (!this->_internal_sha1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sha1().data(), static_cast<int>(this->_internal_sha1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.ParseFileSliceResponse.sha1");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_sha1(), target);
  }

  // string wcs_etag = 7;
  if (!this->_internal_wcs_etag().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_wcs_etag().data(), static_cast<int>(this->_internal_wcs_etag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.ParseFileSliceResponse.wcs_etag");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_wcs_etag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v6.services.pub.ParseFileSliceResponse)
  return target;
}

size_t ParseFileSliceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v6.services.pub.ParseFileSliceResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string meta_nodes = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.meta_nodes_.size());
  for (int i = 0, n = _impl_.meta_nodes_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.meta_nodes_.Get(i));
  }

  // repeated string raw_nodes = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.raw_nodes_.size());
  for (int i = 0, n = _impl_.raw_nodes_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.raw_nodes_.Get(i));
  }

  // repeated .v6.services.pub.SliceSize sizes = 5;
  total_size += 1UL * this->_internal_sizes_size();
  for (const auto& msg : this->_impl_.sizes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string content_identity = 1;
  if (!this->_internal_content_identity().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content_identity());
  }

  // string sha1 = 6;
  if (!this->_internal_sha1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sha1());
  }

  // string wcs_etag = 7;
  if (!this->_internal_wcs_etag().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_wcs_etag());
  }

  // int64 file_size = 4;
  if (this->_internal_file_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_file_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ParseFileSliceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ParseFileSliceResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ParseFileSliceResponse::GetClassData() const { return &_class_data_; }


void ParseFileSliceResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ParseFileSliceResponse*>(&to_msg);
  auto& from = static_cast<const ParseFileSliceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:v6.services.pub.ParseFileSliceResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.meta_nodes_.MergeFrom(from._impl_.meta_nodes_);
  _this->_impl_.raw_nodes_.MergeFrom(from._impl_.raw_nodes_);
  _this->_impl_.sizes_.MergeFrom(from._impl_.sizes_);
  if (!from._internal_content_identity().empty()) {
    _this->_internal_set_content_identity(from._internal_content_identity());
  }
  if (!from._internal_sha1().empty()) {
    _this->_internal_set_sha1(from._internal_sha1());
  }
  if (!from._internal_wcs_etag().empty()) {
    _this->_internal_set_wcs_etag(from._internal_wcs_etag());
  }
  if (from._internal_file_size() != 0) {
    _this->_internal_set_file_size(from._internal_file_size());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ParseFileSliceResponse::CopyFrom(const ParseFileSliceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v6.services.pub.ParseFileSliceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParseFileSliceResponse::IsInitialized() const {
  return true;
}

void ParseFileSliceResponse::InternalSwap(ParseFileSliceResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.meta_nodes_.InternalSwap(&other->_impl_.meta_nodes_);
  _impl_.raw_nodes_.InternalSwap(&other->_impl_.raw_nodes_);
  _impl_.sizes_.InternalSwap(&other->_impl_.sizes_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.content_identity_, lhs_arena,
      &other->_impl_.content_identity_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.sha1_, lhs_arena,
      &other->_impl_.sha1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.wcs_etag_, lhs_arena,
      &other->_impl_.wcs_etag_, rhs_arena
  );
  swap(_impl_.file_size_, other->_impl_.file_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ParseFileSliceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_public_5fuser_5ffile_2eproto_getter, &descriptor_table_public_5fuser_5ffile_2eproto_once,
      file_level_metadata_public_5fuser_5ffile_2eproto[12]);
}

// ===================================================================

class SliceSize::_Internal {
 public:
};

SliceSize::SliceSize(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:v6.services.pub.SliceSize)
}
SliceSize::SliceSize(const SliceSize& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SliceSize* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.start_index_){}
    , decltype(_impl_.end_index_){}
    , decltype(_impl_.size_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.start_index_, &from._impl_.start_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.size_) -
    reinterpret_cast<char*>(&_impl_.start_index_)) + sizeof(_impl_.size_));
  // @@protoc_insertion_point(copy_constructor:v6.services.pub.SliceSize)
}

inline void SliceSize::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.start_index_){int64_t{0}}
    , decltype(_impl_.end_index_){int64_t{0}}
    , decltype(_impl_.size_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SliceSize::~SliceSize() {
  // @@protoc_insertion_point(destructor:v6.services.pub.SliceSize)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SliceSize::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SliceSize::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SliceSize::Clear() {
// @@protoc_insertion_point(message_clear_start:v6.services.pub.SliceSize)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.start_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.size_) -
      reinterpret_cast<char*>(&_impl_.start_index_)) + sizeof(_impl_.size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SliceSize::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 start_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.start_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 end_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.end_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SliceSize::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v6.services.pub.SliceSize)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 start_index = 1;
  if (this->_internal_start_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_start_index(), target);
  }

  // int64 end_index = 2;
  if (this->_internal_end_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_end_index(), target);
  }

  // int64 size = 3;
  if (this->_internal_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v6.services.pub.SliceSize)
  return target;
}

size_t SliceSize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v6.services.pub.SliceSize)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 start_index = 1;
  if (this->_internal_start_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_start_index());
  }

  // int64 end_index = 2;
  if (this->_internal_end_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_end_index());
  }

  // int64 size = 3;
  if (this->_internal_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SliceSize::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SliceSize::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SliceSize::GetClassData() const { return &_class_data_; }


void SliceSize::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SliceSize*>(&to_msg);
  auto& from = static_cast<const SliceSize&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:v6.services.pub.SliceSize)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_start_index() != 0) {
    _this->_internal_set_start_index(from._internal_start_index());
  }
  if (from._internal_end_index() != 0) {
    _this->_internal_set_end_index(from._internal_end_index());
  }
  if (from._internal_size() != 0) {
    _this->_internal_set_size(from._internal_size());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SliceSize::CopyFrom(const SliceSize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v6.services.pub.SliceSize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SliceSize::IsInitialized() const {
  return true;
}

void SliceSize::InternalSwap(SliceSize* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SliceSize, _impl_.size_)
      + sizeof(SliceSize::_impl_.size_)
      - PROTOBUF_FIELD_OFFSET(SliceSize, _impl_.start_index_)>(
          reinterpret_cast<char*>(&_impl_.start_index_),
          reinterpret_cast<char*>(&other->_impl_.start_index_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SliceSize::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_public_5fuser_5ffile_2eproto_getter, &descriptor_table_public_5fuser_5ffile_2eproto_once,
      file_level_metadata_public_5fuser_5ffile_2eproto[13]);
}

// ===================================================================

class SliceDownloadAddressRequest::_Internal {
 public:
};

SliceDownloadAddressRequest::SliceDownloadAddressRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:v6.services.pub.SliceDownloadAddressRequest)
}
SliceDownloadAddressRequest::SliceDownloadAddressRequest(const SliceDownloadAddressRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SliceDownloadAddressRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.identity_){from._impl_.identity_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:v6.services.pub.SliceDownloadAddressRequest)
}

inline void SliceDownloadAddressRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.identity_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SliceDownloadAddressRequest::~SliceDownloadAddressRequest() {
  // @@protoc_insertion_point(destructor:v6.services.pub.SliceDownloadAddressRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SliceDownloadAddressRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.identity_.~RepeatedPtrField();
}

void SliceDownloadAddressRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SliceDownloadAddressRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:v6.services.pub.SliceDownloadAddressRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.identity_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SliceDownloadAddressRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string identity = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_identity();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.SliceDownloadAddressRequest.identity"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SliceDownloadAddressRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v6.services.pub.SliceDownloadAddressRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string identity = 1;
  for (int i = 0, n = this->_internal_identity_size(); i < n; i++) {
    const auto& s = this->_internal_identity(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.SliceDownloadAddressRequest.identity");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v6.services.pub.SliceDownloadAddressRequest)
  return target;
}

size_t SliceDownloadAddressRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v6.services.pub.SliceDownloadAddressRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string identity = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.identity_.size());
  for (int i = 0, n = _impl_.identity_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.identity_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SliceDownloadAddressRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SliceDownloadAddressRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SliceDownloadAddressRequest::GetClassData() const { return &_class_data_; }


void SliceDownloadAddressRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SliceDownloadAddressRequest*>(&to_msg);
  auto& from = static_cast<const SliceDownloadAddressRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:v6.services.pub.SliceDownloadAddressRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.identity_.MergeFrom(from._impl_.identity_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SliceDownloadAddressRequest::CopyFrom(const SliceDownloadAddressRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v6.services.pub.SliceDownloadAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SliceDownloadAddressRequest::IsInitialized() const {
  return true;
}

void SliceDownloadAddressRequest::InternalSwap(SliceDownloadAddressRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.identity_.InternalSwap(&other->_impl_.identity_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SliceDownloadAddressRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_public_5fuser_5ffile_2eproto_getter, &descriptor_table_public_5fuser_5ffile_2eproto_once,
      file_level_metadata_public_5fuser_5ffile_2eproto[14]);
}

// ===================================================================

class SliceDownloadAddressResponse::_Internal {
 public:
};

SliceDownloadAddressResponse::SliceDownloadAddressResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:v6.services.pub.SliceDownloadAddressResponse)
}
SliceDownloadAddressResponse::SliceDownloadAddressResponse(const SliceDownloadAddressResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SliceDownloadAddressResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.addresses_){from._impl_.addresses_}
    , decltype(_impl_.request_address_){}
    , decltype(_impl_.expire_at_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.request_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.request_address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_request_address().empty()) {
    _this->_impl_.request_address_.Set(from._internal_request_address(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.expire_at_ = from._impl_.expire_at_;
  // @@protoc_insertion_point(copy_constructor:v6.services.pub.SliceDownloadAddressResponse)
}

inline void SliceDownloadAddressResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.addresses_){arena}
    , decltype(_impl_.request_address_){}
    , decltype(_impl_.expire_at_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.request_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.request_address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SliceDownloadAddressResponse::~SliceDownloadAddressResponse() {
  // @@protoc_insertion_point(destructor:v6.services.pub.SliceDownloadAddressResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SliceDownloadAddressResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.addresses_.~RepeatedPtrField();
  _impl_.request_address_.Destroy();
}

void SliceDownloadAddressResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SliceDownloadAddressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:v6.services.pub.SliceDownloadAddressResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.addresses_.Clear();
  _impl_.request_address_.ClearToEmpty();
  _impl_.expire_at_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SliceDownloadAddressResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .v6.services.pub.SliceDownloadInfo addresses = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_addresses(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int64 expire_at = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.expire_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string request_address = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_request_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.SliceDownloadAddressResponse.request_address"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SliceDownloadAddressResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v6.services.pub.SliceDownloadAddressResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .v6.services.pub.SliceDownloadInfo addresses = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_addresses_size()); i < n; i++) {
    const auto& repfield = this->_internal_addresses(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int64 expire_at = 2;
  if (this->_internal_expire_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_expire_at(), target);
  }

  // string request_address = 3;
  if (!this->_internal_request_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_request_address().data(), static_cast<int>(this->_internal_request_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.SliceDownloadAddressResponse.request_address");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_request_address(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v6.services.pub.SliceDownloadAddressResponse)
  return target;
}

size_t SliceDownloadAddressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v6.services.pub.SliceDownloadAddressResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .v6.services.pub.SliceDownloadInfo addresses = 1;
  total_size += 1UL * this->_internal_addresses_size();
  for (const auto& msg : this->_impl_.addresses_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string request_address = 3;
  if (!this->_internal_request_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_request_address());
  }

  // int64 expire_at = 2;
  if (this->_internal_expire_at() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_expire_at());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SliceDownloadAddressResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SliceDownloadAddressResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SliceDownloadAddressResponse::GetClassData() const { return &_class_data_; }


void SliceDownloadAddressResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SliceDownloadAddressResponse*>(&to_msg);
  auto& from = static_cast<const SliceDownloadAddressResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:v6.services.pub.SliceDownloadAddressResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.addresses_.MergeFrom(from._impl_.addresses_);
  if (!from._internal_request_address().empty()) {
    _this->_internal_set_request_address(from._internal_request_address());
  }
  if (from._internal_expire_at() != 0) {
    _this->_internal_set_expire_at(from._internal_expire_at());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SliceDownloadAddressResponse::CopyFrom(const SliceDownloadAddressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v6.services.pub.SliceDownloadAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SliceDownloadAddressResponse::IsInitialized() const {
  return true;
}

void SliceDownloadAddressResponse::InternalSwap(SliceDownloadAddressResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.addresses_.InternalSwap(&other->_impl_.addresses_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.request_address_, lhs_arena,
      &other->_impl_.request_address_, rhs_arena
  );
  swap(_impl_.expire_at_, other->_impl_.expire_at_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SliceDownloadAddressResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_public_5fuser_5ffile_2eproto_getter, &descriptor_table_public_5fuser_5ffile_2eproto_once,
      file_level_metadata_public_5fuser_5ffile_2eproto[15]);
}

// ===================================================================

class SliceDownloadInfo::_Internal {
 public:
};

SliceDownloadInfo::SliceDownloadInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:v6.services.pub.SliceDownloadInfo)
}
SliceDownloadInfo::SliceDownloadInfo(const SliceDownloadInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SliceDownloadInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.identity_){}
    , decltype(_impl_.download_address_){}
    , decltype(_impl_.download_token_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.identity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.identity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_identity().empty()) {
    _this->_impl_.identity_.Set(from._internal_identity(), 
      _this->GetArenaForAllocation());
  }
  _impl_.download_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.download_address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_download_address().empty()) {
    _this->_impl_.download_address_.Set(from._internal_download_address(), 
      _this->GetArenaForAllocation());
  }
  _impl_.download_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.download_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_download_token().empty()) {
    _this->_impl_.download_token_.Set(from._internal_download_token(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:v6.services.pub.SliceDownloadInfo)
}

inline void SliceDownloadInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.identity_){}
    , decltype(_impl_.download_address_){}
    , decltype(_impl_.download_token_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.identity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.identity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.download_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.download_address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.download_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.download_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SliceDownloadInfo::~SliceDownloadInfo() {
  // @@protoc_insertion_point(destructor:v6.services.pub.SliceDownloadInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SliceDownloadInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.identity_.Destroy();
  _impl_.download_address_.Destroy();
  _impl_.download_token_.Destroy();
}

void SliceDownloadInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SliceDownloadInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:v6.services.pub.SliceDownloadInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.identity_.ClearToEmpty();
  _impl_.download_address_.ClearToEmpty();
  _impl_.download_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SliceDownloadInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string identity = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_identity();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.SliceDownloadInfo.identity"));
        } else
          goto handle_unusual;
        continue;
      // string download_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_download_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.SliceDownloadInfo.download_address"));
        } else
          goto handle_unusual;
        continue;
      // string download_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_download_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.SliceDownloadInfo.download_token"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SliceDownloadInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v6.services.pub.SliceDownloadInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string identity = 1;
  if (!this->_internal_identity().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identity().data(), static_cast<int>(this->_internal_identity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.SliceDownloadInfo.identity");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_identity(), target);
  }

  // string download_address = 2;
  if (!this->_internal_download_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_download_address().data(), static_cast<int>(this->_internal_download_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.SliceDownloadInfo.download_address");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_download_address(), target);
  }

  // string download_token = 3;
  if (!this->_internal_download_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_download_token().data(), static_cast<int>(this->_internal_download_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.SliceDownloadInfo.download_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_download_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v6.services.pub.SliceDownloadInfo)
  return target;
}

size_t SliceDownloadInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v6.services.pub.SliceDownloadInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string identity = 1;
  if (!this->_internal_identity().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identity());
  }

  // string download_address = 2;
  if (!this->_internal_download_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_download_address());
  }

  // string download_token = 3;
  if (!this->_internal_download_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_download_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SliceDownloadInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SliceDownloadInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SliceDownloadInfo::GetClassData() const { return &_class_data_; }


void SliceDownloadInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SliceDownloadInfo*>(&to_msg);
  auto& from = static_cast<const SliceDownloadInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:v6.services.pub.SliceDownloadInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_identity().empty()) {
    _this->_internal_set_identity(from._internal_identity());
  }
  if (!from._internal_download_address().empty()) {
    _this->_internal_set_download_address(from._internal_download_address());
  }
  if (!from._internal_download_token().empty()) {
    _this->_internal_set_download_token(from._internal_download_token());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SliceDownloadInfo::CopyFrom(const SliceDownloadInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v6.services.pub.SliceDownloadInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SliceDownloadInfo::IsInitialized() const {
  return true;
}

void SliceDownloadInfo::InternalSwap(SliceDownloadInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.identity_, lhs_arena,
      &other->_impl_.identity_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.download_address_, lhs_arena,
      &other->_impl_.download_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.download_token_, lhs_arena,
      &other->_impl_.download_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SliceDownloadInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_public_5fuser_5ffile_2eproto_getter, &descriptor_table_public_5fuser_5ffile_2eproto_once,
      file_level_metadata_public_5fuser_5ffile_2eproto[16]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace pub
}  // namespace services
}  // namespace v6
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::v6::services::pub::File*
Arena::CreateMaybeMessage< ::v6::services::pub::File >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::File >(arena);
}
template<> PROTOBUF_NOINLINE ::v6::services::pub::FileListRequest*
Arena::CreateMaybeMessage< ::v6::services::pub::FileListRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::FileListRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::v6::services::pub::SearchRequest*
Arena::CreateMaybeMessage< ::v6::services::pub::SearchRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::SearchRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::v6::services::pub::FileListResponse*
Arena::CreateMaybeMessage< ::v6::services::pub::FileListResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::FileListResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::v6::services::pub::BatchOperationRequest*
Arena::CreateMaybeMessage< ::v6::services::pub::BatchOperationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::BatchOperationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::v6::services::pub::BatchOperationResponse*
Arena::CreateMaybeMessage< ::v6::services::pub::BatchOperationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::BatchOperationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::v6::services::pub::ManageRTCRequest*
Arena::CreateMaybeMessage< ::v6::services::pub::ManageRTCRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::ManageRTCRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::v6::services::pub::ManageRTCResponse*
Arena::CreateMaybeMessage< ::v6::services::pub::ManageRTCResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::ManageRTCResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::v6::services::pub::SendIceCandidateRequest*
Arena::CreateMaybeMessage< ::v6::services::pub::SendIceCandidateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::SendIceCandidateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::v6::services::pub::SendIceCandidateResponse*
Arena::CreateMaybeMessage< ::v6::services::pub::SendIceCandidateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::SendIceCandidateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::v6::services::pub::GetIceCandidateRequest*
Arena::CreateMaybeMessage< ::v6::services::pub::GetIceCandidateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::GetIceCandidateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::v6::services::pub::GetIceCandidateResponse*
Arena::CreateMaybeMessage< ::v6::services::pub::GetIceCandidateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::GetIceCandidateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::v6::services::pub::ParseFileSliceResponse*
Arena::CreateMaybeMessage< ::v6::services::pub::ParseFileSliceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::ParseFileSliceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::v6::services::pub::SliceSize*
Arena::CreateMaybeMessage< ::v6::services::pub::SliceSize >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::SliceSize >(arena);
}
template<> PROTOBUF_NOINLINE ::v6::services::pub::SliceDownloadAddressRequest*
Arena::CreateMaybeMessage< ::v6::services::pub::SliceDownloadAddressRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::SliceDownloadAddressRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::v6::services::pub::SliceDownloadAddressResponse*
Arena::CreateMaybeMessage< ::v6::services::pub::SliceDownloadAddressResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::SliceDownloadAddressResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::v6::services::pub::SliceDownloadInfo*
Arena::CreateMaybeMessage< ::v6::services::pub::SliceDownloadInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::SliceDownloadInfo >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
