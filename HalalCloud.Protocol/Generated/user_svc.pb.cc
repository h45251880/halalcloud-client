// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user_svc.proto

#include "user_svc.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace v6 {
namespace services {
namespace pub {
PROTOBUF_CONSTEXPR User::User(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.identity_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.password_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.addon_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.hash_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.icon_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_.status_)*/0
  , /*decltype(_impl_.update_ts_)*/int64_t{0}
  , /*decltype(_impl_.create_ts_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserDefaultTypeInternal() {}
  union {
    User _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserDefaultTypeInternal _User_default_instance_;
PROTOBUF_CONSTEXPR LoginRequest::LoginRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.identity_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.password_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.addon_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.input_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.callback_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.return_url_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.captcha_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.state_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.country_code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.return_type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LoginRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoginRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoginRequestDefaultTypeInternal() {}
  union {
    LoginRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoginRequestDefaultTypeInternal _LoginRequest_default_instance_;
PROTOBUF_CONSTEXPR LoginResponse::LoginResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.state_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.token_)*/nullptr
  , /*decltype(_impl_.user_)*/nullptr
  , /*decltype(_impl_.last_login_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LoginResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoginResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoginResponseDefaultTypeInternal() {}
  union {
    LoginResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoginResponseDefaultTypeInternal _LoginResponse_default_instance_;
PROTOBUF_CONSTEXPR LastLoginResponse::LastLoginResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.identity_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.last_login_ip_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.last_login_device_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.last_login_ts_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LastLoginResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LastLoginResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LastLoginResponseDefaultTypeInternal() {}
  union {
    LastLoginResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LastLoginResponseDefaultTypeInternal _LastLoginResponse_default_instance_;
PROTOBUF_CONSTEXPR Token::Token(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.identity_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.user_identity_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.device_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.access_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.refresh_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.update_ts_)*/int64_t{0}
  , /*decltype(_impl_.access_token_expire_ts_)*/int64_t{0}
  , /*decltype(_impl_.refresh_token_expire_ts_)*/int64_t{0}
  , /*decltype(_impl_.version_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TokenDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TokenDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TokenDefaultTypeInternal() {}
  union {
    Token _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TokenDefaultTypeInternal _Token_default_instance_;
PROTOBUF_CONSTEXPR RegisterRequest::RegisterRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.password_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.captcha_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.email_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.sms_captcha_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RegisterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterRequestDefaultTypeInternal() {}
  union {
    RegisterRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterRequestDefaultTypeInternal _RegisterRequest_default_instance_;
PROTOBUF_CONSTEXPR SmsVeifyCodeSendRequest::SmsVeifyCodeSendRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.captcha_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.addon_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SmsVeifyCodeSendRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SmsVeifyCodeSendRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SmsVeifyCodeSendRequestDefaultTypeInternal() {}
  union {
    SmsVeifyCodeSendRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SmsVeifyCodeSendRequestDefaultTypeInternal _SmsVeifyCodeSendRequest_default_instance_;
PROTOBUF_CONSTEXPR SmsVeifyCodeSendRequestNotUser::SmsVeifyCodeSendRequestNotUser(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.captcha_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.addon_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.country_code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.phone_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SmsVeifyCodeSendRequestNotUserDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SmsVeifyCodeSendRequestNotUserDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SmsVeifyCodeSendRequestNotUserDefaultTypeInternal() {}
  union {
    SmsVeifyCodeSendRequestNotUser _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SmsVeifyCodeSendRequestNotUserDefaultTypeInternal _SmsVeifyCodeSendRequestNotUser_default_instance_;
PROTOBUF_CONSTEXPR SmsVeifyCodeSendResponse::SmsVeifyCodeSendResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.captcha_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.addon_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.expire_ts_)*/int64_t{0}
  , /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SmsVeifyCodeSendResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SmsVeifyCodeSendResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SmsVeifyCodeSendResponseDefaultTypeInternal() {}
  union {
    SmsVeifyCodeSendResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SmsVeifyCodeSendResponseDefaultTypeInternal _SmsVeifyCodeSendResponse_default_instance_;
PROTOBUF_CONSTEXPR OauthTokenResponse::OauthTokenResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.url_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.addon_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.input_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.callback_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.return_url_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.captcha_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.state_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.return_type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OauthTokenResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OauthTokenResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OauthTokenResponseDefaultTypeInternal() {}
  union {
    OauthTokenResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OauthTokenResponseDefaultTypeInternal _OauthTokenResponse_default_instance_;
PROTOBUF_CONSTEXPR OauthTokenCheckResponse::OauthTokenCheckResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.login_)*/nullptr
  , /*decltype(_impl_.oauth_)*/nullptr
  , /*decltype(_impl_.status_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OauthTokenCheckResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OauthTokenCheckResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OauthTokenCheckResponseDefaultTypeInternal() {}
  union {
    OauthTokenCheckResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OauthTokenCheckResponseDefaultTypeInternal _OauthTokenCheckResponse_default_instance_;
}  // namespace pub
}  // namespace services
}  // namespace v6
static ::_pb::Metadata file_level_metadata_user_5fsvc_2eproto[11];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_user_5fsvc_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_user_5fsvc_2eproto = nullptr;

const uint32_t TableStruct_user_5fsvc_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::User, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::User, _impl_.identity_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::User, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::User, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::User, _impl_.update_ts_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::User, _impl_.password_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::User, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::User, _impl_.addon_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::User, _impl_.create_ts_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::User, _impl_.hash_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::User, _impl_.icon_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::LoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::LoginRequest, _impl_.identity_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::LoginRequest, _impl_.password_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::LoginRequest, _impl_.addon_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::LoginRequest, _impl_.input_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::LoginRequest, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::LoginRequest, _impl_.callback_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::LoginRequest, _impl_.return_url_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::LoginRequest, _impl_.return_type_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::LoginRequest, _impl_.captcha_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::LoginRequest, _impl_.state_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::LoginRequest, _impl_.country_code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::LoginResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::LoginResponse, _impl_.token_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::LoginResponse, _impl_.user_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::LoginResponse, _impl_.last_login_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::LoginResponse, _impl_.state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::LastLoginResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::LastLoginResponse, _impl_.identity_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::LastLoginResponse, _impl_.last_login_ts_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::LastLoginResponse, _impl_.last_login_ip_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::LastLoginResponse, _impl_.last_login_device_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::Token, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::Token, _impl_.identity_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::Token, _impl_.user_identity_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::Token, _impl_.device_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::Token, _impl_.version_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::Token, _impl_.access_token_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::Token, _impl_.refresh_token_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::Token, _impl_.update_ts_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::Token, _impl_.access_token_expire_ts_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::Token, _impl_.refresh_token_expire_ts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::RegisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::RegisterRequest, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::RegisterRequest, _impl_.password_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::RegisterRequest, _impl_.email_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::RegisterRequest, _impl_.sms_captcha_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::RegisterRequest, _impl_.captcha_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SmsVeifyCodeSendRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SmsVeifyCodeSendRequest, _impl_.captcha_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SmsVeifyCodeSendRequest, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SmsVeifyCodeSendRequest, _impl_.addon_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SmsVeifyCodeSendRequestNotUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SmsVeifyCodeSendRequestNotUser, _impl_.captcha_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SmsVeifyCodeSendRequestNotUser, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SmsVeifyCodeSendRequestNotUser, _impl_.addon_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SmsVeifyCodeSendRequestNotUser, _impl_.country_code_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SmsVeifyCodeSendRequestNotUser, _impl_.phone_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SmsVeifyCodeSendResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SmsVeifyCodeSendResponse, _impl_.captcha_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SmsVeifyCodeSendResponse, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SmsVeifyCodeSendResponse, _impl_.addon_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::SmsVeifyCodeSendResponse, _impl_.expire_ts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::OauthTokenResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::OauthTokenResponse, _impl_.url_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::OauthTokenResponse, _impl_.addon_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::OauthTokenResponse, _impl_.input_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::OauthTokenResponse, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::OauthTokenResponse, _impl_.callback_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::OauthTokenResponse, _impl_.return_url_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::OauthTokenResponse, _impl_.return_type_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::OauthTokenResponse, _impl_.captcha_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::OauthTokenResponse, _impl_.state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::OauthTokenCheckResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::OauthTokenCheckResponse, _impl_.login_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::OauthTokenCheckResponse, _impl_.oauth_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::OauthTokenCheckResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::v6::services::pub::OauthTokenCheckResponse, _impl_.message_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::v6::services::pub::User)},
  { 16, -1, -1, sizeof(::v6::services::pub::LoginRequest)},
  { 33, -1, -1, sizeof(::v6::services::pub::LoginResponse)},
  { 43, -1, -1, sizeof(::v6::services::pub::LastLoginResponse)},
  { 53, -1, -1, sizeof(::v6::services::pub::Token)},
  { 68, -1, -1, sizeof(::v6::services::pub::RegisterRequest)},
  { 79, -1, -1, sizeof(::v6::services::pub::SmsVeifyCodeSendRequest)},
  { 88, -1, -1, sizeof(::v6::services::pub::SmsVeifyCodeSendRequestNotUser)},
  { 99, -1, -1, sizeof(::v6::services::pub::SmsVeifyCodeSendResponse)},
  { 109, -1, -1, sizeof(::v6::services::pub::OauthTokenResponse)},
  { 124, -1, -1, sizeof(::v6::services::pub::OauthTokenCheckResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::v6::services::pub::_User_default_instance_._instance,
  &::v6::services::pub::_LoginRequest_default_instance_._instance,
  &::v6::services::pub::_LoginResponse_default_instance_._instance,
  &::v6::services::pub::_LastLoginResponse_default_instance_._instance,
  &::v6::services::pub::_Token_default_instance_._instance,
  &::v6::services::pub::_RegisterRequest_default_instance_._instance,
  &::v6::services::pub::_SmsVeifyCodeSendRequest_default_instance_._instance,
  &::v6::services::pub::_SmsVeifyCodeSendRequestNotUser_default_instance_._instance,
  &::v6::services::pub::_SmsVeifyCodeSendResponse_default_instance_._instance,
  &::v6::services::pub::_OauthTokenResponse_default_instance_._instance,
  &::v6::services::pub::_OauthTokenCheckResponse_default_instance_._instance,
};

const char descriptor_table_protodef_user_5fsvc_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016user_svc.proto\022\017v6.services.pub\"\247\001\n\004Us"
  "er\022\020\n\010identity\030\001 \001(\t\022\014\n\004type\030\002 \001(\005\022\016\n\006st"
  "atus\030\003 \001(\005\022\021\n\tupdate_ts\030\005 \001(\003\022\020\n\010passwor"
  "d\030\006 \001(\t\022\014\n\004name\030\007 \001(\t\022\r\n\005addon\030\010 \001(\t\022\021\n\t"
  "create_ts\030\t \001(\003\022\014\n\004hash\030\n \001(\t\022\014\n\004icon\030\013 "
  "\001(\t\"\317\001\n\014LoginRequest\022\020\n\010identity\030\001 \001(\t\022\020"
  "\n\010password\030\002 \001(\t\022\r\n\005addon\030\003 \001(\t\022\r\n\005input"
  "\030\004 \001(\t\022\014\n\004type\030\005 \001(\t\022\020\n\010callback\030\006 \001(\t\022\022"
  "\n\nreturn_url\030\007 \001(\t\022\023\n\013return_type\030\010 \001(\005\022"
  "\017\n\007captcha\030\t \001(\t\022\r\n\005state\030\n \001(\t\022\024\n\014count"
  "ry_code\030\013 \001(\t\"\242\001\n\rLoginResponse\022%\n\005token"
  "\030\001 \001(\0132\026.v6.services.pub.Token\022#\n\004user\030\002"
  " \001(\0132\025.v6.services.pub.User\0226\n\nlast_logi"
  "n\030\003 \001(\0132\".v6.services.pub.LastLoginRespo"
  "nse\022\r\n\005state\030\004 \001(\t\"n\n\021LastLoginResponse\022"
  "\020\n\010identity\030\001 \001(\t\022\025\n\rlast_login_ts\030\002 \001(\003"
  "\022\025\n\rlast_login_ip\030\003 \001(\t\022\031\n\021last_login_de"
  "vice\030\004 \001(\t\"\322\001\n\005Token\022\020\n\010identity\030\001 \001(\t\022\025"
  "\n\ruser_identity\030\002 \001(\t\022\016\n\006device\030\003 \001(\t\022\017\n"
  "\007version\030\004 \001(\005\022\024\n\014access_token\030\005 \001(\t\022\025\n\r"
  "refresh_token\030\006 \001(\t\022\021\n\tupdate_ts\030\007 \001(\003\022\036"
  "\n\026access_token_expire_ts\030\010 \001(\003\022\037\n\027refres"
  "h_token_expire_ts\030\t \001(\003\"f\n\017RegisterReque"
  "st\022\014\n\004name\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\022\r\n\005em"
  "ail\030\005 \001(\t\022\023\n\013sms_captcha\030\006 \001(\t\022\017\n\007captch"
  "a\030\003 \001(\t\"G\n\027SmsVeifyCodeSendRequest\022\017\n\007ca"
  "ptcha\030\001 \001(\t\022\014\n\004type\030\002 \001(\005\022\r\n\005addon\030\003 \001(\t"
  "\"s\n\036SmsVeifyCodeSendRequestNotUser\022\017\n\007ca"
  "ptcha\030\001 \001(\t\022\014\n\004type\030\002 \001(\005\022\r\n\005addon\030\003 \001(\t"
  "\022\024\n\014country_code\030\004 \001(\t\022\r\n\005phone\030\005 \001(\t\"[\n"
  "\030SmsVeifyCodeSendResponse\022\017\n\007captcha\030\001 \001"
  "(\t\022\014\n\004type\030\002 \001(\005\022\r\n\005addon\030\003 \001(\t\022\021\n\texpir"
  "e_ts\030\004 \001(\003\"\250\001\n\022OauthTokenResponse\022\013\n\003url"
  "\030\001 \001(\t\022\r\n\005addon\030\002 \001(\t\022\r\n\005input\030\003 \001(\t\022\014\n\004"
  "type\030\004 \001(\t\022\020\n\010callback\030\005 \001(\t\022\022\n\nreturn_u"
  "rl\030\006 \001(\t\022\023\n\013return_type\030\007 \001(\005\022\017\n\007captcha"
  "\030\010 \001(\t\022\r\n\005state\030\t \001(\t\"\235\001\n\027OauthTokenChec"
  "kResponse\022-\n\005login\030\001 \001(\0132\036.v6.services.p"
  "ub.LoginResponse\0222\n\005oauth\030\002 \001(\0132#.v6.ser"
  "vices.pub.OauthTokenResponse\022\016\n\006status\030\003"
  " \001(\005\022\017\n\007message\030\004 \001(\t2\351\006\n\007PubUser\0225\n\003Get"
  "\022\025.v6.services.pub.User\032\025.v6.services.pu"
  "b.User\"\000\022H\n\005Login\022\035.v6.services.pub.Logi"
  "nRequest\032\036.v6.services.pub.LoginResponse"
  "\"\000\022;\n\007Refresh\022\026.v6.services.pub.Token\032\026."
  "v6.services.pub.Token\"\000\0229\n\006Logoff\022\026.v6.s"
  "ervices.pub.Token\032\025.v6.services.pub.User"
  "\"\000\022G\n\rResetPassword\022\035.v6.services.pub.Lo"
  "ginRequest\032\025.v6.services.pub.User\"\000\022E\n\010R"
  "egister\022 .v6.services.pub.RegisterReques"
  "t\032\025.v6.services.pub.User\"\000\0228\n\006Delete\022\025.v"
  "6.services.pub.User\032\025.v6.services.pub.Us"
  "er\"\000\022j\n\021SendSmsVerifyCode\022(.v6.services."
  "pub.SmsVeifyCodeSendRequest\032).v6.service"
  "s.pub.SmsVeifyCodeSendResponse\"\000\022x\n\030Send"
  "SmsVerifyCodeNotUser\022/.v6.services.pub.S"
  "msVeifyCodeSendRequestNotUser\032).v6.servi"
  "ces.pub.SmsVeifyCodeSendResponse\"\000\022\\\n\017Ve"
  "rifyAuthToken\022\035.v6.services.pub.LoginReq"
  "uest\032(.v6.services.pub.OauthTokenCheckRe"
  "sponse\"\000\022W\n\017CreateAuthToken\022\035.v6.service"
  "s.pub.LoginRequest\032#.v6.services.pub.Oau"
  "thTokenResponse\"\000B3Z1github.com/city404/"
  "v6-public-rpc-proto/go/v6/userb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_user_5fsvc_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_user_5fsvc_2eproto = {
    false, false, 2558, descriptor_table_protodef_user_5fsvc_2eproto,
    "user_svc.proto",
    &descriptor_table_user_5fsvc_2eproto_once, nullptr, 0, 11,
    schemas, file_default_instances, TableStruct_user_5fsvc_2eproto::offsets,
    file_level_metadata_user_5fsvc_2eproto, file_level_enum_descriptors_user_5fsvc_2eproto,
    file_level_service_descriptors_user_5fsvc_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_user_5fsvc_2eproto_getter() {
  return &descriptor_table_user_5fsvc_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_user_5fsvc_2eproto(&descriptor_table_user_5fsvc_2eproto);
namespace v6 {
namespace services {
namespace pub {

// ===================================================================

class User::_Internal {
 public:
};

User::User(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:v6.services.pub.User)
}
User::User(const User& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  User* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.identity_){}
    , decltype(_impl_.password_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.addon_){}
    , decltype(_impl_.hash_){}
    , decltype(_impl_.icon_){}
    , decltype(_impl_.type_){}
    , decltype(_impl_.status_){}
    , decltype(_impl_.update_ts_){}
    , decltype(_impl_.create_ts_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.identity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.identity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_identity().empty()) {
    _this->_impl_.identity_.Set(from._internal_identity(), 
      _this->GetArenaForAllocation());
  }
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_password().empty()) {
    _this->_impl_.password_.Set(from._internal_password(), 
      _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.addon_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.addon_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_addon().empty()) {
    _this->_impl_.addon_.Set(from._internal_addon(), 
      _this->GetArenaForAllocation());
  }
  _impl_.hash_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.hash_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_hash().empty()) {
    _this->_impl_.hash_.Set(from._internal_hash(), 
      _this->GetArenaForAllocation());
  }
  _impl_.icon_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.icon_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_icon().empty()) {
    _this->_impl_.icon_.Set(from._internal_icon(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.type_, &from._impl_.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.create_ts_) -
    reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.create_ts_));
  // @@protoc_insertion_point(copy_constructor:v6.services.pub.User)
}

inline void User::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.identity_){}
    , decltype(_impl_.password_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.addon_){}
    , decltype(_impl_.hash_){}
    , decltype(_impl_.icon_){}
    , decltype(_impl_.type_){0}
    , decltype(_impl_.status_){0}
    , decltype(_impl_.update_ts_){int64_t{0}}
    , decltype(_impl_.create_ts_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.identity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.identity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.addon_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.addon_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.hash_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.hash_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.icon_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.icon_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

User::~User() {
  // @@protoc_insertion_point(destructor:v6.services.pub.User)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void User::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.identity_.Destroy();
  _impl_.password_.Destroy();
  _impl_.name_.Destroy();
  _impl_.addon_.Destroy();
  _impl_.hash_.Destroy();
  _impl_.icon_.Destroy();
}

void User::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void User::Clear() {
// @@protoc_insertion_point(message_clear_start:v6.services.pub.User)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.identity_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.addon_.ClearToEmpty();
  _impl_.hash_.ClearToEmpty();
  _impl_.icon_.ClearToEmpty();
  ::memset(&_impl_.type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.create_ts_) -
      reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.create_ts_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* User::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string identity = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_identity();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.User.identity"));
        } else
          goto handle_unusual;
        continue;
      // int32 type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 update_ts = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.update_ts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string password = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_password();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.User.password"));
        } else
          goto handle_unusual;
        continue;
      // string name = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.User.name"));
        } else
          goto handle_unusual;
        continue;
      // string addon = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_addon();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.User.addon"));
        } else
          goto handle_unusual;
        continue;
      // int64 create_ts = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _impl_.create_ts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string hash = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_hash();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.User.hash"));
        } else
          goto handle_unusual;
        continue;
      // string icon = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_icon();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.User.icon"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* User::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v6.services.pub.User)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string identity = 1;
  if (!this->_internal_identity().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identity().data(), static_cast<int>(this->_internal_identity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.User.identity");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_identity(), target);
  }

  // int32 type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_type(), target);
  }

  // int32 status = 3;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_status(), target);
  }

  // int64 update_ts = 5;
  if (this->_internal_update_ts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_update_ts(), target);
  }

  // string password = 6;
  if (!this->_internal_password().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.User.password");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_password(), target);
  }

  // string name = 7;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.User.name");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_name(), target);
  }

  // string addon = 8;
  if (!this->_internal_addon().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_addon().data(), static_cast<int>(this->_internal_addon().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.User.addon");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_addon(), target);
  }

  // int64 create_ts = 9;
  if (this->_internal_create_ts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(9, this->_internal_create_ts(), target);
  }

  // string hash = 10;
  if (!this->_internal_hash().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_hash().data(), static_cast<int>(this->_internal_hash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.User.hash");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_hash(), target);
  }

  // string icon = 11;
  if (!this->_internal_icon().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_icon().data(), static_cast<int>(this->_internal_icon().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.User.icon");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_icon(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v6.services.pub.User)
  return target;
}

size_t User::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v6.services.pub.User)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string identity = 1;
  if (!this->_internal_identity().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identity());
  }

  // string password = 6;
  if (!this->_internal_password().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // string name = 7;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string addon = 8;
  if (!this->_internal_addon().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_addon());
  }

  // string hash = 10;
  if (!this->_internal_hash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hash());
  }

  // string icon = 11;
  if (!this->_internal_icon().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_icon());
  }

  // int32 type = 2;
  if (this->_internal_type() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_type());
  }

  // int32 status = 3;
  if (this->_internal_status() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_status());
  }

  // int64 update_ts = 5;
  if (this->_internal_update_ts() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_update_ts());
  }

  // int64 create_ts = 9;
  if (this->_internal_create_ts() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_create_ts());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData User::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    User::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*User::GetClassData() const { return &_class_data_; }


void User::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<User*>(&to_msg);
  auto& from = static_cast<const User&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:v6.services.pub.User)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_identity().empty()) {
    _this->_internal_set_identity(from._internal_identity());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_addon().empty()) {
    _this->_internal_set_addon(from._internal_addon());
  }
  if (!from._internal_hash().empty()) {
    _this->_internal_set_hash(from._internal_hash());
  }
  if (!from._internal_icon().empty()) {
    _this->_internal_set_icon(from._internal_icon());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  if (from._internal_update_ts() != 0) {
    _this->_internal_set_update_ts(from._internal_update_ts());
  }
  if (from._internal_create_ts() != 0) {
    _this->_internal_set_create_ts(from._internal_create_ts());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void User::CopyFrom(const User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v6.services.pub.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool User::IsInitialized() const {
  return true;
}

void User::InternalSwap(User* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.identity_, lhs_arena,
      &other->_impl_.identity_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.password_, lhs_arena,
      &other->_impl_.password_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.addon_, lhs_arena,
      &other->_impl_.addon_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.hash_, lhs_arena,
      &other->_impl_.hash_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.icon_, lhs_arena,
      &other->_impl_.icon_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(User, _impl_.create_ts_)
      + sizeof(User::_impl_.create_ts_)
      - PROTOBUF_FIELD_OFFSET(User, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata User::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_5fsvc_2eproto_getter, &descriptor_table_user_5fsvc_2eproto_once,
      file_level_metadata_user_5fsvc_2eproto[0]);
}

// ===================================================================

class LoginRequest::_Internal {
 public:
};

LoginRequest::LoginRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:v6.services.pub.LoginRequest)
}
LoginRequest::LoginRequest(const LoginRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LoginRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.identity_){}
    , decltype(_impl_.password_){}
    , decltype(_impl_.addon_){}
    , decltype(_impl_.input_){}
    , decltype(_impl_.type_){}
    , decltype(_impl_.callback_){}
    , decltype(_impl_.return_url_){}
    , decltype(_impl_.captcha_){}
    , decltype(_impl_.state_){}
    , decltype(_impl_.country_code_){}
    , decltype(_impl_.return_type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.identity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.identity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_identity().empty()) {
    _this->_impl_.identity_.Set(from._internal_identity(), 
      _this->GetArenaForAllocation());
  }
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_password().empty()) {
    _this->_impl_.password_.Set(from._internal_password(), 
      _this->GetArenaForAllocation());
  }
  _impl_.addon_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.addon_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_addon().empty()) {
    _this->_impl_.addon_.Set(from._internal_addon(), 
      _this->GetArenaForAllocation());
  }
  _impl_.input_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.input_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_input().empty()) {
    _this->_impl_.input_.Set(from._internal_input(), 
      _this->GetArenaForAllocation());
  }
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type().empty()) {
    _this->_impl_.type_.Set(from._internal_type(), 
      _this->GetArenaForAllocation());
  }
  _impl_.callback_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.callback_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_callback().empty()) {
    _this->_impl_.callback_.Set(from._internal_callback(), 
      _this->GetArenaForAllocation());
  }
  _impl_.return_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.return_url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_return_url().empty()) {
    _this->_impl_.return_url_.Set(from._internal_return_url(), 
      _this->GetArenaForAllocation());
  }
  _impl_.captcha_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.captcha_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_captcha().empty()) {
    _this->_impl_.captcha_.Set(from._internal_captcha(), 
      _this->GetArenaForAllocation());
  }
  _impl_.state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.state_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_state().empty()) {
    _this->_impl_.state_.Set(from._internal_state(), 
      _this->GetArenaForAllocation());
  }
  _impl_.country_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.country_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_country_code().empty()) {
    _this->_impl_.country_code_.Set(from._internal_country_code(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.return_type_ = from._impl_.return_type_;
  // @@protoc_insertion_point(copy_constructor:v6.services.pub.LoginRequest)
}

inline void LoginRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.identity_){}
    , decltype(_impl_.password_){}
    , decltype(_impl_.addon_){}
    , decltype(_impl_.input_){}
    , decltype(_impl_.type_){}
    , decltype(_impl_.callback_){}
    , decltype(_impl_.return_url_){}
    , decltype(_impl_.captcha_){}
    , decltype(_impl_.state_){}
    , decltype(_impl_.country_code_){}
    , decltype(_impl_.return_type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.identity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.identity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.addon_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.addon_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.input_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.input_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.callback_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.callback_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.return_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.return_url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.captcha_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.captcha_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.state_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.country_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.country_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LoginRequest::~LoginRequest() {
  // @@protoc_insertion_point(destructor:v6.services.pub.LoginRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LoginRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.identity_.Destroy();
  _impl_.password_.Destroy();
  _impl_.addon_.Destroy();
  _impl_.input_.Destroy();
  _impl_.type_.Destroy();
  _impl_.callback_.Destroy();
  _impl_.return_url_.Destroy();
  _impl_.captcha_.Destroy();
  _impl_.state_.Destroy();
  _impl_.country_code_.Destroy();
}

void LoginRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:v6.services.pub.LoginRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.identity_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _impl_.addon_.ClearToEmpty();
  _impl_.input_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  _impl_.callback_.ClearToEmpty();
  _impl_.return_url_.ClearToEmpty();
  _impl_.captcha_.ClearToEmpty();
  _impl_.state_.ClearToEmpty();
  _impl_.country_code_.ClearToEmpty();
  _impl_.return_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoginRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string identity = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_identity();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.LoginRequest.identity"));
        } else
          goto handle_unusual;
        continue;
      // string password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_password();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.LoginRequest.password"));
        } else
          goto handle_unusual;
        continue;
      // string addon = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_addon();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.LoginRequest.addon"));
        } else
          goto handle_unusual;
        continue;
      // string input = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_input();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.LoginRequest.input"));
        } else
          goto handle_unusual;
        continue;
      // string type = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.LoginRequest.type"));
        } else
          goto handle_unusual;
        continue;
      // string callback = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_callback();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.LoginRequest.callback"));
        } else
          goto handle_unusual;
        continue;
      // string return_url = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_return_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.LoginRequest.return_url"));
        } else
          goto handle_unusual;
        continue;
      // int32 return_type = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.return_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string captcha = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_captcha();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.LoginRequest.captcha"));
        } else
          goto handle_unusual;
        continue;
      // string state = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_state();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.LoginRequest.state"));
        } else
          goto handle_unusual;
        continue;
      // string country_code = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_country_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.LoginRequest.country_code"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LoginRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v6.services.pub.LoginRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string identity = 1;
  if (!this->_internal_identity().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identity().data(), static_cast<int>(this->_internal_identity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.LoginRequest.identity");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_identity(), target);
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.LoginRequest.password");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_password(), target);
  }

  // string addon = 3;
  if (!this->_internal_addon().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_addon().data(), static_cast<int>(this->_internal_addon().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.LoginRequest.addon");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_addon(), target);
  }

  // string input = 4;
  if (!this->_internal_input().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_input().data(), static_cast<int>(this->_internal_input().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.LoginRequest.input");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_input(), target);
  }

  // string type = 5;
  if (!this->_internal_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.LoginRequest.type");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_type(), target);
  }

  // string callback = 6;
  if (!this->_internal_callback().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_callback().data(), static_cast<int>(this->_internal_callback().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.LoginRequest.callback");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_callback(), target);
  }

  // string return_url = 7;
  if (!this->_internal_return_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_return_url().data(), static_cast<int>(this->_internal_return_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.LoginRequest.return_url");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_return_url(), target);
  }

  // int32 return_type = 8;
  if (this->_internal_return_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(8, this->_internal_return_type(), target);
  }

  // string captcha = 9;
  if (!this->_internal_captcha().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_captcha().data(), static_cast<int>(this->_internal_captcha().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.LoginRequest.captcha");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_captcha(), target);
  }

  // string state = 10;
  if (!this->_internal_state().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_state().data(), static_cast<int>(this->_internal_state().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.LoginRequest.state");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_state(), target);
  }

  // string country_code = 11;
  if (!this->_internal_country_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_country_code().data(), static_cast<int>(this->_internal_country_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.LoginRequest.country_code");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_country_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v6.services.pub.LoginRequest)
  return target;
}

size_t LoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v6.services.pub.LoginRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string identity = 1;
  if (!this->_internal_identity().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identity());
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // string addon = 3;
  if (!this->_internal_addon().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_addon());
  }

  // string input = 4;
  if (!this->_internal_input().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_input());
  }

  // string type = 5;
  if (!this->_internal_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string callback = 6;
  if (!this->_internal_callback().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_callback());
  }

  // string return_url = 7;
  if (!this->_internal_return_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_return_url());
  }

  // string captcha = 9;
  if (!this->_internal_captcha().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_captcha());
  }

  // string state = 10;
  if (!this->_internal_state().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_state());
  }

  // string country_code = 11;
  if (!this->_internal_country_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_country_code());
  }

  // int32 return_type = 8;
  if (this->_internal_return_type() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_return_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoginRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LoginRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoginRequest::GetClassData() const { return &_class_data_; }


void LoginRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LoginRequest*>(&to_msg);
  auto& from = static_cast<const LoginRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:v6.services.pub.LoginRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_identity().empty()) {
    _this->_internal_set_identity(from._internal_identity());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  if (!from._internal_addon().empty()) {
    _this->_internal_set_addon(from._internal_addon());
  }
  if (!from._internal_input().empty()) {
    _this->_internal_set_input(from._internal_input());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_callback().empty()) {
    _this->_internal_set_callback(from._internal_callback());
  }
  if (!from._internal_return_url().empty()) {
    _this->_internal_set_return_url(from._internal_return_url());
  }
  if (!from._internal_captcha().empty()) {
    _this->_internal_set_captcha(from._internal_captcha());
  }
  if (!from._internal_state().empty()) {
    _this->_internal_set_state(from._internal_state());
  }
  if (!from._internal_country_code().empty()) {
    _this->_internal_set_country_code(from._internal_country_code());
  }
  if (from._internal_return_type() != 0) {
    _this->_internal_set_return_type(from._internal_return_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoginRequest::CopyFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v6.services.pub.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRequest::IsInitialized() const {
  return true;
}

void LoginRequest::InternalSwap(LoginRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.identity_, lhs_arena,
      &other->_impl_.identity_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.password_, lhs_arena,
      &other->_impl_.password_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.addon_, lhs_arena,
      &other->_impl_.addon_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.input_, lhs_arena,
      &other->_impl_.input_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_, lhs_arena,
      &other->_impl_.type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.callback_, lhs_arena,
      &other->_impl_.callback_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.return_url_, lhs_arena,
      &other->_impl_.return_url_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.captcha_, lhs_arena,
      &other->_impl_.captcha_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.state_, lhs_arena,
      &other->_impl_.state_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.country_code_, lhs_arena,
      &other->_impl_.country_code_, rhs_arena
  );
  swap(_impl_.return_type_, other->_impl_.return_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoginRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_5fsvc_2eproto_getter, &descriptor_table_user_5fsvc_2eproto_once,
      file_level_metadata_user_5fsvc_2eproto[1]);
}

// ===================================================================

class LoginResponse::_Internal {
 public:
  static const ::v6::services::pub::Token& token(const LoginResponse* msg);
  static const ::v6::services::pub::User& user(const LoginResponse* msg);
  static const ::v6::services::pub::LastLoginResponse& last_login(const LoginResponse* msg);
};

const ::v6::services::pub::Token&
LoginResponse::_Internal::token(const LoginResponse* msg) {
  return *msg->_impl_.token_;
}
const ::v6::services::pub::User&
LoginResponse::_Internal::user(const LoginResponse* msg) {
  return *msg->_impl_.user_;
}
const ::v6::services::pub::LastLoginResponse&
LoginResponse::_Internal::last_login(const LoginResponse* msg) {
  return *msg->_impl_.last_login_;
}
LoginResponse::LoginResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:v6.services.pub.LoginResponse)
}
LoginResponse::LoginResponse(const LoginResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LoginResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.state_){}
    , decltype(_impl_.token_){nullptr}
    , decltype(_impl_.user_){nullptr}
    , decltype(_impl_.last_login_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.state_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_state().empty()) {
    _this->_impl_.state_.Set(from._internal_state(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_token()) {
    _this->_impl_.token_ = new ::v6::services::pub::Token(*from._impl_.token_);
  }
  if (from._internal_has_user()) {
    _this->_impl_.user_ = new ::v6::services::pub::User(*from._impl_.user_);
  }
  if (from._internal_has_last_login()) {
    _this->_impl_.last_login_ = new ::v6::services::pub::LastLoginResponse(*from._impl_.last_login_);
  }
  // @@protoc_insertion_point(copy_constructor:v6.services.pub.LoginResponse)
}

inline void LoginResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.state_){}
    , decltype(_impl_.token_){nullptr}
    , decltype(_impl_.user_){nullptr}
    , decltype(_impl_.last_login_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.state_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LoginResponse::~LoginResponse() {
  // @@protoc_insertion_point(destructor:v6.services.pub.LoginResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LoginResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.state_.Destroy();
  if (this != internal_default_instance()) delete _impl_.token_;
  if (this != internal_default_instance()) delete _impl_.user_;
  if (this != internal_default_instance()) delete _impl_.last_login_;
}

void LoginResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:v6.services.pub.LoginResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.state_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.token_ != nullptr) {
    delete _impl_.token_;
  }
  _impl_.token_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.user_ != nullptr) {
    delete _impl_.user_;
  }
  _impl_.user_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.last_login_ != nullptr) {
    delete _impl_.last_login_;
  }
  _impl_.last_login_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoginResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .v6.services.pub.Token token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_token(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .v6.services.pub.User user = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_user(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .v6.services.pub.LastLoginResponse last_login = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_last_login(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string state = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_state();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.LoginResponse.state"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LoginResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v6.services.pub.LoginResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .v6.services.pub.Token token = 1;
  if (this->_internal_has_token()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::token(this),
        _Internal::token(this).GetCachedSize(), target, stream);
  }

  // .v6.services.pub.User user = 2;
  if (this->_internal_has_user()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::user(this),
        _Internal::user(this).GetCachedSize(), target, stream);
  }

  // .v6.services.pub.LastLoginResponse last_login = 3;
  if (this->_internal_has_last_login()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::last_login(this),
        _Internal::last_login(this).GetCachedSize(), target, stream);
  }

  // string state = 4;
  if (!this->_internal_state().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_state().data(), static_cast<int>(this->_internal_state().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.LoginResponse.state");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v6.services.pub.LoginResponse)
  return target;
}

size_t LoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v6.services.pub.LoginResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string state = 4;
  if (!this->_internal_state().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_state());
  }

  // .v6.services.pub.Token token = 1;
  if (this->_internal_has_token()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.token_);
  }

  // .v6.services.pub.User user = 2;
  if (this->_internal_has_user()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.user_);
  }

  // .v6.services.pub.LastLoginResponse last_login = 3;
  if (this->_internal_has_last_login()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.last_login_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoginResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LoginResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoginResponse::GetClassData() const { return &_class_data_; }


void LoginResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LoginResponse*>(&to_msg);
  auto& from = static_cast<const LoginResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:v6.services.pub.LoginResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_state().empty()) {
    _this->_internal_set_state(from._internal_state());
  }
  if (from._internal_has_token()) {
    _this->_internal_mutable_token()->::v6::services::pub::Token::MergeFrom(
        from._internal_token());
  }
  if (from._internal_has_user()) {
    _this->_internal_mutable_user()->::v6::services::pub::User::MergeFrom(
        from._internal_user());
  }
  if (from._internal_has_last_login()) {
    _this->_internal_mutable_last_login()->::v6::services::pub::LastLoginResponse::MergeFrom(
        from._internal_last_login());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoginResponse::CopyFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v6.services.pub.LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginResponse::IsInitialized() const {
  return true;
}

void LoginResponse::InternalSwap(LoginResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.state_, lhs_arena,
      &other->_impl_.state_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LoginResponse, _impl_.last_login_)
      + sizeof(LoginResponse::_impl_.last_login_)
      - PROTOBUF_FIELD_OFFSET(LoginResponse, _impl_.token_)>(
          reinterpret_cast<char*>(&_impl_.token_),
          reinterpret_cast<char*>(&other->_impl_.token_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LoginResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_5fsvc_2eproto_getter, &descriptor_table_user_5fsvc_2eproto_once,
      file_level_metadata_user_5fsvc_2eproto[2]);
}

// ===================================================================

class LastLoginResponse::_Internal {
 public:
};

LastLoginResponse::LastLoginResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:v6.services.pub.LastLoginResponse)
}
LastLoginResponse::LastLoginResponse(const LastLoginResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LastLoginResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.identity_){}
    , decltype(_impl_.last_login_ip_){}
    , decltype(_impl_.last_login_device_){}
    , decltype(_impl_.last_login_ts_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.identity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.identity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_identity().empty()) {
    _this->_impl_.identity_.Set(from._internal_identity(), 
      _this->GetArenaForAllocation());
  }
  _impl_.last_login_ip_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.last_login_ip_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_last_login_ip().empty()) {
    _this->_impl_.last_login_ip_.Set(from._internal_last_login_ip(), 
      _this->GetArenaForAllocation());
  }
  _impl_.last_login_device_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.last_login_device_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_last_login_device().empty()) {
    _this->_impl_.last_login_device_.Set(from._internal_last_login_device(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.last_login_ts_ = from._impl_.last_login_ts_;
  // @@protoc_insertion_point(copy_constructor:v6.services.pub.LastLoginResponse)
}

inline void LastLoginResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.identity_){}
    , decltype(_impl_.last_login_ip_){}
    , decltype(_impl_.last_login_device_){}
    , decltype(_impl_.last_login_ts_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.identity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.identity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.last_login_ip_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.last_login_ip_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.last_login_device_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.last_login_device_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LastLoginResponse::~LastLoginResponse() {
  // @@protoc_insertion_point(destructor:v6.services.pub.LastLoginResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LastLoginResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.identity_.Destroy();
  _impl_.last_login_ip_.Destroy();
  _impl_.last_login_device_.Destroy();
}

void LastLoginResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LastLoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:v6.services.pub.LastLoginResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.identity_.ClearToEmpty();
  _impl_.last_login_ip_.ClearToEmpty();
  _impl_.last_login_device_.ClearToEmpty();
  _impl_.last_login_ts_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LastLoginResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string identity = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_identity();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.LastLoginResponse.identity"));
        } else
          goto handle_unusual;
        continue;
      // int64 last_login_ts = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.last_login_ts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string last_login_ip = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_last_login_ip();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.LastLoginResponse.last_login_ip"));
        } else
          goto handle_unusual;
        continue;
      // string last_login_device = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_last_login_device();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.LastLoginResponse.last_login_device"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LastLoginResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v6.services.pub.LastLoginResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string identity = 1;
  if (!this->_internal_identity().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identity().data(), static_cast<int>(this->_internal_identity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.LastLoginResponse.identity");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_identity(), target);
  }

  // int64 last_login_ts = 2;
  if (this->_internal_last_login_ts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_last_login_ts(), target);
  }

  // string last_login_ip = 3;
  if (!this->_internal_last_login_ip().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_last_login_ip().data(), static_cast<int>(this->_internal_last_login_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.LastLoginResponse.last_login_ip");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_last_login_ip(), target);
  }

  // string last_login_device = 4;
  if (!this->_internal_last_login_device().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_last_login_device().data(), static_cast<int>(this->_internal_last_login_device().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.LastLoginResponse.last_login_device");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_last_login_device(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v6.services.pub.LastLoginResponse)
  return target;
}

size_t LastLoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v6.services.pub.LastLoginResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string identity = 1;
  if (!this->_internal_identity().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identity());
  }

  // string last_login_ip = 3;
  if (!this->_internal_last_login_ip().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_last_login_ip());
  }

  // string last_login_device = 4;
  if (!this->_internal_last_login_device().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_last_login_device());
  }

  // int64 last_login_ts = 2;
  if (this->_internal_last_login_ts() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_last_login_ts());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LastLoginResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LastLoginResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LastLoginResponse::GetClassData() const { return &_class_data_; }


void LastLoginResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LastLoginResponse*>(&to_msg);
  auto& from = static_cast<const LastLoginResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:v6.services.pub.LastLoginResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_identity().empty()) {
    _this->_internal_set_identity(from._internal_identity());
  }
  if (!from._internal_last_login_ip().empty()) {
    _this->_internal_set_last_login_ip(from._internal_last_login_ip());
  }
  if (!from._internal_last_login_device().empty()) {
    _this->_internal_set_last_login_device(from._internal_last_login_device());
  }
  if (from._internal_last_login_ts() != 0) {
    _this->_internal_set_last_login_ts(from._internal_last_login_ts());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LastLoginResponse::CopyFrom(const LastLoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v6.services.pub.LastLoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LastLoginResponse::IsInitialized() const {
  return true;
}

void LastLoginResponse::InternalSwap(LastLoginResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.identity_, lhs_arena,
      &other->_impl_.identity_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.last_login_ip_, lhs_arena,
      &other->_impl_.last_login_ip_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.last_login_device_, lhs_arena,
      &other->_impl_.last_login_device_, rhs_arena
  );
  swap(_impl_.last_login_ts_, other->_impl_.last_login_ts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LastLoginResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_5fsvc_2eproto_getter, &descriptor_table_user_5fsvc_2eproto_once,
      file_level_metadata_user_5fsvc_2eproto[3]);
}

// ===================================================================

class Token::_Internal {
 public:
};

Token::Token(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:v6.services.pub.Token)
}
Token::Token(const Token& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Token* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.identity_){}
    , decltype(_impl_.user_identity_){}
    , decltype(_impl_.device_){}
    , decltype(_impl_.access_token_){}
    , decltype(_impl_.refresh_token_){}
    , decltype(_impl_.update_ts_){}
    , decltype(_impl_.access_token_expire_ts_){}
    , decltype(_impl_.refresh_token_expire_ts_){}
    , decltype(_impl_.version_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.identity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.identity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_identity().empty()) {
    _this->_impl_.identity_.Set(from._internal_identity(), 
      _this->GetArenaForAllocation());
  }
  _impl_.user_identity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_identity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_identity().empty()) {
    _this->_impl_.user_identity_.Set(from._internal_user_identity(), 
      _this->GetArenaForAllocation());
  }
  _impl_.device_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.device_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_device().empty()) {
    _this->_impl_.device_.Set(from._internal_device(), 
      _this->GetArenaForAllocation());
  }
  _impl_.access_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.access_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_access_token().empty()) {
    _this->_impl_.access_token_.Set(from._internal_access_token(), 
      _this->GetArenaForAllocation());
  }
  _impl_.refresh_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.refresh_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_refresh_token().empty()) {
    _this->_impl_.refresh_token_.Set(from._internal_refresh_token(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.update_ts_, &from._impl_.update_ts_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.version_) -
    reinterpret_cast<char*>(&_impl_.update_ts_)) + sizeof(_impl_.version_));
  // @@protoc_insertion_point(copy_constructor:v6.services.pub.Token)
}

inline void Token::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.identity_){}
    , decltype(_impl_.user_identity_){}
    , decltype(_impl_.device_){}
    , decltype(_impl_.access_token_){}
    , decltype(_impl_.refresh_token_){}
    , decltype(_impl_.update_ts_){int64_t{0}}
    , decltype(_impl_.access_token_expire_ts_){int64_t{0}}
    , decltype(_impl_.refresh_token_expire_ts_){int64_t{0}}
    , decltype(_impl_.version_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.identity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.identity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.user_identity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_identity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.device_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.device_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.access_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.access_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.refresh_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.refresh_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Token::~Token() {
  // @@protoc_insertion_point(destructor:v6.services.pub.Token)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Token::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.identity_.Destroy();
  _impl_.user_identity_.Destroy();
  _impl_.device_.Destroy();
  _impl_.access_token_.Destroy();
  _impl_.refresh_token_.Destroy();
}

void Token::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Token::Clear() {
// @@protoc_insertion_point(message_clear_start:v6.services.pub.Token)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.identity_.ClearToEmpty();
  _impl_.user_identity_.ClearToEmpty();
  _impl_.device_.ClearToEmpty();
  _impl_.access_token_.ClearToEmpty();
  _impl_.refresh_token_.ClearToEmpty();
  ::memset(&_impl_.update_ts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.version_) -
      reinterpret_cast<char*>(&_impl_.update_ts_)) + sizeof(_impl_.version_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Token::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string identity = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_identity();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.Token.identity"));
        } else
          goto handle_unusual;
        continue;
      // string user_identity = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_user_identity();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.Token.user_identity"));
        } else
          goto handle_unusual;
        continue;
      // string device = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_device();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.Token.device"));
        } else
          goto handle_unusual;
        continue;
      // int32 version = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string access_token = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_access_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.Token.access_token"));
        } else
          goto handle_unusual;
        continue;
      // string refresh_token = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_refresh_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.Token.refresh_token"));
        } else
          goto handle_unusual;
        continue;
      // int64 update_ts = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.update_ts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 access_token_expire_ts = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.access_token_expire_ts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 refresh_token_expire_ts = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _impl_.refresh_token_expire_ts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Token::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v6.services.pub.Token)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string identity = 1;
  if (!this->_internal_identity().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identity().data(), static_cast<int>(this->_internal_identity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.Token.identity");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_identity(), target);
  }

  // string user_identity = 2;
  if (!this->_internal_user_identity().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_identity().data(), static_cast<int>(this->_internal_user_identity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.Token.user_identity");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_user_identity(), target);
  }

  // string device = 3;
  if (!this->_internal_device().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_device().data(), static_cast<int>(this->_internal_device().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.Token.device");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_device(), target);
  }

  // int32 version = 4;
  if (this->_internal_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_version(), target);
  }

  // string access_token = 5;
  if (!this->_internal_access_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_access_token().data(), static_cast<int>(this->_internal_access_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.Token.access_token");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_access_token(), target);
  }

  // string refresh_token = 6;
  if (!this->_internal_refresh_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_refresh_token().data(), static_cast<int>(this->_internal_refresh_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.Token.refresh_token");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_refresh_token(), target);
  }

  // int64 update_ts = 7;
  if (this->_internal_update_ts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(7, this->_internal_update_ts(), target);
  }

  // int64 access_token_expire_ts = 8;
  if (this->_internal_access_token_expire_ts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(8, this->_internal_access_token_expire_ts(), target);
  }

  // int64 refresh_token_expire_ts = 9;
  if (this->_internal_refresh_token_expire_ts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(9, this->_internal_refresh_token_expire_ts(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v6.services.pub.Token)
  return target;
}

size_t Token::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v6.services.pub.Token)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string identity = 1;
  if (!this->_internal_identity().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identity());
  }

  // string user_identity = 2;
  if (!this->_internal_user_identity().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_identity());
  }

  // string device = 3;
  if (!this->_internal_device().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_device());
  }

  // string access_token = 5;
  if (!this->_internal_access_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_access_token());
  }

  // string refresh_token = 6;
  if (!this->_internal_refresh_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_refresh_token());
  }

  // int64 update_ts = 7;
  if (this->_internal_update_ts() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_update_ts());
  }

  // int64 access_token_expire_ts = 8;
  if (this->_internal_access_token_expire_ts() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_access_token_expire_ts());
  }

  // int64 refresh_token_expire_ts = 9;
  if (this->_internal_refresh_token_expire_ts() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_refresh_token_expire_ts());
  }

  // int32 version = 4;
  if (this->_internal_version() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Token::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Token::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Token::GetClassData() const { return &_class_data_; }


void Token::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Token*>(&to_msg);
  auto& from = static_cast<const Token&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:v6.services.pub.Token)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_identity().empty()) {
    _this->_internal_set_identity(from._internal_identity());
  }
  if (!from._internal_user_identity().empty()) {
    _this->_internal_set_user_identity(from._internal_user_identity());
  }
  if (!from._internal_device().empty()) {
    _this->_internal_set_device(from._internal_device());
  }
  if (!from._internal_access_token().empty()) {
    _this->_internal_set_access_token(from._internal_access_token());
  }
  if (!from._internal_refresh_token().empty()) {
    _this->_internal_set_refresh_token(from._internal_refresh_token());
  }
  if (from._internal_update_ts() != 0) {
    _this->_internal_set_update_ts(from._internal_update_ts());
  }
  if (from._internal_access_token_expire_ts() != 0) {
    _this->_internal_set_access_token_expire_ts(from._internal_access_token_expire_ts());
  }
  if (from._internal_refresh_token_expire_ts() != 0) {
    _this->_internal_set_refresh_token_expire_ts(from._internal_refresh_token_expire_ts());
  }
  if (from._internal_version() != 0) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Token::CopyFrom(const Token& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v6.services.pub.Token)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Token::IsInitialized() const {
  return true;
}

void Token::InternalSwap(Token* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.identity_, lhs_arena,
      &other->_impl_.identity_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_identity_, lhs_arena,
      &other->_impl_.user_identity_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.device_, lhs_arena,
      &other->_impl_.device_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.access_token_, lhs_arena,
      &other->_impl_.access_token_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.refresh_token_, lhs_arena,
      &other->_impl_.refresh_token_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Token, _impl_.version_)
      + sizeof(Token::_impl_.version_)
      - PROTOBUF_FIELD_OFFSET(Token, _impl_.update_ts_)>(
          reinterpret_cast<char*>(&_impl_.update_ts_),
          reinterpret_cast<char*>(&other->_impl_.update_ts_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Token::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_5fsvc_2eproto_getter, &descriptor_table_user_5fsvc_2eproto_once,
      file_level_metadata_user_5fsvc_2eproto[4]);
}

// ===================================================================

class RegisterRequest::_Internal {
 public:
};

RegisterRequest::RegisterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:v6.services.pub.RegisterRequest)
}
RegisterRequest::RegisterRequest(const RegisterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RegisterRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.password_){}
    , decltype(_impl_.captcha_){}
    , decltype(_impl_.email_){}
    , decltype(_impl_.sms_captcha_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_password().empty()) {
    _this->_impl_.password_.Set(from._internal_password(), 
      _this->GetArenaForAllocation());
  }
  _impl_.captcha_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.captcha_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_captcha().empty()) {
    _this->_impl_.captcha_.Set(from._internal_captcha(), 
      _this->GetArenaForAllocation());
  }
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    _this->_impl_.email_.Set(from._internal_email(), 
      _this->GetArenaForAllocation());
  }
  _impl_.sms_captcha_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sms_captcha_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sms_captcha().empty()) {
    _this->_impl_.sms_captcha_.Set(from._internal_sms_captcha(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:v6.services.pub.RegisterRequest)
}

inline void RegisterRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.password_){}
    , decltype(_impl_.captcha_){}
    , decltype(_impl_.email_){}
    , decltype(_impl_.sms_captcha_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.captcha_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.captcha_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.sms_captcha_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sms_captcha_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RegisterRequest::~RegisterRequest() {
  // @@protoc_insertion_point(destructor:v6.services.pub.RegisterRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RegisterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.password_.Destroy();
  _impl_.captcha_.Destroy();
  _impl_.email_.Destroy();
  _impl_.sms_captcha_.Destroy();
}

void RegisterRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:v6.services.pub.RegisterRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _impl_.captcha_.ClearToEmpty();
  _impl_.email_.ClearToEmpty();
  _impl_.sms_captcha_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.RegisterRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_password();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.RegisterRequest.password"));
        } else
          goto handle_unusual;
        continue;
      // string captcha = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_captcha();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.RegisterRequest.captcha"));
        } else
          goto handle_unusual;
        continue;
      // string email = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.RegisterRequest.email"));
        } else
          goto handle_unusual;
        continue;
      // string sms_captcha = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_sms_captcha();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.RegisterRequest.sms_captcha"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RegisterRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v6.services.pub.RegisterRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.RegisterRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.RegisterRequest.password");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_password(), target);
  }

  // string captcha = 3;
  if (!this->_internal_captcha().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_captcha().data(), static_cast<int>(this->_internal_captcha().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.RegisterRequest.captcha");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_captcha(), target);
  }

  // string email = 5;
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.RegisterRequest.email");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_email(), target);
  }

  // string sms_captcha = 6;
  if (!this->_internal_sms_captcha().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sms_captcha().data(), static_cast<int>(this->_internal_sms_captcha().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.RegisterRequest.sms_captcha");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_sms_captcha(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v6.services.pub.RegisterRequest)
  return target;
}

size_t RegisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v6.services.pub.RegisterRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // string captcha = 3;
  if (!this->_internal_captcha().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_captcha());
  }

  // string email = 5;
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  // string sms_captcha = 6;
  if (!this->_internal_sms_captcha().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sms_captcha());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RegisterRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RegisterRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RegisterRequest::GetClassData() const { return &_class_data_; }


void RegisterRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RegisterRequest*>(&to_msg);
  auto& from = static_cast<const RegisterRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:v6.services.pub.RegisterRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  if (!from._internal_captcha().empty()) {
    _this->_internal_set_captcha(from._internal_captcha());
  }
  if (!from._internal_email().empty()) {
    _this->_internal_set_email(from._internal_email());
  }
  if (!from._internal_sms_captcha().empty()) {
    _this->_internal_set_sms_captcha(from._internal_sms_captcha());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterRequest::CopyFrom(const RegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v6.services.pub.RegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterRequest::IsInitialized() const {
  return true;
}

void RegisterRequest::InternalSwap(RegisterRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.password_, lhs_arena,
      &other->_impl_.password_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.captcha_, lhs_arena,
      &other->_impl_.captcha_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.email_, lhs_arena,
      &other->_impl_.email_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.sms_captcha_, lhs_arena,
      &other->_impl_.sms_captcha_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_5fsvc_2eproto_getter, &descriptor_table_user_5fsvc_2eproto_once,
      file_level_metadata_user_5fsvc_2eproto[5]);
}

// ===================================================================

class SmsVeifyCodeSendRequest::_Internal {
 public:
};

SmsVeifyCodeSendRequest::SmsVeifyCodeSendRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:v6.services.pub.SmsVeifyCodeSendRequest)
}
SmsVeifyCodeSendRequest::SmsVeifyCodeSendRequest(const SmsVeifyCodeSendRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SmsVeifyCodeSendRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.captcha_){}
    , decltype(_impl_.addon_){}
    , decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.captcha_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.captcha_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_captcha().empty()) {
    _this->_impl_.captcha_.Set(from._internal_captcha(), 
      _this->GetArenaForAllocation());
  }
  _impl_.addon_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.addon_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_addon().empty()) {
    _this->_impl_.addon_.Set(from._internal_addon(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.type_ = from._impl_.type_;
  // @@protoc_insertion_point(copy_constructor:v6.services.pub.SmsVeifyCodeSendRequest)
}

inline void SmsVeifyCodeSendRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.captcha_){}
    , decltype(_impl_.addon_){}
    , decltype(_impl_.type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.captcha_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.captcha_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.addon_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.addon_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SmsVeifyCodeSendRequest::~SmsVeifyCodeSendRequest() {
  // @@protoc_insertion_point(destructor:v6.services.pub.SmsVeifyCodeSendRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SmsVeifyCodeSendRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.captcha_.Destroy();
  _impl_.addon_.Destroy();
}

void SmsVeifyCodeSendRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SmsVeifyCodeSendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:v6.services.pub.SmsVeifyCodeSendRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.captcha_.ClearToEmpty();
  _impl_.addon_.ClearToEmpty();
  _impl_.type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SmsVeifyCodeSendRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string captcha = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_captcha();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.SmsVeifyCodeSendRequest.captcha"));
        } else
          goto handle_unusual;
        continue;
      // int32 type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string addon = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_addon();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.SmsVeifyCodeSendRequest.addon"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SmsVeifyCodeSendRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v6.services.pub.SmsVeifyCodeSendRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string captcha = 1;
  if (!this->_internal_captcha().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_captcha().data(), static_cast<int>(this->_internal_captcha().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.SmsVeifyCodeSendRequest.captcha");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_captcha(), target);
  }

  // int32 type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_type(), target);
  }

  // string addon = 3;
  if (!this->_internal_addon().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_addon().data(), static_cast<int>(this->_internal_addon().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.SmsVeifyCodeSendRequest.addon");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_addon(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v6.services.pub.SmsVeifyCodeSendRequest)
  return target;
}

size_t SmsVeifyCodeSendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v6.services.pub.SmsVeifyCodeSendRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string captcha = 1;
  if (!this->_internal_captcha().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_captcha());
  }

  // string addon = 3;
  if (!this->_internal_addon().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_addon());
  }

  // int32 type = 2;
  if (this->_internal_type() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SmsVeifyCodeSendRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SmsVeifyCodeSendRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SmsVeifyCodeSendRequest::GetClassData() const { return &_class_data_; }


void SmsVeifyCodeSendRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SmsVeifyCodeSendRequest*>(&to_msg);
  auto& from = static_cast<const SmsVeifyCodeSendRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:v6.services.pub.SmsVeifyCodeSendRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_captcha().empty()) {
    _this->_internal_set_captcha(from._internal_captcha());
  }
  if (!from._internal_addon().empty()) {
    _this->_internal_set_addon(from._internal_addon());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SmsVeifyCodeSendRequest::CopyFrom(const SmsVeifyCodeSendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v6.services.pub.SmsVeifyCodeSendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SmsVeifyCodeSendRequest::IsInitialized() const {
  return true;
}

void SmsVeifyCodeSendRequest::InternalSwap(SmsVeifyCodeSendRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.captcha_, lhs_arena,
      &other->_impl_.captcha_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.addon_, lhs_arena,
      &other->_impl_.addon_, rhs_arena
  );
  swap(_impl_.type_, other->_impl_.type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SmsVeifyCodeSendRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_5fsvc_2eproto_getter, &descriptor_table_user_5fsvc_2eproto_once,
      file_level_metadata_user_5fsvc_2eproto[6]);
}

// ===================================================================

class SmsVeifyCodeSendRequestNotUser::_Internal {
 public:
};

SmsVeifyCodeSendRequestNotUser::SmsVeifyCodeSendRequestNotUser(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:v6.services.pub.SmsVeifyCodeSendRequestNotUser)
}
SmsVeifyCodeSendRequestNotUser::SmsVeifyCodeSendRequestNotUser(const SmsVeifyCodeSendRequestNotUser& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SmsVeifyCodeSendRequestNotUser* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.captcha_){}
    , decltype(_impl_.addon_){}
    , decltype(_impl_.country_code_){}
    , decltype(_impl_.phone_){}
    , decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.captcha_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.captcha_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_captcha().empty()) {
    _this->_impl_.captcha_.Set(from._internal_captcha(), 
      _this->GetArenaForAllocation());
  }
  _impl_.addon_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.addon_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_addon().empty()) {
    _this->_impl_.addon_.Set(from._internal_addon(), 
      _this->GetArenaForAllocation());
  }
  _impl_.country_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.country_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_country_code().empty()) {
    _this->_impl_.country_code_.Set(from._internal_country_code(), 
      _this->GetArenaForAllocation());
  }
  _impl_.phone_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.phone_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_phone().empty()) {
    _this->_impl_.phone_.Set(from._internal_phone(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.type_ = from._impl_.type_;
  // @@protoc_insertion_point(copy_constructor:v6.services.pub.SmsVeifyCodeSendRequestNotUser)
}

inline void SmsVeifyCodeSendRequestNotUser::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.captcha_){}
    , decltype(_impl_.addon_){}
    , decltype(_impl_.country_code_){}
    , decltype(_impl_.phone_){}
    , decltype(_impl_.type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.captcha_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.captcha_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.addon_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.addon_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.country_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.country_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.phone_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.phone_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SmsVeifyCodeSendRequestNotUser::~SmsVeifyCodeSendRequestNotUser() {
  // @@protoc_insertion_point(destructor:v6.services.pub.SmsVeifyCodeSendRequestNotUser)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SmsVeifyCodeSendRequestNotUser::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.captcha_.Destroy();
  _impl_.addon_.Destroy();
  _impl_.country_code_.Destroy();
  _impl_.phone_.Destroy();
}

void SmsVeifyCodeSendRequestNotUser::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SmsVeifyCodeSendRequestNotUser::Clear() {
// @@protoc_insertion_point(message_clear_start:v6.services.pub.SmsVeifyCodeSendRequestNotUser)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.captcha_.ClearToEmpty();
  _impl_.addon_.ClearToEmpty();
  _impl_.country_code_.ClearToEmpty();
  _impl_.phone_.ClearToEmpty();
  _impl_.type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SmsVeifyCodeSendRequestNotUser::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string captcha = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_captcha();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.SmsVeifyCodeSendRequestNotUser.captcha"));
        } else
          goto handle_unusual;
        continue;
      // int32 type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string addon = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_addon();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.SmsVeifyCodeSendRequestNotUser.addon"));
        } else
          goto handle_unusual;
        continue;
      // string country_code = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_country_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.SmsVeifyCodeSendRequestNotUser.country_code"));
        } else
          goto handle_unusual;
        continue;
      // string phone = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_phone();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.SmsVeifyCodeSendRequestNotUser.phone"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SmsVeifyCodeSendRequestNotUser::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v6.services.pub.SmsVeifyCodeSendRequestNotUser)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string captcha = 1;
  if (!this->_internal_captcha().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_captcha().data(), static_cast<int>(this->_internal_captcha().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.SmsVeifyCodeSendRequestNotUser.captcha");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_captcha(), target);
  }

  // int32 type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_type(), target);
  }

  // string addon = 3;
  if (!this->_internal_addon().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_addon().data(), static_cast<int>(this->_internal_addon().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.SmsVeifyCodeSendRequestNotUser.addon");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_addon(), target);
  }

  // string country_code = 4;
  if (!this->_internal_country_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_country_code().data(), static_cast<int>(this->_internal_country_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.SmsVeifyCodeSendRequestNotUser.country_code");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_country_code(), target);
  }

  // string phone = 5;
  if (!this->_internal_phone().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_phone().data(), static_cast<int>(this->_internal_phone().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.SmsVeifyCodeSendRequestNotUser.phone");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_phone(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v6.services.pub.SmsVeifyCodeSendRequestNotUser)
  return target;
}

size_t SmsVeifyCodeSendRequestNotUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v6.services.pub.SmsVeifyCodeSendRequestNotUser)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string captcha = 1;
  if (!this->_internal_captcha().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_captcha());
  }

  // string addon = 3;
  if (!this->_internal_addon().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_addon());
  }

  // string country_code = 4;
  if (!this->_internal_country_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_country_code());
  }

  // string phone = 5;
  if (!this->_internal_phone().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_phone());
  }

  // int32 type = 2;
  if (this->_internal_type() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SmsVeifyCodeSendRequestNotUser::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SmsVeifyCodeSendRequestNotUser::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SmsVeifyCodeSendRequestNotUser::GetClassData() const { return &_class_data_; }


void SmsVeifyCodeSendRequestNotUser::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SmsVeifyCodeSendRequestNotUser*>(&to_msg);
  auto& from = static_cast<const SmsVeifyCodeSendRequestNotUser&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:v6.services.pub.SmsVeifyCodeSendRequestNotUser)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_captcha().empty()) {
    _this->_internal_set_captcha(from._internal_captcha());
  }
  if (!from._internal_addon().empty()) {
    _this->_internal_set_addon(from._internal_addon());
  }
  if (!from._internal_country_code().empty()) {
    _this->_internal_set_country_code(from._internal_country_code());
  }
  if (!from._internal_phone().empty()) {
    _this->_internal_set_phone(from._internal_phone());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SmsVeifyCodeSendRequestNotUser::CopyFrom(const SmsVeifyCodeSendRequestNotUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v6.services.pub.SmsVeifyCodeSendRequestNotUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SmsVeifyCodeSendRequestNotUser::IsInitialized() const {
  return true;
}

void SmsVeifyCodeSendRequestNotUser::InternalSwap(SmsVeifyCodeSendRequestNotUser* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.captcha_, lhs_arena,
      &other->_impl_.captcha_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.addon_, lhs_arena,
      &other->_impl_.addon_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.country_code_, lhs_arena,
      &other->_impl_.country_code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.phone_, lhs_arena,
      &other->_impl_.phone_, rhs_arena
  );
  swap(_impl_.type_, other->_impl_.type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SmsVeifyCodeSendRequestNotUser::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_5fsvc_2eproto_getter, &descriptor_table_user_5fsvc_2eproto_once,
      file_level_metadata_user_5fsvc_2eproto[7]);
}

// ===================================================================

class SmsVeifyCodeSendResponse::_Internal {
 public:
};

SmsVeifyCodeSendResponse::SmsVeifyCodeSendResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:v6.services.pub.SmsVeifyCodeSendResponse)
}
SmsVeifyCodeSendResponse::SmsVeifyCodeSendResponse(const SmsVeifyCodeSendResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SmsVeifyCodeSendResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.captcha_){}
    , decltype(_impl_.addon_){}
    , decltype(_impl_.expire_ts_){}
    , decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.captcha_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.captcha_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_captcha().empty()) {
    _this->_impl_.captcha_.Set(from._internal_captcha(), 
      _this->GetArenaForAllocation());
  }
  _impl_.addon_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.addon_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_addon().empty()) {
    _this->_impl_.addon_.Set(from._internal_addon(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.expire_ts_, &from._impl_.expire_ts_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.type_) -
    reinterpret_cast<char*>(&_impl_.expire_ts_)) + sizeof(_impl_.type_));
  // @@protoc_insertion_point(copy_constructor:v6.services.pub.SmsVeifyCodeSendResponse)
}

inline void SmsVeifyCodeSendResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.captcha_){}
    , decltype(_impl_.addon_){}
    , decltype(_impl_.expire_ts_){int64_t{0}}
    , decltype(_impl_.type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.captcha_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.captcha_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.addon_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.addon_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SmsVeifyCodeSendResponse::~SmsVeifyCodeSendResponse() {
  // @@protoc_insertion_point(destructor:v6.services.pub.SmsVeifyCodeSendResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SmsVeifyCodeSendResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.captcha_.Destroy();
  _impl_.addon_.Destroy();
}

void SmsVeifyCodeSendResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SmsVeifyCodeSendResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:v6.services.pub.SmsVeifyCodeSendResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.captcha_.ClearToEmpty();
  _impl_.addon_.ClearToEmpty();
  ::memset(&_impl_.expire_ts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.expire_ts_)) + sizeof(_impl_.type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SmsVeifyCodeSendResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string captcha = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_captcha();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.SmsVeifyCodeSendResponse.captcha"));
        } else
          goto handle_unusual;
        continue;
      // int32 type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string addon = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_addon();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.SmsVeifyCodeSendResponse.addon"));
        } else
          goto handle_unusual;
        continue;
      // int64 expire_ts = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.expire_ts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SmsVeifyCodeSendResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v6.services.pub.SmsVeifyCodeSendResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string captcha = 1;
  if (!this->_internal_captcha().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_captcha().data(), static_cast<int>(this->_internal_captcha().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.SmsVeifyCodeSendResponse.captcha");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_captcha(), target);
  }

  // int32 type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_type(), target);
  }

  // string addon = 3;
  if (!this->_internal_addon().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_addon().data(), static_cast<int>(this->_internal_addon().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.SmsVeifyCodeSendResponse.addon");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_addon(), target);
  }

  // int64 expire_ts = 4;
  if (this->_internal_expire_ts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_expire_ts(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v6.services.pub.SmsVeifyCodeSendResponse)
  return target;
}

size_t SmsVeifyCodeSendResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v6.services.pub.SmsVeifyCodeSendResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string captcha = 1;
  if (!this->_internal_captcha().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_captcha());
  }

  // string addon = 3;
  if (!this->_internal_addon().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_addon());
  }

  // int64 expire_ts = 4;
  if (this->_internal_expire_ts() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_expire_ts());
  }

  // int32 type = 2;
  if (this->_internal_type() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SmsVeifyCodeSendResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SmsVeifyCodeSendResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SmsVeifyCodeSendResponse::GetClassData() const { return &_class_data_; }


void SmsVeifyCodeSendResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SmsVeifyCodeSendResponse*>(&to_msg);
  auto& from = static_cast<const SmsVeifyCodeSendResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:v6.services.pub.SmsVeifyCodeSendResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_captcha().empty()) {
    _this->_internal_set_captcha(from._internal_captcha());
  }
  if (!from._internal_addon().empty()) {
    _this->_internal_set_addon(from._internal_addon());
  }
  if (from._internal_expire_ts() != 0) {
    _this->_internal_set_expire_ts(from._internal_expire_ts());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SmsVeifyCodeSendResponse::CopyFrom(const SmsVeifyCodeSendResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v6.services.pub.SmsVeifyCodeSendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SmsVeifyCodeSendResponse::IsInitialized() const {
  return true;
}

void SmsVeifyCodeSendResponse::InternalSwap(SmsVeifyCodeSendResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.captcha_, lhs_arena,
      &other->_impl_.captcha_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.addon_, lhs_arena,
      &other->_impl_.addon_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SmsVeifyCodeSendResponse, _impl_.type_)
      + sizeof(SmsVeifyCodeSendResponse::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(SmsVeifyCodeSendResponse, _impl_.expire_ts_)>(
          reinterpret_cast<char*>(&_impl_.expire_ts_),
          reinterpret_cast<char*>(&other->_impl_.expire_ts_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SmsVeifyCodeSendResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_5fsvc_2eproto_getter, &descriptor_table_user_5fsvc_2eproto_once,
      file_level_metadata_user_5fsvc_2eproto[8]);
}

// ===================================================================

class OauthTokenResponse::_Internal {
 public:
};

OauthTokenResponse::OauthTokenResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:v6.services.pub.OauthTokenResponse)
}
OauthTokenResponse::OauthTokenResponse(const OauthTokenResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OauthTokenResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.url_){}
    , decltype(_impl_.addon_){}
    , decltype(_impl_.input_){}
    , decltype(_impl_.type_){}
    , decltype(_impl_.callback_){}
    , decltype(_impl_.return_url_){}
    , decltype(_impl_.captcha_){}
    , decltype(_impl_.state_){}
    , decltype(_impl_.return_type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url().empty()) {
    _this->_impl_.url_.Set(from._internal_url(), 
      _this->GetArenaForAllocation());
  }
  _impl_.addon_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.addon_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_addon().empty()) {
    _this->_impl_.addon_.Set(from._internal_addon(), 
      _this->GetArenaForAllocation());
  }
  _impl_.input_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.input_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_input().empty()) {
    _this->_impl_.input_.Set(from._internal_input(), 
      _this->GetArenaForAllocation());
  }
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type().empty()) {
    _this->_impl_.type_.Set(from._internal_type(), 
      _this->GetArenaForAllocation());
  }
  _impl_.callback_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.callback_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_callback().empty()) {
    _this->_impl_.callback_.Set(from._internal_callback(), 
      _this->GetArenaForAllocation());
  }
  _impl_.return_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.return_url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_return_url().empty()) {
    _this->_impl_.return_url_.Set(from._internal_return_url(), 
      _this->GetArenaForAllocation());
  }
  _impl_.captcha_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.captcha_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_captcha().empty()) {
    _this->_impl_.captcha_.Set(from._internal_captcha(), 
      _this->GetArenaForAllocation());
  }
  _impl_.state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.state_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_state().empty()) {
    _this->_impl_.state_.Set(from._internal_state(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.return_type_ = from._impl_.return_type_;
  // @@protoc_insertion_point(copy_constructor:v6.services.pub.OauthTokenResponse)
}

inline void OauthTokenResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.url_){}
    , decltype(_impl_.addon_){}
    , decltype(_impl_.input_){}
    , decltype(_impl_.type_){}
    , decltype(_impl_.callback_){}
    , decltype(_impl_.return_url_){}
    , decltype(_impl_.captcha_){}
    , decltype(_impl_.state_){}
    , decltype(_impl_.return_type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.addon_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.addon_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.input_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.input_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.callback_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.callback_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.return_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.return_url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.captcha_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.captcha_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.state_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OauthTokenResponse::~OauthTokenResponse() {
  // @@protoc_insertion_point(destructor:v6.services.pub.OauthTokenResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OauthTokenResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.url_.Destroy();
  _impl_.addon_.Destroy();
  _impl_.input_.Destroy();
  _impl_.type_.Destroy();
  _impl_.callback_.Destroy();
  _impl_.return_url_.Destroy();
  _impl_.captcha_.Destroy();
  _impl_.state_.Destroy();
}

void OauthTokenResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OauthTokenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:v6.services.pub.OauthTokenResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.url_.ClearToEmpty();
  _impl_.addon_.ClearToEmpty();
  _impl_.input_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  _impl_.callback_.ClearToEmpty();
  _impl_.return_url_.ClearToEmpty();
  _impl_.captcha_.ClearToEmpty();
  _impl_.state_.ClearToEmpty();
  _impl_.return_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OauthTokenResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string url = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.OauthTokenResponse.url"));
        } else
          goto handle_unusual;
        continue;
      // string addon = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_addon();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.OauthTokenResponse.addon"));
        } else
          goto handle_unusual;
        continue;
      // string input = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_input();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.OauthTokenResponse.input"));
        } else
          goto handle_unusual;
        continue;
      // string type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.OauthTokenResponse.type"));
        } else
          goto handle_unusual;
        continue;
      // string callback = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_callback();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.OauthTokenResponse.callback"));
        } else
          goto handle_unusual;
        continue;
      // string return_url = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_return_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.OauthTokenResponse.return_url"));
        } else
          goto handle_unusual;
        continue;
      // int32 return_type = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.return_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string captcha = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_captcha();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.OauthTokenResponse.captcha"));
        } else
          goto handle_unusual;
        continue;
      // string state = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_state();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.OauthTokenResponse.state"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OauthTokenResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v6.services.pub.OauthTokenResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (!this->_internal_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.OauthTokenResponse.url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_url(), target);
  }

  // string addon = 2;
  if (!this->_internal_addon().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_addon().data(), static_cast<int>(this->_internal_addon().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.OauthTokenResponse.addon");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_addon(), target);
  }

  // string input = 3;
  if (!this->_internal_input().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_input().data(), static_cast<int>(this->_internal_input().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.OauthTokenResponse.input");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_input(), target);
  }

  // string type = 4;
  if (!this->_internal_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.OauthTokenResponse.type");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_type(), target);
  }

  // string callback = 5;
  if (!this->_internal_callback().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_callback().data(), static_cast<int>(this->_internal_callback().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.OauthTokenResponse.callback");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_callback(), target);
  }

  // string return_url = 6;
  if (!this->_internal_return_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_return_url().data(), static_cast<int>(this->_internal_return_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.OauthTokenResponse.return_url");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_return_url(), target);
  }

  // int32 return_type = 7;
  if (this->_internal_return_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_return_type(), target);
  }

  // string captcha = 8;
  if (!this->_internal_captcha().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_captcha().data(), static_cast<int>(this->_internal_captcha().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.OauthTokenResponse.captcha");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_captcha(), target);
  }

  // string state = 9;
  if (!this->_internal_state().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_state().data(), static_cast<int>(this->_internal_state().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.OauthTokenResponse.state");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v6.services.pub.OauthTokenResponse)
  return target;
}

size_t OauthTokenResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v6.services.pub.OauthTokenResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1;
  if (!this->_internal_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // string addon = 2;
  if (!this->_internal_addon().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_addon());
  }

  // string input = 3;
  if (!this->_internal_input().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_input());
  }

  // string type = 4;
  if (!this->_internal_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string callback = 5;
  if (!this->_internal_callback().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_callback());
  }

  // string return_url = 6;
  if (!this->_internal_return_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_return_url());
  }

  // string captcha = 8;
  if (!this->_internal_captcha().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_captcha());
  }

  // string state = 9;
  if (!this->_internal_state().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_state());
  }

  // int32 return_type = 7;
  if (this->_internal_return_type() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_return_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OauthTokenResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OauthTokenResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OauthTokenResponse::GetClassData() const { return &_class_data_; }


void OauthTokenResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OauthTokenResponse*>(&to_msg);
  auto& from = static_cast<const OauthTokenResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:v6.services.pub.OauthTokenResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_url().empty()) {
    _this->_internal_set_url(from._internal_url());
  }
  if (!from._internal_addon().empty()) {
    _this->_internal_set_addon(from._internal_addon());
  }
  if (!from._internal_input().empty()) {
    _this->_internal_set_input(from._internal_input());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_callback().empty()) {
    _this->_internal_set_callback(from._internal_callback());
  }
  if (!from._internal_return_url().empty()) {
    _this->_internal_set_return_url(from._internal_return_url());
  }
  if (!from._internal_captcha().empty()) {
    _this->_internal_set_captcha(from._internal_captcha());
  }
  if (!from._internal_state().empty()) {
    _this->_internal_set_state(from._internal_state());
  }
  if (from._internal_return_type() != 0) {
    _this->_internal_set_return_type(from._internal_return_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OauthTokenResponse::CopyFrom(const OauthTokenResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v6.services.pub.OauthTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OauthTokenResponse::IsInitialized() const {
  return true;
}

void OauthTokenResponse::InternalSwap(OauthTokenResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.url_, lhs_arena,
      &other->_impl_.url_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.addon_, lhs_arena,
      &other->_impl_.addon_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.input_, lhs_arena,
      &other->_impl_.input_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_, lhs_arena,
      &other->_impl_.type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.callback_, lhs_arena,
      &other->_impl_.callback_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.return_url_, lhs_arena,
      &other->_impl_.return_url_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.captcha_, lhs_arena,
      &other->_impl_.captcha_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.state_, lhs_arena,
      &other->_impl_.state_, rhs_arena
  );
  swap(_impl_.return_type_, other->_impl_.return_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OauthTokenResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_5fsvc_2eproto_getter, &descriptor_table_user_5fsvc_2eproto_once,
      file_level_metadata_user_5fsvc_2eproto[9]);
}

// ===================================================================

class OauthTokenCheckResponse::_Internal {
 public:
  static const ::v6::services::pub::LoginResponse& login(const OauthTokenCheckResponse* msg);
  static const ::v6::services::pub::OauthTokenResponse& oauth(const OauthTokenCheckResponse* msg);
};

const ::v6::services::pub::LoginResponse&
OauthTokenCheckResponse::_Internal::login(const OauthTokenCheckResponse* msg) {
  return *msg->_impl_.login_;
}
const ::v6::services::pub::OauthTokenResponse&
OauthTokenCheckResponse::_Internal::oauth(const OauthTokenCheckResponse* msg) {
  return *msg->_impl_.oauth_;
}
OauthTokenCheckResponse::OauthTokenCheckResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:v6.services.pub.OauthTokenCheckResponse)
}
OauthTokenCheckResponse::OauthTokenCheckResponse(const OauthTokenCheckResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OauthTokenCheckResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.login_){nullptr}
    , decltype(_impl_.oauth_){nullptr}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_login()) {
    _this->_impl_.login_ = new ::v6::services::pub::LoginResponse(*from._impl_.login_);
  }
  if (from._internal_has_oauth()) {
    _this->_impl_.oauth_ = new ::v6::services::pub::OauthTokenResponse(*from._impl_.oauth_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:v6.services.pub.OauthTokenCheckResponse)
}

inline void OauthTokenCheckResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.login_){nullptr}
    , decltype(_impl_.oauth_){nullptr}
    , decltype(_impl_.status_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OauthTokenCheckResponse::~OauthTokenCheckResponse() {
  // @@protoc_insertion_point(destructor:v6.services.pub.OauthTokenCheckResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OauthTokenCheckResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.login_;
  if (this != internal_default_instance()) delete _impl_.oauth_;
}

void OauthTokenCheckResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OauthTokenCheckResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:v6.services.pub.OauthTokenCheckResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.login_ != nullptr) {
    delete _impl_.login_;
  }
  _impl_.login_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.oauth_ != nullptr) {
    delete _impl_.oauth_;
  }
  _impl_.oauth_ = nullptr;
  _impl_.status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OauthTokenCheckResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .v6.services.pub.LoginResponse login = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_login(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .v6.services.pub.OauthTokenResponse oauth = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_oauth(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string message = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v6.services.pub.OauthTokenCheckResponse.message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OauthTokenCheckResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v6.services.pub.OauthTokenCheckResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .v6.services.pub.LoginResponse login = 1;
  if (this->_internal_has_login()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::login(this),
        _Internal::login(this).GetCachedSize(), target, stream);
  }

  // .v6.services.pub.OauthTokenResponse oauth = 2;
  if (this->_internal_has_oauth()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::oauth(this),
        _Internal::oauth(this).GetCachedSize(), target, stream);
  }

  // int32 status = 3;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_status(), target);
  }

  // string message = 4;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v6.services.pub.OauthTokenCheckResponse.message");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v6.services.pub.OauthTokenCheckResponse)
  return target;
}

size_t OauthTokenCheckResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v6.services.pub.OauthTokenCheckResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 4;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .v6.services.pub.LoginResponse login = 1;
  if (this->_internal_has_login()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.login_);
  }

  // .v6.services.pub.OauthTokenResponse oauth = 2;
  if (this->_internal_has_oauth()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.oauth_);
  }

  // int32 status = 3;
  if (this->_internal_status() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OauthTokenCheckResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OauthTokenCheckResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OauthTokenCheckResponse::GetClassData() const { return &_class_data_; }


void OauthTokenCheckResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OauthTokenCheckResponse*>(&to_msg);
  auto& from = static_cast<const OauthTokenCheckResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:v6.services.pub.OauthTokenCheckResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_has_login()) {
    _this->_internal_mutable_login()->::v6::services::pub::LoginResponse::MergeFrom(
        from._internal_login());
  }
  if (from._internal_has_oauth()) {
    _this->_internal_mutable_oauth()->::v6::services::pub::OauthTokenResponse::MergeFrom(
        from._internal_oauth());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OauthTokenCheckResponse::CopyFrom(const OauthTokenCheckResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v6.services.pub.OauthTokenCheckResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OauthTokenCheckResponse::IsInitialized() const {
  return true;
}

void OauthTokenCheckResponse::InternalSwap(OauthTokenCheckResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OauthTokenCheckResponse, _impl_.status_)
      + sizeof(OauthTokenCheckResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(OauthTokenCheckResponse, _impl_.login_)>(
          reinterpret_cast<char*>(&_impl_.login_),
          reinterpret_cast<char*>(&other->_impl_.login_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OauthTokenCheckResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_5fsvc_2eproto_getter, &descriptor_table_user_5fsvc_2eproto_once,
      file_level_metadata_user_5fsvc_2eproto[10]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace pub
}  // namespace services
}  // namespace v6
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::v6::services::pub::User*
Arena::CreateMaybeMessage< ::v6::services::pub::User >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::User >(arena);
}
template<> PROTOBUF_NOINLINE ::v6::services::pub::LoginRequest*
Arena::CreateMaybeMessage< ::v6::services::pub::LoginRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::LoginRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::v6::services::pub::LoginResponse*
Arena::CreateMaybeMessage< ::v6::services::pub::LoginResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::LoginResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::v6::services::pub::LastLoginResponse*
Arena::CreateMaybeMessage< ::v6::services::pub::LastLoginResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::LastLoginResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::v6::services::pub::Token*
Arena::CreateMaybeMessage< ::v6::services::pub::Token >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::Token >(arena);
}
template<> PROTOBUF_NOINLINE ::v6::services::pub::RegisterRequest*
Arena::CreateMaybeMessage< ::v6::services::pub::RegisterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::RegisterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::v6::services::pub::SmsVeifyCodeSendRequest*
Arena::CreateMaybeMessage< ::v6::services::pub::SmsVeifyCodeSendRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::SmsVeifyCodeSendRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::v6::services::pub::SmsVeifyCodeSendRequestNotUser*
Arena::CreateMaybeMessage< ::v6::services::pub::SmsVeifyCodeSendRequestNotUser >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::SmsVeifyCodeSendRequestNotUser >(arena);
}
template<> PROTOBUF_NOINLINE ::v6::services::pub::SmsVeifyCodeSendResponse*
Arena::CreateMaybeMessage< ::v6::services::pub::SmsVeifyCodeSendResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::SmsVeifyCodeSendResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::v6::services::pub::OauthTokenResponse*
Arena::CreateMaybeMessage< ::v6::services::pub::OauthTokenResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::OauthTokenResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::v6::services::pub::OauthTokenCheckResponse*
Arena::CreateMaybeMessage< ::v6::services::pub::OauthTokenCheckResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v6::services::pub::OauthTokenCheckResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
